{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/app/assets/images/redash_icon_small.png","webpack:///./client/app/assets/images sync \\.(png|jpe","webpack:///./client/app/assets/images/db-logos/Cassandra.png","webpack:///./client/app/assets/images/db-logos/arangodb.png","webpack:///./client/app/assets/images/db-logos/athena.png","webpack:///./client/app/assets/images/db-logos/aws_es.png","webpack:///./client/app/assets/images/db-logos/axibasetsd.png","webpack:///./client/app/assets/images/db-logos/azure_kusto.png","webpack:///./client/app/assets/images/db-logos/bigquery.png","webpack:///./client/app/assets/images/db-logos/bigquery_gce.png","webpack:///./client/app/assets/images/db-logos/clickhouse.png","webpack:///./client/app/assets/images/db-logos/cloudwatch.png","webpack:///./client/app/assets/images/db-logos/cloudwatch_insights.png","webpack:///./client/app/assets/images/db-logos/cockroach.png","webpack:///./client/app/assets/images/db-logos/corporate_memory.png","webpack:///./client/app/assets/images/db-logos/couchbase.png","webpack:///./client/app/assets/images/db-logos/csv.png","webpack:///./client/app/assets/images/db-logos/databend.png","webpack:///./client/app/assets/images/db-logos/databricks.png","webpack:///./client/app/assets/images/db-logos/db2.png","webpack:///./client/app/assets/images/db-logos/dgraph.png","webpack:///./client/app/assets/images/db-logos/drill.png","webpack:///./client/app/assets/images/db-logos/druid.png","webpack:///./client/app/assets/images/db-logos/e6data.png","webpack:///./client/app/assets/images/db-logos/elasticsearch.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png","webpack:///./client/app/assets/images/db-logos/elasticsearch2_XPackSQLElasticSearch.png","webpack:///./client/app/assets/images/db-logos/exasol.png","webpack:///./client/app/assets/images/db-logos/excel.png","webpack:///./client/app/assets/images/db-logos/firebolt.png","webpack:///./client/app/assets/images/db-logos/google_analytics.png","webpack:///./client/app/assets/images/db-logos/google_analytics4.png","webpack:///./client/app/assets/images/db-logos/google_search_console.png","webpack:///./client/app/assets/images/db-logos/google_spreadsheets.png","webpack:///./client/app/assets/images/db-logos/graphite.png","webpack:///./client/app/assets/images/db-logos/hive.png","webpack:///./client/app/assets/images/db-logos/hive_http.png","webpack:///./client/app/assets/images/db-logos/ignite.png","webpack:///./client/app/assets/images/db-logos/impala.png","webpack:///./client/app/assets/images/db-logos/influxdb.png","webpack:///./client/app/assets/images/db-logos/influxdbv2.png","webpack:///./client/app/assets/images/db-logos/jirajql.png","webpack:///./client/app/assets/images/db-logos/json.png","webpack:///./client/app/assets/images/db-logos/kibana.png","webpack:///./client/app/assets/images/db-logos/kylin.png","webpack:///./client/app/assets/images/db-logos/mapd.png","webpack:///./client/app/assets/images/db-logos/memsql.png","webpack:///./client/app/assets/images/db-logos/mongodb.png","webpack:///./client/app/assets/images/db-logos/mssql.png","webpack:///./client/app/assets/images/db-logos/mssql_odbc.png","webpack:///./client/app/assets/images/db-logos/mysql.png","webpack:///./client/app/assets/images/db-logos/nz.png","webpack:///./client/app/assets/images/db-logos/oracle.png","webpack:///./client/app/assets/images/db-logos/pg.png","webpack:///./client/app/assets/images/db-logos/phoenix.png","webpack:///./client/app/assets/images/db-logos/pinot.png","webpack:///./client/app/assets/images/db-logos/presto.png","webpack:///./client/app/assets/images/db-logos/prometheus.png","webpack:///./client/app/assets/images/db-logos/python.png","webpack:///./client/app/assets/images/db-logos/qubole.png","webpack:///./client/app/assets/images/db-logos/rds_mysql.png","webpack:///./client/app/assets/images/db-logos/redshift.png","webpack:///./client/app/assets/images/db-logos/redshift_iam.png","webpack:///./client/app/assets/images/db-logos/results.png","webpack:///./client/app/assets/images/db-logos/rockset.png","webpack:///./client/app/assets/images/db-logos/salesforce.png","webpack:///./client/app/assets/images/db-logos/scylla.png","webpack:///./client/app/assets/images/db-logos/snowflake.png","webpack:///./client/app/assets/images/db-logos/sparql_endpoint.png","webpack:///./client/app/assets/images/db-logos/sqlite.png","webpack:///./client/app/assets/images/db-logos/tinybird.png","webpack:///./client/app/assets/images/db-logos/treasuredata.png","webpack:///./client/app/assets/images/db-logos/trino.png","webpack:///./client/app/assets/images/db-logos/uptycs.png","webpack:///./client/app/assets/images/db-logos/url.png","webpack:///./client/app/assets/images/db-logos/vertica.png","webpack:///./client/app/assets/images/db-logos/yandex_appmetrika.png","webpack:///./client/app/assets/images/db-logos/yandex_disk.png","webpack:///./client/app/assets/images/db-logos/yandex_metrika.png","webpack:///./client/app/assets/images/destinations/asana.png","webpack:///./client/app/assets/images/destinations/chatwork.png","webpack:///./client/app/assets/images/destinations/datadog.png","webpack:///./client/app/assets/images/destinations/discord.png","webpack:///./client/app/assets/images/destinations/email.png","webpack:///./client/app/assets/images/destinations/hangouts_chat.png","webpack:///./client/app/assets/images/destinations/mattermost.png","webpack:///./client/app/assets/images/destinations/microsoft_teams_webhook.png","webpack:///./client/app/assets/images/destinations/pagerduty.png","webpack:///./client/app/assets/images/destinations/slack.png","webpack:///./client/app/assets/images/destinations/webex.png","webpack:///./client/app/assets/images/destinations/webhook.png","webpack:///./client/app/assets/images/favicon-16x16.png","webpack:///./client/app/assets/images/favicon-32x32.png","webpack:///./client/app/assets/images/favicon-96x96.png","webpack:///./client/app/assets/images/fixtures/map-tile.png","webpack:///./client/app/assets/images/google_logo.svg","webpack:///./client/app/assets/images/illustrations/alert.svg","webpack:///./client/app/assets/images/illustrations/dashboard.svg","webpack:///./client/app/assets/images/illustrations/no-query-results.svg","webpack:///./client/app/assets/images/illustrations/query.svg","webpack:///./client/app/assets/images/logo.png","webpack:///./client/app/assets/images/logo_white.png","webpack:///[\\\\/.]test[\\\\./]).)*\\.jsx","webpack:///./client/app/assets/less/main.less?eab9","webpack:///./client/app/assets/less/ant.less?da7c","webpack:///./client/app/components/Link.tsx","webpack:///./client/app/services/location.js","webpack:///./client/app/services/restoreSession.jsx","webpack:///./client/app/services/axios.js","webpack:///./client/app/services/auth.js","webpack:///./client/app/services/policy/index.js","webpack:///./client/app/services/policy/DefaultPolicy.js","webpack:///./client/app/services/organizationStatus.js","webpack:///./client/app/components/DynamicComponent.jsx","webpack:///./client/app/components/PlainButton.tsx","webpack:///./client/app/components/Tooltip.tsx","webpack:///./client/app/lib/hooks/useUniqueId.ts","webpack:///./client/app/lib/hooks/useLazyRef.ts","webpack:///./client/app/components/BigMessage.jsx","webpack:///./client/app/components/HelpTrigger.jsx","webpack:///./client/app/components/DialogWrapper.jsx","webpack:///./client/app/services/url.js","webpack:///./client/app/components/ApplicationArea/ErrorMessageDetails.jsx","webpack:///./client/app/components/ApplicationArea/ErrorMessage.jsx","webpack:///./client/app/components/ApplicationArea/Router.jsx","webpack:///./client/app/components/ApplicationArea/navigateTo.js","webpack:///./client/app/services/recordEvent.js","webpack:///./client/app/config/dashboard-grid-options.js","webpack:///./client/app/services/parameters/Parameter.js","webpack:///./client/app/services/parameters/TextParameter.js","webpack:///./client/app/services/parameters/NumberParameter.js","webpack:///./client/app/services/parameters/EnumParameter.js","webpack:///./client/app/services/query-result.js","webpack:///./client/app/lib/localOptions.js","webpack:///./client/app/services/query.js","webpack:///./client/app/services/parameters/QueryBasedDropdownParameter.js","webpack:///./client/app/services/parameters/DateParameter.js","webpack:///./client/app/services/parameters/DateRangeParameter.js","webpack:///./client/app/services/parameters/index.js","webpack:///./client/app/services/widget.js","webpack:///./client/app/services/dashboard.js","webpack:///./client/app/components/dashboards/CreateDashboardDialog.jsx","webpack:///./client/app/services/settingsMenu.js","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/VersionInfo.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/DesktopNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/MobileNavbar.jsx","webpack:///./client/app/components/ApplicationArea/ApplicationLayout/index.jsx","webpack:///./client/app/components/ApplicationArea/routeWithUserSession.tsx","webpack:///./client/app/components/empty-state/EmptyState.jsx","webpack:///./client/app/services/notification.js","webpack:///./client/app/services/organizationSettings.js","webpack:///./client/app/components/BeaconConsent.jsx","webpack:///./client/app/services/routes.ts","webpack:///./client/app/pages/home/components/FavoritesList.jsx","webpack:///./client/app/pages/home/Home.jsx","webpack:///./client/app/components/PageHeader/index.jsx","webpack:///./client/app/components/admin/Layout.jsx","webpack:///./client/app/components/FavoritesControl.jsx","webpack:///./client/app/components/proptypes.js","webpack:///./client/app/components/TimeAgo.jsx","webpack:///./client/app/lib/utils.js","webpack:///./client/app/components/items-list/components/ItemsTable.jsx","webpack:///./client/app/components/admin/RQStatus.jsx","webpack:///./client/app/pages/admin/Jobs.jsx","webpack:///./client/app/components/Paginator.jsx","webpack:///./client/app/components/tags-control/EditTagsDialog.jsx","webpack:///./client/app/components/tags-control/TagsControl.jsx","webpack:///./client/app/components/queries/SchedulePhrase.jsx","webpack:///./client/app/components/items-list/ItemsList.tsx","webpack:///./client/app/components/items-list/classes/Paginator.js","webpack:///./client/app/components/items-list/classes/Sorter.js","webpack:///./client/app/components/items-list/classes/ItemsFetcher.js","webpack:///./client/app/components/items-list/classes/ItemsSource.js","webpack:///./client/app/components/items-list/classes/StateStorage.js","webpack:///./client/app/components/items-list/components/LoadingState.jsx","webpack:///./client/app/pages/admin/OutdatedQueries.jsx","webpack:///./client/app/components/admin/StatusBlock.jsx","webpack:///./client/app/pages/admin/SystemStatus.jsx","webpack:///./client/app/services/alert.js","webpack:///./client/app/pages/alerts/AlertsList.jsx","webpack:///./client/app/pages/alert/components/MenuButton.jsx","webpack:///./client/app/pages/alert/components/Title.jsx","webpack:///./client/app/pages/alert/components/Criteria.jsx","webpack:///./client/app/pages/alert/components/Rearm.jsx","webpack:///./client/app/lib/hooks/useSearchResults.js","webpack:///./client/app/components/QuerySelector.jsx","webpack:///./client/app/pages/alert/components/Query.jsx","webpack:///./client/app/components/SelectItemsDialog.jsx","webpack:///./client/app/services/destination.js","webpack:///./client/app/services/alert-subscription.js","webpack:///./client/app/components/groups/ListItemAddon.jsx","webpack:///./client/app/components/EmailSettingsWarning.jsx","webpack:///./client/app/pages/alert/components/AlertDestinations.jsx","webpack:///./client/app/pages/alert/components/HorizontalFormItem.jsx","webpack:///./client/app/pages/alert/AlertView.jsx","webpack:///./client/app/pages/alert/components/NotificationTemplate.jsx","webpack:///./client/app/pages/alert/AlertEdit.jsx","webpack:///./client/app/pages/alert/AlertNew.jsx","webpack:///./client/app/pages/alert/Alert.jsx","webpack:///./client/app/services/getTags.js","webpack:///./client/app/components/TagsList.tsx","webpack:///./client/app/components/items-list/components/Sidebar.jsx","webpack:///./client/app/components/items-list/hooks/useItemsListExtraActions.js","webpack:///./client/app/components/layouts/ContentWithSidebar.jsx","webpack:///./client/app/components/NoTaggedObjectsFound.jsx","webpack:///./client/app/pages/dashboards/components/DashboardListEmptyState.tsx","webpack:///./client/app/pages/dashboards/DashboardList.jsx","webpack:///./client/app/services/KeyboardShortcuts.js","webpack:///./client/app/components/ParameterApplyButton.jsx","webpack:///./client/app/lib/calculateTextWidth.ts","webpack:///./client/app/components/SelectWithVirtualScroll.tsx","webpack:///./client/app/components/DateInput.jsx","webpack:///./client/app/components/DateTimeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicButton.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDatePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateParameter.jsx","webpack:///./client/app/components/DateRangeInput.jsx","webpack:///./client/app/components/DateTimeRangeInput.jsx","webpack:///./client/app/components/dynamic-parameters/DynamicDateRangePicker.jsx","webpack:///./client/app/components/dynamic-parameters/DateRangeParameter.jsx","webpack:///./client/app/components/QueryBasedParameterInput.jsx","webpack:///./client/app/components/ParameterValueInput.jsx","webpack:///./client/app/components/EditParameterSettingsDialog.jsx","webpack:///./client/app/components/Parameters.jsx","webpack:///./client/app/components/Timer.jsx","webpack:///./client/app/components/visualizations/VisualizationName.jsx","webpack:///./client/app/components/QueryLink.jsx","webpack:///./client/app/components/Filters.jsx","webpack:///./client/app/lib/useQueryResultData.js","webpack:///./client/app/lib/hooks/useImmutableCallback.js","webpack:///./client/app/components/visualizations/visualizationComponents.jsx","webpack:///./client/app/components/visualizations/VisualizationRenderer.jsx","webpack:///./client/app/components/dashboards/ExpandedWidgetDialog.jsx","webpack:///./client/app/components/ParameterMappingInput.jsx","webpack:///./client/app/components/dashboards/EditParameterMappingsDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/Widget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/VisualizationWidget.jsx","webpack:///./client/app/components/dashboards/TextboxDialog.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/TextboxWidget.jsx","webpack:///./client/app/components/dashboards/dashboard-widget/RestrictedWidget.jsx","webpack:///./client/app/components/dashboards/AutoHeightController.js","webpack:///./client/app/components/dashboards/DashboardGrid.jsx","webpack:///./client/app/services/resizeObserver.js","webpack:///./client/app/components/dashboards/AddWidgetDialog.jsx","webpack:///./client/app/components/PreviewCard.jsx","webpack:///./client/app/services/sanitize.js","webpack:///./client/app/services/user.js","webpack:///./client/app/components/PermissionsEditorDialog/index.jsx","webpack:///./client/app/components/InputWithCopy.jsx","webpack:///./client/app/pages/dashboards/components/ShareDashboardDialog.jsx","webpack:///./client/app/lib/hooks/useFullscreenHandler.js","webpack:///./client/app/pages/dashboards/hooks/useRefreshRateHandler.js","webpack:///./client/app/pages/dashboards/hooks/useEditModeHandler.js","webpack:///./client/app/pages/dashboards/hooks/useDuplicateDashboard.js","webpack:///./client/app/pages/dashboards/hooks/useDashboard.js","webpack:///./client/app/components/EditInPlace.jsx","webpack:///./client/app/pages/dashboards/components/DashboardHeader.jsx","webpack:///./client/app/pages/dashboards/DashboardPage.jsx","webpack:///./client/app/components/ApplicationArea/routeWithApiKeySession.jsx","webpack:///./client/app/pages/dashboards/PublicDashboardPage.jsx","webpack:///./client/app/components/items-list/components/EmptyState.jsx","webpack:///./client/app/components/cards-list/CardsList.tsx","webpack:///./client/app/components/Collapse.jsx","webpack:///./client/app/components/dynamic-form/getFieldLabel.js","webpack:///./client/app/components/AceEditorInput.jsx","webpack:///./client/app/components/dynamic-form/fields/InputField.jsx","webpack:///./client/app/components/dynamic-form/DynamicFormField.jsx","webpack:///./client/app/components/dynamic-form/fields/CheckboxField.jsx","webpack:///./client/app/components/dynamic-form/fields/FileField.jsx","webpack:///./client/app/components/dynamic-form/fields/SelectField.jsx","webpack:///./client/app/components/dynamic-form/fields/NumberField.jsx","webpack:///./client/app/components/dynamic-form/fields/TextAreaField.jsx","webpack:///./client/app/components/dynamic-form/fields/AceEditorField.jsx","webpack:///./client/app/components/dynamic-form/fields/ContentField.jsx","webpack:///./client/app/components/dynamic-form/dynamicFormHelper.js","webpack:///./client/app/components/dynamic-form/DynamicForm.jsx","webpack:///./client/app/components/CreateSourceDialog.jsx","webpack:///./client/app/components/SettingsWrapper.jsx","webpack:///./client/app/services/data-source.js","webpack:///./client/app/pages/data-sources/DataSourcesList.jsx","webpack:///./client/app/pages/data-sources/EditDataSource.jsx","webpack:///./client/app/pages/destinations/DestinationsList.jsx","webpack:///./client/app/pages/destinations/EditDestination.jsx","webpack:///./client/app/components/groups/CreateGroupDialog.jsx","webpack:///./client/app/services/group.js","webpack:///./client/app/components/groups/DeleteGroupButton.jsx","webpack:///./client/app/pages/groups/GroupsList.jsx","webpack:///./client/app/components/groups/GroupName.jsx","webpack:///./client/app/components/groups/DetailsPageSidebar.jsx","webpack:///./client/app/pages/groups/GroupDataSources.jsx","webpack:///./client/app/pages/groups/GroupMembers.jsx","webpack:///./client/app/pages/queries-list/QueriesListEmptyState.jsx","webpack:///./client/app/pages/queries-list/QueriesList.jsx","webpack:///./client/app/components/Resizable/index.jsx","webpack:///./client/app/lib/queryFormat.ts","webpack:///./client/app/pages/queries/hooks/useQueryFlags.js","webpack:///./client/app/pages/queries/hooks/useArchiveQuery.jsx","webpack:///./client/app/pages/queries/hooks/useUpdateQuery.jsx","webpack:///./client/app/pages/queries/hooks/useDuplicateQuery.js","webpack:///./client/app/components/CodeBlock.jsx","webpack:///./client/app/components/queries/ApiKeyDialog/index.jsx","webpack:///./client/app/pages/queries/components/QueryPageHeader.jsx","webpack:///./client/app/pages/queries/hooks/useRenameQuery.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryTags.js","webpack:///./client/app/pages/queries/hooks/usePublishQuery.js","webpack:///./client/app/pages/queries/hooks/useUnpublishQuery.js","webpack:///./client/app/pages/queries/hooks/useApiKeyDialog.js","webpack:///./client/app/pages/queries/hooks/usePermissionsEditorDialog.js","webpack:///./client/app/pages/queries/components/QueryMetadata.jsx","webpack:///./client/app/pages/queries/components/QueryVisualizationTabs.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionStatus.jsx","webpack:///./client/app/pages/queries/components/QuerySourceAlerts.jsx","webpack:///./client/app/pages/queries/components/wrapQueryPage.jsx","webpack:///./client/app/components/queries/AddToDashboardDialog.jsx","webpack:///./client/app/components/queries/EmbedQueryDialog.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryResultsLink.jsx","webpack:///./client/app/components/EditVisualizationButton/QueryControlDropdown.jsx","webpack:///./client/app/components/EditVisualizationButton/index.jsx","webpack:///./client/app/pages/queries/components/QueryExecutionMetadata.jsx","webpack:///./client/app/pages/queries/hooks/useAddToDashboardDialog.js","webpack:///./client/app/pages/queries/hooks/useEmbedDialog.js","webpack:///./client/app/pages/queries/hooks/useDataSourceSchema.js","webpack:///./client/app/components/queries/SchemaBrowser.jsx","webpack:///./client/app/components/queries/QueryEditor/ace.js","webpack:///./client/app/services/query-snippet.js","webpack:///./client/app/components/queries/QueryEditor/AutocompleteToggle.jsx","webpack:///./client/app/components/queries/QueryEditor/AutoLimitCheckbox.jsx","webpack:///./client/app/components/queries/QueryEditor/QueryEditorControls.jsx","webpack:///./client/app/components/queries/QueryEditor/index.jsx","webpack:///./client/app/lib/accessibility.ts","webpack:///./client/app/services/databricks-data-source.js","webpack:///./client/app/components/queries/editor-components/databricks/useDatabricksSchema.js","webpack:///./client/app/components/queries/editor-components/databricks/DatabricksSchemaBrowser.jsx","webpack:///./client/app/components/queries/editor-components/editorComponents.js","webpack:///./client/app/pages/queries/hooks/useVisualizationTabHandler.js","webpack:///./client/app/pages/queries/hooks/useAutocompleteFlags.js","webpack:///./client/app/pages/queries/hooks/useAutoLimitFlags.js","webpack:///./client/app/components/queries/editor-components/index.js","webpack:///./client/app/services/notifications.js","webpack:///./client/app/pages/queries/hooks/useQueryExecute.js","webpack:///./client/app/pages/queries/hooks/useQueryParameters.js","webpack:///./client/app/components/queries/ScheduleDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditScheduleDialog.js","webpack:///./client/app/services/visualization.js","webpack:///./client/app/components/visualizations/EditVisualizationDialog.jsx","webpack:///./client/app/pages/queries/hooks/useEditVisualizationDialog.js","webpack:///./client/app/pages/queries/hooks/useDeleteVisualization.js","webpack:///./client/app/pages/queries/hooks/useUpdateQueryDescription.js","webpack:///./client/app/pages/queries/components/QuerySourceTypeIcon.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdownItem.jsx","webpack:///./client/app/pages/queries/components/QuerySourceDropdown.jsx","webpack:///./client/app/pages/queries/QuerySource.jsx","webpack:///./client/app/pages/queries/hooks/useQuery.js","webpack:///./client/app/pages/queries/hooks/useQueryDataSources.js","webpack:///./client/app/pages/queries/hooks/useUnsavedChangesAlert.js","webpack:///./client/app/pages/queries/hooks/useAddNewParameterDialog.js","webpack:///./client/app/pages/queries/hooks/useAddVisualizationDialog.js","webpack:///./client/app/pages/queries/components/QueryViewButton.jsx","webpack:///./client/app/pages/queries/QueryView.jsx","webpack:///./client/app/pages/queries/VisualizationEmbed.jsx","webpack:///./client/app/components/query-snippets/QuerySnippetDialog.jsx","webpack:///./client/app/pages/query-snippets/QuerySnippetsList.jsx","webpack:///./client/app/pages/settings/hooks/useOrganizationSettings.js","webpack:///./client/app/pages/settings/components/prop-types.js","webpack:///./client/app/pages/settings/components/GeneralSettings/FormatSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/PlotlySettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/FeatureFlagsSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/BeaconConsentSettings.jsx","webpack:///./client/app/pages/settings/components/GeneralSettings/index.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/PasswordLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/GoogleLoginSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/SAMLSettings.jsx","webpack:///./client/app/pages/settings/components/AuthSettings/index.jsx","webpack:///./client/app/pages/settings/OrganizationSettings.jsx","webpack:///./client/app/styles/formStyle.ts","webpack:///./client/app/services/utils.js","webpack:///./client/app/pages/users/components/CreateUserDialog.jsx","webpack:///./client/app/pages/users/UsersList.jsx","webpack:///./client/app/components/UserGroups.jsx","webpack:///./client/app/pages/users/hooks/useUserGroups.js","webpack:///./client/app/pages/users/components/UserInfoForm.jsx","webpack:///./client/app/pages/users/components/ApiKeyForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ChangePasswordDialog.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordLinkAlert.jsx","webpack:///./client/app/pages/users/components/PasswordForm/PasswordResetForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/ResendInvitationForm.jsx","webpack:///./client/app/pages/users/components/PasswordForm/index.jsx","webpack:///./client/app/pages/users/components/ToggleUserForm.jsx","webpack:///./client/app/pages/users/components/EditableUserProfile.jsx","webpack:///./client/app/pages/users/components/ReadOnlyUserProfile.jsx","webpack:///./client/app/pages/users/UserProfile.jsx","webpack:///./client/app/config/index.js","webpack:///./client/app/components/ApplicationArea/handleNavigationIntent.js","webpack:///./client/app/config/antd-spinner.jsx","webpack:///./client/app/services/offline-listener.js","webpack:///./client/app/index.js","webpack:///./client/app/components/ApplicationArea/index.jsx","webpack:///./client/app/assets/images/avatar.svg","webpack:///./node_modules/moment/locale sync en"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","webpackEmptyContext","Link","_ref2","children","props","_objectWithoutProperties","_excluded2","React","createElement","Component","ButtonLink","_ref","_excluded","WithIcon","_ref3","icon","alt","_excluded3","className","External","_ref4","_ref4$icon","aria-hidden","_ref4$alt","_excluded4","_extends","target","rel","Button","history","createBrowserHistory","normalizeLocation","rawLocation","pathname","search","hash","path","mapValues","qs","parse","isNil","trimStart","url","concat","location","listen","handler","isFunction","unused","action","confirmChange","block","nextLocation","update","newLocation","replace","arguments","undefined","isObject","omitBy","isUndefined","extend","stringify","setPath","setSearch","setHash","locationChanged","showRestoreSessionPrompt","loginUrl","onSuccess","popup","Modal","warning","content","okText","Fragment","centered","mask","maskClosable","keyboard","onOk","closeModal","closed","width","height","windowLeft","windowTop","windowWidth","windowHeight","popupOptions","_objectSpread","screenX","screenY","innerWidth","innerHeight","left","Math","floor","top","menubar","toolbar","resizable","scrollbars","status","open","join","handlePostMessage","event","type","close","removeEventListener","addEventListener","focus","restoreSessionPromise","axios","axiosLib","paramsSerializer","params","xsrfCookieName","xsrfHeaderName","interceptors","response","use","createAuthRefreshInterceptor","error","message","isAxiosError","includes","Promise","reject","statusCodes","parseInt","requestUrl","Auth","getLoginUrl","pauseInstanceWhileRefreshing","request","config","apiKey","getApiKey","headers","Authorization","currentUser","_isAdmin","canEdit","userId","user_id","user","this","isAdmin","canCreate","hasPermission","permission","permissions","clientConfig","messages","logger","debug","session","loaded","AuthUrls","Login","updateSession","sessionData","client_config","isAuthenticated","setLoginUrl","login","next","encodeURI","href","logout","loadSession","setApiKey","then","loadConfig","requireSession","opener","postMessage","origin","catch","policy","refresh","canCreateDataSource","isCreateDataSourceEnabled","canCreateDestination","isCreateDestinationEnabled","canCreateDashboard","isCreateDashboardEnabled","canCreateAlert","canCreateUser","isCreateUserEnabled","isCreateQuerySnippetEnabled","getDashboardRefreshIntervals","dashboardRefreshIntervals","isArray","getQueryRefreshIntervals","queryRefreshIntervals","canRun","constructor","objectCounters","object_counters","componentsRegistry","Map","activeInstances","Set","registerComponent","component","isString","set","forEach","dynamicComponent","forceUpdate","DynamicComponent","componentDidMount","add","componentWillUnmount","delete","render","_this$props","fallback","RealComponent","_defineProperty","PropTypes","string","isRequired","node","PlainButton","rest","classNames","Tooltip","title","restProps","liveTitle","role","aria-live","aria-relevant","AntTooltip","trigger","useUniqueId","prefix","getInitialValue","lazyRef","uniqueId","useRef","current","BigMessage","messageId","aria-labelledby","cx","propTypes","defaultProps","TYPES","HOME","VALUE_SOURCE_OPTIONS","SHARE_DASHBOARD","AUTHENTICATION_OPTIONS","USAGE_DATA_SHARING","DS_ATHENA","DS_BIGQUERY","DS_URL","DS_MONGODB","DS_GOOGLE_SPREADSHEETS","DS_GOOGLE_ANALYTICS","DS_AXIBASETSD","DS_RESULTS","ALERT_SETUP","MAIL_CONFIG","ALERT_NOTIF_TEMPLATE_GUIDE","FAVORITES","MANAGE_PERMISSIONS","NUMBER_FORMAT_SPECS","GETTING_STARTED","DASHBOARDS","QUERIES","ALERTS","_slicedToArray","DOMAIN","HelpTriggerPropTypes","showTooltip","bool","renderAsLink","HelpTriggerDefaultProps","HelpTrigger","types","_class","allowedDomains","drawerClassName","createRef","visible","loading","currentUrl","clearTimeout","iframeLoadingTimeout","setState","iframeRef","src","setTimeout","some","domain","startsWith","helpTriggerType","shiftKey","ctrlKey","metaKey","preventDefault","loadIframe","getUrl","onPostMessageReceived","targetUrl","tooltip","state","isAllowedDomain","shouldRenderAsLink","style","marginLeft","onClick","openDrawer","Drawer","placement","closable","onClose","closeDrawer","destroyOnClose","CloseOutlinedIcon","ref","ready","onLoad","onIframeLoaded","onLeave","openPageUrl","oneOf","helpTriggerWithTypes","DialogPropType","shape","func","onCancel","afterClose","dismiss","wrap","DialogComponent","showModal","dialog","okButtonProps","cancelButtonProps","pendingCloseTask","handlers","onDismiss","container","document","ReactDOM","processDialogClose","setAdditionalDialogProps","disabled","finally","closeDialog","dismissDialog","body","appendChild","unmountComponentAtNode","removeChild","newProps","openDialog","link","display","fragmentProps","setAttribute","pick","fragments","normalize","ErrorMessageDetails","getErrorMessageByStatus","defaultMessage","getErrorMessage","ErrorMessage","console","errorDetailsProps","data-test","instanceOf","CurrentRouteContext","createContext","stripBase","baseHref","trimEnd","substr","Router","routes","onRouteChange","_useState2","useState","currentRoute","setCurrentRoute","currentPathRef","errorHandlerRef","useEffect","isAbandoned","router","UniversalRouter","resolveRoute","routeParams","route","reset","random","toString","unlisten","Provider","ErrorBoundary","renderError","navigateTo","arrayOf","objectOf","any","events","post","debounce","eventsToSend","recordEvent","objectType","objectId","additionalProperties","object_type","object_id","timestamp","Date","now","screen_resolution","screen","Parameter","parameter","parentQueryId","global","locals","urlPrefix","param","extra","getExecutionValue","setValue","isNull","normalizedValue","pendingValue","isEqual","$$value","isEmptyValue","normalizeValue","updateLocals","each","local","clearPendingValue","setPendingValue","applyPendingValue","hasPendingValue","toUrlParams","isEmpty","fromUrlParams","query","has","toQueryTextFragment","toSaveableObject","omit","TextParameter","super","NumberParameter","toNumber","isNaN","EnumParameter","enumOptions","multiValuesOptions","enumOptionsArray","split","intersection","joinListValues","separator","suffix","parameterValues","v","urlParam","JSON","valueFromJson","filterTypes","getColumnFriendlyName","column","typeSplit","indexOf","parts","getColumnNameWithoutType","a","toUpperCase","QueryResultResource","createOrSaveUrl","ExecutionStatus","statuses","1","2","3","4","handleErrorResponse","queryResult","job","sleep","ms","fetchDataFromJob","jobId","interval","QueryResult","deferred","onStatusChange","promise","query_result","updatedAt","moment","isLoadingResult","columnTypes","rows","row","forOwn","k","newType","isNumber","isValid","test","isDateTime","match","utc","columns","QueryResultError","getId","cancelExecution","getStatus","getError","getLog","log","getUpdatedAt","retrieved_at","updated_at","getRuntime","runtime","getRawData","getData","getColumns","getColumnNames","columnNames","getColumnFriendlyNames","col","getTruncated","truncated","getFilters","filters","filter","friendlyName","values","multiple","uniqBy","isMoment","unix","toPromise","statusCallback","queryId","loadLatestCachedResult","parameters","loadResult","tryCount","query_result_id","pow","refreshStatus","tryNumber","jobResponse","getLink","fileType","getName","queryName","format","applyAutoLimit","maxAge","apply_auto_limit","max_age","dataSourceId","data_source_id","query_id","PREFIX","defaultValue","fullKey","localStorage","getItem","setItem","Mustache","escape","identity","Query","options","isNew","hasDailySchedule","schedule","scheduleInLocalTime","hour","minute","hasResult","latest_query_data","latest_query_data_id","paramsRequired","getParameters","hasParameters","getParametersDefs","prepareQueryResultExecution","execute","missingParams","getMissing","paramsWord","valuesWord","getById","getQueryResult","getByQueryId","getExecutionValues","getAutoLimit","getQueryResultByText","selectedQueryText","queryText","source","encodeURIComponent","getQueryResultPromise","$parameters","Parameters","favorite","unfavorite","clone","newQuery","queryString","updateParameters","initFromQueryString","parseQuery","uniq","collectParams","part","union","cachedQueryText","parameterNames","parametersMap","createParameter","find","parameterDef","zipObject","hasPendingValues","applyPendingValues","errorMessage","getQuery","mapResults","results","QueryService","save","saveOrCreateUrl","recent","archive","myQueries","fork","resultById","asDropdown","associatedDropdown","dropdownQueryId","favorites","localOptions","tags","can_edit","QueryBasedDropdownParameter","loadDropdownValues","DATETIME_FORMATS","date","DYNAMIC_DATES","yesterday","subtract","DynamicDateType","isDynamicDateString","substring","isDynamicDate","getDynamicDateFromString","DateParameter","useCurrentDateTime","findKey","hasDynamicValue","untilNow","from","withNow","DYNAMIC_DATE_RANGES","today","startOf","endOf","this_week","this_month","this_year","last_week","last_month","last_year","last_hour","last_8_hours","last_24_hours","last_7_days","last_14_days","last_30_days","last_60_days","last_90_days","last_12_months","DynamicDateRangeType","isDynamicDateRangeString","isDynamicDateRange","getDynamicDateRangeFromString","DateRangeParameter","start","end","_this$normalizedValue2","keyStart","keyEnd","dates","cloneParameter","WidgetTypeEnum","ParameterMappingType","DashboardLevel","WidgetLevel","StaticValue","Widget","visualizationOptions","widget","autoHeight","sizeX","round","dashboardGridOptions","sizeY","minSizeX","maxSizeX","minSizeY","maxSizeY","visualization","registeredVisualizations","minColumns","isFinite","maxColumns","min","ceil","minRows","maxRows","defaultWidth","defaultColumns","defaultHeight","defaultRows","calculatePositionOptions","position","restricted","truncate","text","load","force","refreshStartedAt","merge","isStaticParam","getParameterMappings","MappingType","mappings","queryParams","localTypes","localParameters","mapping","sortBy","paramOrder","size","parameterMappings","existingParams","mapTo","removedParams","difference","getLocalParameters","urlForDashboard","slug","collectDashboardFilters","dashboard","queryResults","urlParams","_","queryFilters","queryFilter","hasQueryStringValue","dashboard_filters_enabled","prepareWidgetsForDashboard","widgets","defaultWidgetSizeY","max","chain","w","groupBy","reduce","widgetsAtRow","calculateNewWidgetPosition","existingWidgets","newWidget","bottomLine","right","bottom","item","to","Array","constant","range","first","Dashboard","prepareDashboardWidgets","transformSingle","publicAccessEnabled","public_url","transformResponse","DashboardService","legacy","getByToken","token","myDashboards","_ref5","_ref6","_ref7","CreateDashboardDialog","setName","_useState4","setIsValid","_useState6","saveInProgress","setSaveInProgress","footer","cancelText","wrapProps","Input","onChange","trim","onPressEnter","placeholder","aria-label","autoFocus","globalParams","resultingGlobalParams","globalParamOrder","addWidget","textOrVisualization","dashboard_id","isHidden","visualization_id","wrapDialog","SettingsMenuItem","menuItem","pathPrefix","isActive","isAvailable","remove","items","getAvailableItems","getActiveItem","strippedPath","VersionInfo","version","frontendVersion","newVersionAvailable","NavbarSection","Menu","selectable","theme","useNavbarActiveState","useContext","useMemo","dashboards","queries","dataSources","alerts","DesktopNavbar","firstSettingsTab","settingsMenu","activeState","canCreateQuery","logoUrl","Item","DesktopOutlinedIcon","CodeOutlinedIcon","AlertOutlinedIcon","SubMenu","popupClassName","tabIndex","PlusOutlinedIcon","QuestionCircleOutlinedIcon","SettingOutlinedIcon","profile_image_url","Divider","MobileNavbar","getPopupContainer","Dropdown","overlayStyle","minWidth","overlay","ghost","MenuOutlinedIcon","ApplicationLayout","mobileNavbarContainerRef","getMobileNavbarPopupContainer","useCallback","UserSessionWrapper","bodyClass","setIsAuthenticated","isCancelled","all","organizationStatus","classList","toggle","ErrorBoundaryContext","Consumer","handleError","pageTitle","onError","routeWithUserSession","originalRender","Step","show","completed","urlText","commonProps","done","EmptyStateHelpMessage","EmptyState","header","description","illustration","helpMessage","onboardingMode","showAlertStep","showDashboardStep","showDataSourceStep","showInviteStep","getStepsItems","illustrationPath","dataSource","alert","inviteUsers","isCompleted","data_sources","users","showCreateDashboardDialog","step","defaultStepsItems","stepsItems","imageSource","urlTarget","getStepItems","notification","duration","simpleNotification","success","Text","Typography","BeaconConsent","hide","setHide","showBeaconConsentMessage","hideConsentCard","confirmConsent","confirm","OrgSettings","beacon_consent","Card","bordered","_sorted","_items","getRouteParamsCount","tokens","pathToRegexp","register","idOrNull","unregister","FavoriteList","resource","itemUrl","emptyState","setItems","setLoading","LoadingOutlinedIcon","is_draft","DashboardAndQueryFavoritesList","DeprecatedEmbedFeatureAlert","Alert","EmailNotVerifiedAlert","verifyEmail","Home","pageProps","PageHeader","actions","Layout","activeTab","selectedKeys","FavoritesControl","toggleItem","callback","is_favorite","savedIsFavorite","syntax","doc","doc_url","type_name","Table","RefreshScheduleType","number","time","day_of_week","until","RefreshScheduleDefault","UserProfile","email","profileImageUrl","isDisabled","Destination","created_at","queryHash","is_safe","is_archived","api_key","AlertOptions","op","oneOfType","custom_subject","custom_body","last_triggered_at","rearm","checkMoment","propName","componentName","isRequiredValid","isOptionalValid","Moment","TimeAgo","autoUpdate","variation","startDate","toMoment","dateTimeFormat","fromNow","timer","setInterval","clearInterval","IntervalEnum","NEVER","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MILLISECONDS","formatDateTimeValue","parsed","formatDateTime","formatDate","dateFormat","localizeTime","_time$split2","hrs","mins","secondsToInterval","count","pluralize","durationHumanize","durationInSeconds","ret","_secondsToInterval","rounded","omitSingleValueNumber","toHuman","formatNumber","fractionDigits","toFixed","prettySizeWithUnit","bytes","divisor","units","parseFloat","unit","greatestDivisor","prettyNumberWithUnit","prettySize","_prettySizeWithUnit","formatColumnValue","columnType","sortable","sorter","Columns","overrides","avatar","formatTitle","dateTime","timeAgo","timeAgoCustomProps","custom","ItemsTable","record","rowKey","prepareColumns","orderByField","orderByReverse","toggleSorting","orderByDirection","field","index","onHeaderCell","dataIndex","defaultSortOrder","tableDataProps","onTableRow","onRowClick","showHeader","Skeleton","active","paragraph","indicator","getRowKey","pagination","onRow","CounterCard","Spin","spinning","queryJobsColumns","scheduled","otherJobsColumns","workersColumns","Badge","busy","idle","started","suspended","toLowerCase","queuesColumns","TablePropTypes","WorkersTable","defaultPageSize","pageSizeOptions","showSizeChanger","QueuesTable","QueryJobsTable","OtherJobsTable","Jobs","isLoading","queueCounters","overallCounters","queued","startedJobs","workers","processQueues","_refreshTimer","queues","q","flatMap","queue","enqueued_at","started_at","_this$state","_partition2","partition","startedQueryJobs","otherStartedJobs","Grid","gutter","span","Tabs","activeKey","onTabClick","newTab","animated","TabPane","tab","Paginator","page","showPageSizeSelect","pageSize","onPageSizeChange","totalCount","Pagination","onShowSizeChange","defaultCurrent","total","EditTagsDialog","getAvailableTags","availableTags","setAvailableTags","setIsLoading","setValues","_useState8","selectRef","setSelectRef","compact","Select","tag","Option","TagsControl","onEdit","renderEditButton","editTags","tagSeparator","tagsExtra","modelTagsControl","archivedTooltip","ModelTagsControl","isDraft","isArchived","QueryTagsControl","DashboardTagsControl","SchedulePhrase","seconds","humanized","short","full","_this$props$schedule","dayOfWeek","_this$content","isLink","ControllerType","isLoaded","searchTerm","updateSearch","selectedTags","array","updateSelectedTags","itemsPerPage","totalItemsCount","pageItems","updatePagination","WrappedComponent","createItemsSource","createStateStorage","ItemsListWrapper","stateStorage","itemsSource","_itemsSource","getState","validate","getCallbackContext","onBeforeUpdate","onAfterUpdate","initialState","controller","hoistNonReactStatics","setPage","totalPages","setItemsPerPage","setTotalCount","_ref$validate","getItemsForPage","last","compile","reverse","compiled","Sorter","_parse","setField","setReverse","sortByIteratees","toggleField","sort","customIteratee","ItemsFetcher","_getRequest","context","_originalGetRequest","_processResults","_originalProcessResults","getRequest","doRequest","processResults","_originalDoRequest","fetch","changes","PlainListFetcher","paginator","_allItems","allResults","sorting","PaginatedListFetcher","page_size","order","ItemsSource","_beforeUpdate","_afterUpdate","_changed","_paginator","_sorter","_searchTerm","_selectedTags","customParams","setCustomParams","fetchToken","_currentFetchToken","_fetcher","_pageItems","_params","_ref2$isPlainList","isPlainList","_ref2$sortByIteratees","defaultState","_this$_paginator","prevPage","prevItemsPerPage","_savedOrderByField","allItems","ResourceItemsSource","getResource","getItemProcessor","processItem","StateStorage","_state","defaults","UrlStateStorage","defaultOrderBy","compileOrderBy","_parseOrderBy","parseOrderBy","LoadingState","OutdatedQueries","_this","align","isInitialCall","_updateTimer","currentPage","htmlFor","autoUpdateSwitchId","Switch","checked","lastUpdatedAt","listColumns","OutdatedQueriesPage","itemsList","General","info","toPairs","List","itemLayout","renderItem","DatabaseMetrics","Queues","_ref8","_ref9","Manager","_ref10","lastRefreshAt","startedAt","outdatedQueriesCount","SystemStatus","manager","databaseMetrics","last_refresh_at","outdated_queries_count","database_metrics","metrics","StatusBlock","normalizeCondition","equals","newData","destination_id","destinations","transformRequest","mute","unmute","STATE_CLASS","unknown","ok","triggered","AlertsList","muted","toUpper","AlertsListPage","MenuButton","doDelete","confirmDelete","okType","autoFocusButton","EllipsisOutlinedIcon","rotate","Title","editMode","defaultName","getDefaultName","AlertType","CONDITIONS","VALID_STRING_CONDITIONS","DisabledInput","Criteria","resultValues","alertOptions","columnValue","head","invalidMessage","columnHint","dropdownMatchSelectWidth","optionLabelProp","label","WarningFilledIcon","AlertOptionsType","DURATIONS","RearmByDuration","durationIdx","setDurationIdx","setCount","durValue","plural","InputNumber","newCount","precision","newIdx","idx","toLower","RearmEditor","selected","setSelected","newSelected","RearmViewer","phrase","Rearm","useSearchResults","_ref$initialResults","initialResults","_ref$debounceTimeout","debounceTimeout","_useState","setResult","_useState3","currentSearchTerm","isDestroyed","_useDebouncedCallback","useDebouncedCallback","_useDebouncedCallback2","doSearch","term","QuerySelector","setSearchTerm","selectedQuery","setSelectedQuery","_useSearchResults2","searchResults","searching","clearIcon","selectQuery","spinIcon","hidden","suffixIcon","showSearch","onSearch","notFoundContent","filterOption","defaultActiveFirstOption","readOnly","maxHeight","marginTop","inactive","QueryFormItem","queryHint","QuestionCircleTwoToneIcon","ItemsList","onItemClick","renderListItem","_renderItem","SelectItemsDialog","dialogTitle","inputPlaceholder","itemKey","renderStagedItem","searchItems","selectedItemsTitle","showCount","extraFooterContent","selectedItems","setSelectedItems","hasResults","isItemSelected","textAlign","color","Search","minHeight","isSelected","QueryType","IMG_ROOT","AlertSubscription","alertId","alert_id","ListItemAddon","isStaged","alreadyInGroup","deselectedIcon","EmailSettingsWarning","featureName","adminOnly","messageDescriptionId","mailSettingsMissing","arrowPointAtCenter","aria-describedby","normalizeSub","sub","destination","ListItem","_ref$destination","unsubscribe","canUnsubscribe","mouseEnterDelay","DestinationType","UserType","AlertDestinations","dests","subs","promises","subscribe","dest","without","DestinationService","currentUserEmailSub","filteredSubs","showAddAlertSubDialog","onUserEmailToggle","HorizontalFormItem","wrapperCol","offset","Form","labelCol","AlertState","lastTriggered","AlertView","unmuting","menuButton","xs","md","AntAlert","NotificationTemplate","subject","setSubject","setBody","hasContent","enabled","setEnabled","showPreview","setShowPreview","renderData","topValue","ALERT_STATUS","ALERT_CONDITION","ALERT_THRESHOLD","ALERT_NAME","ALERT_URL","QUERY_NAME","QUERY_URL","QUERY_RESULT_VALUE","QUERY_RESULT_ROWS","QUERY_RESULT_COLS","normalizeCustomTemplateData","tmpl","TextArea","autoSize","AlertEdit","saving","_isMounted","cancel","pendingRearm","onNotificationTemplateChange","_this$props2","onQuerySelected","onNameChange","onRearmChange","onCriteriaChange","AlertNew","MODES","NEW","VIEW","EDIT","defaultNameBuilder","template","AlertService","setAlertOptions","obj","warn","_this$state2","edit","processTags","getTags","TagsList","tagsUrl","_ref$showUnselectAll","showUnselectAll","onUpdate","allTags","setAllTags","setSelectedTags","toggleTag","newSelectedTags","unselectAll","SearchInput","showIcon","currentValue","setCurrentValue","onInputChange","newValue","InputControl","AntdMenu","MenuIcon","ProfileImage","Tags","unselectAllButtonTitle","useItemsListExtraActions","ExtraActionsComponent","actionsState","setActionsState","areAllItemsSelected","toggleAllItems","checkboxColumn","Checkbox","onStateChange","areExtraActionsAvailable","Sidebar","Content","_ref3$className","NoTaggedObjectsFound","DashboardListEmptyState","my_msg","sidebarMenu","DashboardListExtraActions","DashboardList","_useItemsListExtraAct","tableColumns","DashboardListPage","my","modKey","navigator","platform","altKey","onShortcut","shortcut","retunValue","fn","KeyboardShortcuts","keymap","Mousetrap","bindGlobal","unbind","ParameterApplyButton","paramCount","data-show","canvas","SelectWithVirtualScroll","largestOpt","maxBy","ctx","getContext","containerStyle","getComputedStyle","font","fontSize","fontFamily","textMetrics","measureText","actualWidth","abs","actualBoundingBoxLeft","actualBoundingBoxRight","calculateTextWidth","AntdSelect","allowClear","optionFilterProp","DateInput","forwardRef","onSelect","additionalAttributes","DatePicker","DateTimeInput","withSeconds","showTime","DynamicButton","selectedDynamicValue","staticValueLabel","menu","findIndex","option","ArrowLeftOutlinedIcon","containerRef","stopPropagation","ThunderboltTwoToneIcon","ThunderboltOutlinedIcon","DynamicDatePicker","dynamicValue","parameterValue","dateComponentRef","dateOptions","dynamicButtonOptions","DateComponent","dynamicDate","onDynamicValueSelect","DYNAMIC_DATE_OPTIONS","RangePicker","DateRangeInput","DateTimeRangeInput","DynamicDateRangePicker","dateRangeComponentRef","dateRangeOptions","isDateTimeRange","DateRangeComponent","isValidDateRangeValue","DYNAMIC_DATETIME_OPTIONS","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","QueryBasedParameterInput","_loadOptions","componentDidUpdate","prevProps","optionValues","validValues","_context","updatedValue","otherProps","showArrow","multipleValuesProps","maxTagCount","maxTagTextLength","maxTagPlaceholder","num","ParameterValueInput","isDirty","renderDateParameter","renderDateRangeParameter","_this$props3","renderEnumInput","_this$props4","opt","renderQueryBasedInput","_this$props5","renderNumberInput","renderTextInput","renderInput","data-dirty","formItemProps","getDefaultTitle","capitalize","words","NameInput","existingNames","setValidation","helpText","validateStatus","isTypeDateRange","required","help","EditParameterSettingsDialog","setParam","isNameValid","setIsNameValid","initialQuery","setInitialQuery","paramFormId","htmlType","form","layout","onFinish","colon","defaultChecked","quoteOption","updateUrl","str","disableUrlUpdate","parametersChanged","disableUrlUpdateChanged","keyCode","applyChanges","onPendingValuesChange","oldIndex","newIndex","onParametersEdit","onValuesChange","parametersWithPendingValues","updated","updatedParameter","matches","matchAll","hideValues","renderParameter","toCamelCase","editable","showParameterSettings","appendSortableToParent","dirtyParamCount","SortableContainer","axis","useDragHandle","lockToContainerEdges","helperClass","helperContainer","containerEl","updateBeforeSortStart","onBeforeSortStart","onSortEnd","moveParameter","containerProps","onKeyDown","handleKeyDown","SortableElement","data-editable","DragHandle","Timer","startTime","valueOf","diff","VisualizationName","VisualizationType","QueryLink","ALL_VALUES","FilterType","FiltersType","filterData","every","rowValue","filterValues","filterValue","isSame","Filters","_values","f","createFilterChangeHandler","labelInValue","OptGroup","useQueryResultData","queryResultStatus","retrievedAt","metadata","getQueryResultData","useImmutableCallback","callbackRef","noop","wrapComponentWithSettings","updateVisualizationsSettings","HelpTriggerComponent","LinkComponent","choroplethAvailableMaps","countries","countriesDataUrl","fieldNames","name_long","abbrev","iso_a2","iso_a3","iso_n3","usa","usaDataUrl","ns_code","geoid","usps_abbrev","fips_code","subdiv_japan","subdivJapanDataUrl","name_alt","name_local","iso_3166_2","postal","type_en","region","region_code","Renderer","VisRenderer","Editor","VisEditor","combineFilters","localFilters","globalFilters","localFilter","globalFilter","VisualizationRenderer","setFilters","filtersRef","handleFiltersChange","newFilters","b","fromPairs","onFiltersChange","filteredData","showFilters","paginationSize","visualizationName","addonBefore","ExpandedWidgetDialog","editableMappingsToParameterMappings","synchronizeWidgetTitles","sourceMappings","affectedWidgets","sourceMapping","widgetMappings","widgetMapping","ParameterMappingInput","existingParamNames","updateParamMapping","newMapping","renderMappingTypeSelector","noExisting","Radio","Group","updateSourceType","QuestionCircleFilledIcon","renderDashboardAddNew","renderDashboardMapToExisting","paramName","renderStaticValue","renderInputBlock","inputError","_this$renderInputBloc2","visibility","MappingEditor","renderContent","Popover","onVisibleChange","EditOutlinedIcon","TitleEditor","showPopup","getMappingTitle","renderPopover","paramTitle","onEditingTitleChange","maxLength","CheckOutlinedIcon","onPopupVisibleChange","ParameterMappingListInput","getStringValue","mappedTo","Tag","oldMapping","Column","getDefaultValue","existingParamsNames","getSourceTypeLabel","getParamValuesSnapshot","dashboardParameters","EditParameterMappingsDialog","existingParameterNames","alreadyExists","parameterMappingsToEditableMappings","originalParamValuesSnapshot","saveWidget","newMappings","valuesChanged","isMatch","widgetsToSave","updateParamMappings","WidgetDropdownButton","extraOptions","showDeleteOption","onDelete","WidgetMenu","WidgetDeleteButton","isPublic","menuOptions","tileProps","showDropdownButton","deleteWidget","visualizationWidgetMenuOptions","canEditDashboard","canViewQuery","canEditParameters","widgetQueryResult","isQueryResultEmpty","downloadLink","downloadName","download","RefreshIndicator","VisualizationWidgetHeader","isEditing","onParametersUpdate","HtmlContent","markdown","toHTML","VisualizationWidgetFooter","onRefresh","onExpand","refreshClickButtonId","setRefreshClickButtonId","refreshWidget","buttonId","VisualizationWidget","onParameterMappingsChange","renderVisualization","onLocalFiltersChange","isRefreshing","editParameterMappings","expandWidget","TextboxDialog","setText","preview","setPreview","updatePreview","handleInputChange","confirmDialogDismiss","originalText","dashed","TextboxWidget","TextboxMenuOptions","editTextBox","newText","RestrictedWidget","WIDGET_CONTENT_SELECTOR","AutoHeightController","selector","widgetEl","querySelector","els","querySelectorAll","acc","el","getBoundingClientRect","exists","_this$widgets$id","getHeight","prevHeight","onHeightChange","checkHeightChanges","newWidgetIds","ResponsiveGridLayout","WidthProvider","Responsive","WidgetType","SINGLE","MULTI","DashboardWidget","memo","onLoadWidget","onRefreshWidget","onRemoveWidget","nextProps","DashboardGrid","pos","x","y","h","minW","maxW","minH","maxH","layouts","offsetWidth","cfg","normalized","keyBy","normalizeTo","onLayoutChange","onBreakpointChange","widgetId","newHeight","cloneDeep","oldItem","newItem","autoHeightCtrl","resume","disableAnimations","onWidgetHeightUpdated","destroy","draggableCancel","cols","rowHeight","margin","isDraggable","isResizable","onResizeStart","onResizeStop","onWidgetResize","breakpoints","data-grid","normalizeFrom","data-widgetid","checkItems","bounds","observe","shouldTrigger","VisualizationSelect","visualizationGroups","visualizations","vizSelectId","handleChange","visualizationId","selectedVisualization","groupKey","AddWidgetDialog","setSelectedVisualization","setParameterMappings","parameterMappingsId","PreviewCard","imageUrl","roundedImage","UserPreviewCard","withLink","DataSourcePreviewCard","DOMPurify","setConfig","ADD_ATTR","addHook","getAttribute","removeAttribute","disableResource","User","enableUser","userName","sanitize","is_disabled","disableUser","deleteUser","convertUserInfo","groupIds","groups","isInvitationPending","is_invitation_pending","regenerateApiKey","sendPasswordReset","reset_link","resendInvitation","invite_link","PermissionsEditorDialogHeader","UserSelect","shouldShowUser","loadingUsers","setLoadingUsers","setUsers","debouncedSearchUsers","searchUsers","parentNode","PermissionsEditorDialog","author","aclUrl","loadingGrantees","setLoadingGrantees","_useState10","grantees","setGrantees","_useGrantees","loadGrantees","resultGrantees","accessType","grantee","addPermission","access_type","removePermission","loadUsersWithPermissions","userHasPermission","InputWithCopy","select","execCommand","copied","resetCopyState","copyFeatureSupported","queryCommandSupported","copyButton","copy","CopyOutlinedIcon","addonAfter","ShareDashboardDialog","marginBottom","apiUrl","enableAccess","disableAccess","hasOnlySafeQueries","headerContent","useFullscreenHandler","fullscreen","setFullscreen","toggleFullscreen","getLimitedRefreshRate","refreshRate","allowedIntervals","useRefreshRateHandler","refreshDashboard","getRefreshRateFromUrl","setRefreshRate","doRefreshDashboard","refreshTimer","rate","DashboardStatusEnum","useEditModeHandler","editingLayout","setEditingLayout","dashboardStatus","setDashboardStatus","recentPositions","setRecentPositions","doneBtnClickedWhileSaving","setDoneBtnClickedWhileSaving","saveDashboardLayout","positions","changedPositions","nextPositions","pickBy","nextPos","prevPos","getChangedPositions","saveChangedWidgets","saveDashboardLayoutDebounced","_len","args","_key","retrySaveDashboardLayout","setEditing","editing","useDuplicateDashboard","isDuplicating","setIsDuplicating","duplicateDashboard","tabName","newDashboard","currentUrlParams","targetUrlParams","keepCurrentUrlParams","getAffectedWidgets","updatedParameters","useDashboard","dashboardData","setDashboard","refreshing","setRefreshing","gridDisabled","setGridDisabled","globalParameters","isDashboardOwnerOrAdmin","_useDuplicateDashboar2","managePermissions","updateDashboard","includeVersion","currentDashboard","updatedDashboard","togglePublished","loadWidget","forceRefresh","removeWidget","dashboardRef","loadDashboard","loadWidgetPromises","updatedFilters","archiveDashboard","showShareDashboardDialog","handleDialogClose","showAddTextboxDialog","showAddWidgetDialog","_useRefreshRateHandle2","disableRefreshRate","_useFullscreenHandler2","editModeHandler","EditInPlace","isEditable","ignoreBlanks","onDone","stopEditing","onFocus","startEditing","multiline","editorProps","InputComponent","onBlur","defaultEditing","prevState","onStopEditing","renderEdit","renderNormal","getDashboardTags","buttonType","DashboardPageTitle","dashboardConfiguration","RefreshButton","refreshRateOptions","parsedRefreshRate","DashboardMoreOptionsButton","showPermissionsControl","disablePublish","DashboardControl","headerExtra","showPublishButton","showFullscreenButton","canShareDashboard","showShareButton","disablePublicUrls","showMoreOptionsButton","unarchiveDashboard","DashboardEditControl","data-saving","data-error","DashboardHeader","DashboardControlComponent","DashboardSettings","AddWidgetContainer","DashboardComponent","pageContainer","setPageContainer","bottomPanelStyles","setBottomPanelStyles","resizeObserver","paddingLeft","paddingRight","clientWidth","dispatchEvent","Event","DashboardPage","dashboardSlug","dashboardId","ApiKeySessionWrapper","renderChildren","routeWithApiKeySession","PublicDashboard","_useDashboard","PublicDashboardPage","keySuffix","imgSrc","CardsList","_ref2$items","_ref2$showSearch","searchText","setSearchText","filteredItems","Collapse","collapsed","AntCollapse","Panel","getFieldLabel","AceEditor","$blockScrolling","Infinity","showPrintMargin","InputField","FieldType","initialValue","minLength","contentAfter","FieldTypeComponent","checkbox","fieldLabel","file","getFieldValue","Upload","beforeUpload","UploadOutlinedIcon","textarea","ace","AceEditorInput","DynamicFormField","fieldProps","FieldComponent","orderedInputs","properties","targetOptions","inputs","default","normalizeSchema","configurationSchema","prop","endsWith","enum","extendedEnum","extra_options","setDefaultValueToFields","getFields","configuration_schema","hasTargetObject","isNewTarget","updateTargetWithValues","getBase64","reader","FileReader","readAsDataURL","onload","onerror","hasFilledExtraField","optionName","defaultOptionValue","targetOptionValue","ActionType","pullRight","disabledWhenDirty","AntdFormType","validateFieldsAndScroll","fieldRules","rule","DynamicFormFields","fields","feedbackIcons","hasFeedback","rules","valuePropName","getValueFromEvent","fileList","helper","setFieldsValue","reducerForActionSet","inProgress","actionName","DynamicFormActions","isFormDirty","_useReducer2","useReducer","inProgressActions","setActionInProgress","handleAction","disableWhenDirty","DynamicForm","hideSubmitButton","defaultShowExtraFields","saveText","onSubmit","isSubmitting","setIsSubmitting","isTouched","setIsTouched","showExtraFields","setShowExtraFields","useForm","extraFields","regularFields","handleFinish","normalizeEmptyValuesToNull","msg","handleFinishFailed","errorFields","scrollToField","onFieldsChange","onFinishFailed","currentShowExtraFields","Steps","StepEnum","CreateSourceDialog","selectedType","savingSource","currentStep","successCallback","errorCallback","onCreate","renderTypeSelector","filteredTypes","renderForm","imageFolder","helpTriggerPrefix","HELP_TRIGGER_TYPES","formId","createSource","selectType","data-test-type","sourceType","resetType","progressDot","wrapSettingsTab","activeItem","mapSchemaColumnsToObject","DataSource","fetchSchema","schema","tables","table","onClickCreate","DataSourcesList","dataSourceTypes","newDataSourceDialog","createDataSource","isNewDataSourcePage","showCreateSourceDialog","newDataSourceProps","DataSourcesListPage","EditDataSource","httpResponse","formProps","deleteDataSource","testConnection","saveDataSource","EditDataSourcePage","DestinationsList","destinationTypes","createDestination","isNewDestinationPage","renderDestinations","newDestinationProps","DestinationsListPage","EditDestination","destinationId","deleteDestination","saveDestination","EditDestinationPage","CreateGroupDialog","members","addMember","removeMember","addDataSource","removeDataSource","updateDataSource","DeleteGroupButton","group","button","onGroupDeleted","deleteGroup","mouseLeaveDelay","GroupsList","canRemove","newGroup","createGroup","GroupsListPage","GroupName","updateGroupName","DetailsPageSidebar","canAddMembers","onAddMembersClick","canAddDataSources","onAddDataSourcesClick","GroupDataSources","groupId","datasource","view_only","setDataSourcePermissions","DownOutlinedIcon","removeGroupDataSource","viewOnly","allDataSources","alreadyAddedDataSources","ds","addDataSources","GroupDataSourcesPage","GroupMembers","removeGroupMember","alreadyAddedUsers","u","addMembers","GroupMembersPage","QueriesListEmptyState","QueriesListExtraActions","QueriesList","controllerRef","unlistenLocationChanges","QueriesListPage","Resizable","toggleShortcut","direction","sizeAttribute","setSize","elementRef","wasUsingTouchEventsRef","wasResizedRef","sizeProp","getElementSize","savedSize","targetSize","element","d3","transition","ease","resizeHandle","shortcuts","resizeEventHandlers","onResize","draggableCoreOptions","onMouseDown","ReactResizable","resizeHandles","minConstraints","draggableOpts","QueryFormatters","sql","sqlFormatter","json","isFormatQueryAvailable","useQueryFlags","canView","canViewSource","canExecute","canFork","canSchedule","useArchiveQuery","doArchiveQuery","SaveQueryError","_extendableBuiltin","detailedMessage","SaveQueryConflictError","confirmOverwrite","doSaveQuery","_ref$canOverwrite","canOverwrite","useUpdateQuery","_ref2$successMessage","successMessage","updatedQuery","notificationOptions","useDuplicateQuery","duplicateQuery","CodeBlock","getSelection","selectAllChildren","removeAllRanges","copyFeatureEnabled","copyable","ApiKeyDialog","setQuery","updatingApiKey","setUpdatingApiKey","regenerateQueryApiKey","_useMemo","csvUrl","basePath","jsonUrl","csvResultsLabelId","jsonResultsLabelId","getQueryTags","QueryPageHeader","sourceMode","isDesktop","useMedia","queryFlags","updateName","updateQuery","autoPublishNamedQueries","useRenameQuery","updateTags","useUpdateQueryTags","archiveQuery","publishQuery","usePublishQuery","unpublishQuery","useUnpublishQuery","_useDuplicateQuery2","openApiKeyDialog","useApiKeyDialog","openPermissionsEditorDialog","usePermissionsEditorDialog","moreActionsMenu","createMenu","isEnabled","publish","unpublish","showAPIKey","divider","QueryMetadata","onEditSchedule","last_modified_by","refreshButton","TabWithDeleteButton","canDelete","handleDelete","defaultVisualizations","QueryVisualizationTabs","selectedTab","showNewVisualizationButton","canDeleteVisualizations","onChangeTab","onAddVisualization","onDeleteVisualization","canRefresh","tabsProps","tabBarExtraContent","orderedVisualizations","orderBy","isFirstVisualization","visId","isMobile","maxWidth","tabBarGutter","destroyInactiveTabPane","QueryExecutionStatus","isCancelling","alertType","showTimer","isCancelButtonAvailable","QuerySourceAlerts","dataSourcesAvailable","level","wrapQueryPage","QueryPageWrapper","AddToDashboardDialog","selectedDashboard","setSelectedDashboard","autoComplete","EmbedQueryDialog","enableChangeIframeSize","iframeWidth","iframeHeight","embedUrl","snapshotUrlBuilder","snapshotUrl","urlEmbedLabelId","iframeEmbedLabelId","QueryResultsLink","resultId","resultData","embed","QueryControlDropdown","openAddToDashboardForm","PlusCircleFilledIcon","showEmbedDialog","ShareAltOutlinedIcon","queryExecuting","FileOutlinedIcon","FileExcelOutlinedIcon","overlayClassName","EditVisualizationButton","openVisualizationEditor","FormOutlinedIcon","QueryExecutionMetadata","isQueryExecuting","showEditVisualizationButton","onEditVisualization","extraActions","queryResultData","openAddToDashboardDialog","useAddToDashboardDialog","openEmbedDialog","unusedQuery","useEmbedDialog","WarningTwoTone","twoToneColor","data_scanned","getSchema","SchemaItemColumnType","SchemaItemType","SchemaItem","expanded","onToggle","handleSelect","tableDisplayName","columnName","SchemaLoadingState","SchemaList","expandedFlags","onTableExpand","onItemSelect","listRef","setListRef","recomputeRowHeights","AutoSizer","rowCount","columnsLength","rowRenderer","applyFilterOnSchema","filterString","nameFilter","columnFilter","SchemaBrowser","onSchemaUpdate","onOptionsUpdate","_useDataSourceSchema2","setSchema","loadingSchema","setLoadingSchema","refreshSchemaTokenRef","reloadSchema","refreshToken","useDataSourceSchema","refreshSchema","setFilterString","filteredSchema","handleFilterChange","setExpandedFlags","handleSchemaUpdate","tableName","langTools","acequire","snippetsModule","defineDummySnippets","require","snippetText","scope","buildKeywordsFromSchema","tableKeywords","columnKeywords","tableColumnKeywords","score","meta","keywords","buildTableColumnKeywords","tableColumn","schemaCompleterKeywords","updateSchemaCompleter","editorKey","setCompleters","snippetCompleter","keyWordCompleter","textCompleter","identifierRegexps","getCompletions","editor","QuerySnippet","querySnippet","getSnippet","snippet","tabTrigger","getQuerySnippet","QuerySnippetService","AutocompleteToggle","available","tooltipMessage","handleClick","AutoLimitCheckbox","ButtonTooltip","limit","modifiers","mod","upperFirst","sc","humanReadableShortcut","EditorControl","addParameterButtonProps","formatButtonProps","saveButtonProps","executeButtonProps","autocompleteToggleProps","autoLimitCheckboxProps","dataSourceSelectorProps","buttons","ButtonPropsPropType","QueryEditor","autocompleteEnabled","onSelectionChange","setContainer","editorRef","setEditorRef","editorOptions","behavioursEnabled","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","autoScrollEditorIntoView","editorId","resize","handleSelectionChange","selection","rawSelectedQueryText","getTextRange","getRange","initEditor","commands","bindKey","win","mac","blur","notificationCleanup","on","_ref$expiry","expiry","_ref$container","_ref$politeness","politeness","textContent","isDone","cleanupFn","srNotify","command","completer","snippets","snippetManager","parseSnippetFile","useImperativeHandle","paste","getValue","setRange","setOptions","wrapEnabled","Controls","QueryEditorControls","fetchDataFromJobOrReturnData","rejectErrorResponse","getDatabases","getDatabaseTables","databaseName","getTableColumns","DatabricksDataSource","addDisplayNameWithoutDatabaseName","databaseNamePrefix","DatabricksSchemaBrowser","_useDatabricksSchema","databases","setDatabases","loadingDatabases","setLoadingDatabases","_useState5","currentDatabaseName","setCurrentDatabaseName","_useState7","schemas","setSchemas","_useState9","_useState11","_useState12","setCurrentSchema","currentSchemas","currentDatabaseNameRef","loadTableColumns","updatedSchema","refreshAll","getDatabasesPromise","getSchemasPromise","schemasRef","has_columns","defaultDatabaseNameRef","lastUsedDatabase","setCurrentDatabase","selectedDatabase","useDatabricksSchema","databaseFilterString","setDatabaseFilterString","isDatabaseSelectOpen","setIsDatabaseSelectOpen","_useDebouncedCallback4","handleDatabaseFilterChange","cancelHandleDatabaseFilterChange","handleDatabaseSelection","filteredDatabases","database","dropdownClassName","onDropdownVisibleChange","SyncOutlinedIcon","spin","QueryEditorComponents","registerEditorComponent","dataSourceType","useVisualizationTabHandler","firstVisualization","setSelectedTab","hashValue","useAutocompleteFlags","totalLength","calculateTokensCount","setIsEnabled","toggleAutocomplete","useAutoLimitFlags","isAutoLimitAvailable","isChecked","setIsChecked","Notification","getPermissions","requestPermission","showNotification","redashIconUrl","onclick","reducer","updatedProperty","useQueryExecute","isExecuting","loadedInitialResults","executionStatus","cancelCallback","executionState","setExecutionState","queryResultInExecution","executeQuery","newQueryResult","queryExecutor","notifications","queryRef","useQueryParameters","dirtyFlag","setDirtyFlag","updateDirtyFlag","flag","updatedDirtyParameters","WEEKDAYS_SHORT","weekdaysShort","WEEKDAYS_FULL","weekdays","TimeEditor","setTime","showUtc","isUTC","TimePicker","minuteStep","newTime","data-testid","ScheduleDialog","newSchedule","newSeconds","newInterval","setScheduleUntil","day","refreshOptions","_secondsToInterval3","hasChanged","newCompact","oldCompact","intervals","int","cnt","secs","setWeekday","setUntilToggle","useEditScheduleDialog","Visualization","EditVisualizationDialog","getDefaultVisualization","getOptions","originalOptions","setType","nameChanged","setNameChanged","onOptionsChanged","newOptions","availableVisualizations","vis","isDeprecated","vizTypeId","vizNameId","wrapClassName","saveVisualization","newVisualization","savedVisualization","updateQueryVisualizations","optionsChanged","onNameChanged","newName","onOptionsChange","useEditVisualizationDialog","updatedVisualization","filteredVisualizations","useDeleteVisualization","useUpdateQueryDescription","QuerySourceTypeIcon","QuerySourceDropdownItem","QuerySourceDropdown","data-name","QuerySource","_useQuery","originalQuery","originalQuerySource","setOriginalQuerySource","originalAutoLimit","setOriginalAutoLimit","saveQuery","useQuery","_useQueryDataSources","setAllDataSources","dataSourcesLoaded","setDataSourcesLoaded","cancelDataSourceLoading","useQueryDataSources","_useQueryParameters2","areParametersDirty","updateParametersDirtyFlag","_useVisualizationTabH2","_getEditorComponents","shouldShowAlert","shouldShowAlertRef","confirmMessage","savedOnBeforeUnload","onbeforeunload","currentLocation","useUnsavedChangesAlert","_useQueryExecute","executionError","isExecutionCancelling","_useAutocompleteFlags2","autocompleteAvailable","_useAutoLimitFlags2","autoLimitAvailable","autoLimitChecked","setAutoLimit","handleQueryEditorChange","updateQueryDescription","querySyntax","queryFormat","handleDataSourceChange","updates","firstDataSourceId","selectedDataSourceId","dataSourceIds","availableDataSources","editSchedule","openAddNewParameterDialog","onParameterAdded","handleParameterAdded","useAddNewParameterDialog","handleSchemaItemSelect","schemaItem","selectedText","setSelectedText","doExecuteQuery","skipParametersDirtyFlag","isQuerySaving","setIsQuerySaving","addVisualization","editVisualization","shouldOpenDialog","setShouldOpenDialog","useAddVisualizationDialog","deleteVisualization","schemaOptions","overflow","data-executing","formatQuery","formattedQueryText","formatter","line","QuerySourcePage","QueryViewButton","tooltipVisible","setTooltipVisible","eventHandlers","onMouseEnter","onMouseLeave","pointerEvents","QueryView","setDataSource","isFixedLayout","addingDescription","setAddingDescription","FullscreenExitOutlinedIcon","FullscreenOutlinedIcon","QueryViewPage","VisualizationEmbedHeader","queryDescription","verticalAlign","VisualizationEmbedFooter","queryUrl","hideTimestamp","downloadMenu","VisualizationEmbed","setError","setRefreshStartedAt","setQueryResults","refreshQueryResults","hideHeader","hideParametersUI","hideQueryLink","showQueryDescription","QuerySnippetDialog","handleSubmit","querySnippetId","formFields","querySnippetsFormId","canEditQuerySnippet","QuerySnippetsList","showSnippetDialog","deleteQuerySnippet","canSave","goToSnippetsList","saveQuerySnippet","_this$props$controlle","isNewOrEditPage","QuerySnippetsListPage","useOrganizationSettings","settings","setSettings","currentValues","setCurrentValues","isSaving","setIsSaving","newClientConfig","date_format","timeFormat","time_format","SettingsEditorPropTypes","SettingsEditorDefaultProps","FormatSettings","dateFormatList","timeFormatList","PlotlySettings","hide_plotly_mode_bar","FeatureFlagsSettings","Row","feature_show_permissions_control","send_email_on_failed_scheduled_queries","multi_byte_search_enabled","BeaconConsentSettings","GeneralSettings","PasswordLoginSettings","isTheOnlyAuthMethod","googleLoginEnabled","ldapLoginEnabled","auth_saml_enabled","auth_password_login_enabled","GoogleLoginSettings","auth_google_apps_domains","SAMLSettings","auth_saml_type","auth_saml_sso_url","auth_saml_entity_id","auth_saml_x509_cert","auth_saml_metadata_url","auth_saml_nameid_format","AuthSettings","allSettings","OrganizationSettings","_useOrganizationSetti","sm","lg","OrganizationSettingsPage","absoluteUrl","urlObj","URL","protocol","host","CreateUserDialog","UsersListActions","UsersList","goToUsersList","isNewUserPage","createUser","showCreateUserDialog","renderPageHeader","UsersListPage","pending","UserGroups","linkGroups","useUserGroups","allGroups","setAllGroups","UserInfoForm","_useUserGroups","isLoadingGroups","saveUser","ApiKeyForm","apiKeyInputId","doRegenerate","ChangePasswordDialog","newPassword","currentPassword","repeatPassword","errors","fieldError","updatingPassword","validateFields","touched","userData","old_password","password","_e$target","_this$state3","inputProps","updatePassword","Password","PasswordLinkAlert","passwordLink","PasswordResetForm","setPasswordLink","ResendInvitationForm","PasswordForm","changePassword","ToggleUserForm","toggleUser","buttonProps","EditableUserProfile","setUser","ReadOnlyUserProfile","UserProfilePage","handleNavigationIntent","tagName","hasAttribute","dataset","skipRouter","setDefaultIndicator","updateLocale","relativeTime","future","past","mm","hh","dd","M","MM","yy","init","notificationKey","onlineStateHandler","unhandledError","setUnhandledError","globalErrorHandler","filename","getElementById","offlineListener"],"mappings":"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AAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,0B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,0B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,oC,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,uC,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,oC,kCCAzC,OAAe,cAA0B,6B,kCCAzC,OAAe,cAA0B,8B,kCCAzC,OAAe,cAA0B,2B,kCCAzC,OAAe,cAA0B,+B,kCCAzC,OAAe,cAA0B,yC,kCCAzC,OAAe,cAA0B,mC,kCCAzC,OAAe,cAA0B,sC,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,oC,kCCAzC,OAAe,cAA0B,mC,kCCAzC,OAAe,cAA0B,mC,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,yC,kCCAzC,OAAe,cAA0B,sC,kCCAzC,OAAe,cAA0B,mD,kCCAzC,OAAe,cAA0B,qC,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,iC,kCCAzC,OAAe,cAA0B,mC,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,4B,kCCAzC,OAAe,cAA0B,gC,kCCAzC,OAAe,cAA0B,0B,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,sC,kCCAzC,OAAe,cAA0B,6C,kCCAzC,OAAe,cAA0B,kC,kCCAzC,OAAe,cAA0B,mB,kCCAzC,OAAe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","file":"app.378d004248148d294025.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([720,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default __webpack_public_path__ + \"images/redash_icon_small.png\";","var map = {\n\t\"./avatar.svg\": 460,\n\t\"./db-logos/Cassandra.png\": 1681,\n\t\"./db-logos/arangodb.png\": 1682,\n\t\"./db-logos/athena.png\": 1683,\n\t\"./db-logos/aws_es.png\": 1684,\n\t\"./db-logos/axibasetsd.png\": 1685,\n\t\"./db-logos/azure_kusto.png\": 1686,\n\t\"./db-logos/bigquery.png\": 1687,\n\t\"./db-logos/bigquery_gce.png\": 1688,\n\t\"./db-logos/clickhouse.png\": 1689,\n\t\"./db-logos/cloudwatch.png\": 1690,\n\t\"./db-logos/cloudwatch_insights.png\": 1691,\n\t\"./db-logos/cockroach.png\": 1692,\n\t\"./db-logos/corporate_memory.png\": 1693,\n\t\"./db-logos/couchbase.png\": 1694,\n\t\"./db-logos/csv.png\": 1695,\n\t\"./db-logos/databend.png\": 1696,\n\t\"./db-logos/databricks.png\": 1697,\n\t\"./db-logos/db2.png\": 1698,\n\t\"./db-logos/dgraph.png\": 1699,\n\t\"./db-logos/drill.png\": 1700,\n\t\"./db-logos/druid.png\": 1701,\n\t\"./db-logos/e6data.png\": 1702,\n\t\"./db-logos/elasticsearch.png\": 1703,\n\t\"./db-logos/elasticsearch2.png\": 1704,\n\t\"./db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png\": 1705,\n\t\"./db-logos/elasticsearch2_XPackSQLElasticSearch.png\": 1706,\n\t\"./db-logos/exasol.png\": 1707,\n\t\"./db-logos/excel.png\": 1708,\n\t\"./db-logos/firebolt.png\": 1709,\n\t\"./db-logos/google_analytics.png\": 1710,\n\t\"./db-logos/google_analytics4.png\": 1711,\n\t\"./db-logos/google_search_console.png\": 1712,\n\t\"./db-logos/google_spreadsheets.png\": 1713,\n\t\"./db-logos/graphite.png\": 1714,\n\t\"./db-logos/hive.png\": 1715,\n\t\"./db-logos/hive_http.png\": 1716,\n\t\"./db-logos/ignite.png\": 1717,\n\t\"./db-logos/impala.png\": 1718,\n\t\"./db-logos/influxdb.png\": 1719,\n\t\"./db-logos/influxdbv2.png\": 1720,\n\t\"./db-logos/jirajql.png\": 1721,\n\t\"./db-logos/json.png\": 1722,\n\t\"./db-logos/kibana.png\": 1723,\n\t\"./db-logos/kylin.png\": 1724,\n\t\"./db-logos/mapd.png\": 1725,\n\t\"./db-logos/memsql.png\": 1726,\n\t\"./db-logos/mongodb.png\": 1727,\n\t\"./db-logos/mssql.png\": 1728,\n\t\"./db-logos/mssql_odbc.png\": 1729,\n\t\"./db-logos/mysql.png\": 1730,\n\t\"./db-logos/nz.png\": 1731,\n\t\"./db-logos/oracle.png\": 1732,\n\t\"./db-logos/pg.png\": 1733,\n\t\"./db-logos/phoenix.png\": 1734,\n\t\"./db-logos/pinot.png\": 1735,\n\t\"./db-logos/presto.png\": 1736,\n\t\"./db-logos/prometheus.png\": 1737,\n\t\"./db-logos/python.png\": 1738,\n\t\"./db-logos/qubole.png\": 1739,\n\t\"./db-logos/rds_mysql.png\": 1740,\n\t\"./db-logos/redshift.png\": 1741,\n\t\"./db-logos/redshift_iam.png\": 1742,\n\t\"./db-logos/results.png\": 1743,\n\t\"./db-logos/rockset.png\": 1744,\n\t\"./db-logos/salesforce.png\": 1745,\n\t\"./db-logos/scylla.png\": 1746,\n\t\"./db-logos/snowflake.png\": 1747,\n\t\"./db-logos/sparql_endpoint.png\": 1748,\n\t\"./db-logos/sqlite.png\": 1749,\n\t\"./db-logos/tinybird.png\": 1750,\n\t\"./db-logos/treasuredata.png\": 1751,\n\t\"./db-logos/trino.png\": 1752,\n\t\"./db-logos/uptycs.png\": 1753,\n\t\"./db-logos/url.png\": 1754,\n\t\"./db-logos/vertica.png\": 1755,\n\t\"./db-logos/yandex_appmetrika.png\": 1756,\n\t\"./db-logos/yandex_disk.png\": 1757,\n\t\"./db-logos/yandex_metrika.png\": 1758,\n\t\"./destinations/asana.png\": 1759,\n\t\"./destinations/chatwork.png\": 1760,\n\t\"./destinations/datadog.png\": 1761,\n\t\"./destinations/discord.png\": 1762,\n\t\"./destinations/email.png\": 1763,\n\t\"./destinations/hangouts_chat.png\": 1764,\n\t\"./destinations/mattermost.png\": 1765,\n\t\"./destinations/microsoft_teams_webhook.png\": 1766,\n\t\"./destinations/pagerduty.png\": 1767,\n\t\"./destinations/slack.png\": 1768,\n\t\"./destinations/webex.png\": 1769,\n\t\"./destinations/webhook.png\": 1770,\n\t\"./favicon-16x16.png\": 1771,\n\t\"./favicon-32x32.png\": 1772,\n\t\"./favicon-96x96.png\": 1773,\n\t\"./fixtures/map-tile.png\": 1774,\n\t\"./google_logo.svg\": 1775,\n\t\"./illustrations/alert.svg\": 1776,\n\t\"./illustrations/dashboard.svg\": 1777,\n\t\"./illustrations/no-query-results.svg\": 1778,\n\t\"./illustrations/query.svg\": 1779,\n\t\"./logo.png\": 1780,\n\t\"./logo_white.png\": 1781,\n\t\"./redash_icon_small.png\": 110\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1680;","export default __webpack_public_path__ + \"images/db-logos/Cassandra.png\";","export default __webpack_public_path__ + \"images/db-logos/arangodb.png\";","export default __webpack_public_path__ + \"images/db-logos/athena.png\";","export default __webpack_public_path__ + \"images/db-logos/aws_es.png\";","export default __webpack_public_path__ + \"images/db-logos/axibasetsd.png\";","export default __webpack_public_path__ + \"images/db-logos/azure_kusto.png\";","export default __webpack_public_path__ + \"images/db-logos/bigquery.png\";","export default __webpack_public_path__ + \"images/db-logos/bigquery_gce.png\";","export default __webpack_public_path__ + \"images/db-logos/clickhouse.png\";","export default __webpack_public_path__ + \"images/db-logos/cloudwatch.png\";","export default __webpack_public_path__ + \"images/db-logos/cloudwatch_insights.png\";","export default __webpack_public_path__ + \"images/db-logos/cockroach.png\";","export default __webpack_public_path__ + \"images/db-logos/corporate_memory.png\";","export default __webpack_public_path__ + \"images/db-logos/couchbase.png\";","export default __webpack_public_path__ + \"images/db-logos/csv.png\";","export default __webpack_public_path__ + \"images/db-logos/databend.png\";","export default __webpack_public_path__ + \"images/db-logos/databricks.png\";","export default __webpack_public_path__ + \"images/db-logos/db2.png\";","export default __webpack_public_path__ + \"images/db-logos/dgraph.png\";","export default __webpack_public_path__ + \"images/db-logos/drill.png\";","export default __webpack_public_path__ + \"images/db-logos/druid.png\";","export default __webpack_public_path__ + \"images/db-logos/e6data.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2_OpenDistroSQLElasticSearch.png\";","export default __webpack_public_path__ + \"images/db-logos/elasticsearch2_XPackSQLElasticSearch.png\";","export default __webpack_public_path__ + \"images/db-logos/exasol.png\";","export default __webpack_public_path__ + \"images/db-logos/excel.png\";","export default __webpack_public_path__ + \"images/db-logos/firebolt.png\";","export default __webpack_public_path__ + \"images/db-logos/google_analytics.png\";","export default __webpack_public_path__ + \"images/db-logos/google_analytics4.png\";","export default __webpack_public_path__ + \"images/db-logos/google_search_console.png\";","export default __webpack_public_path__ + \"images/db-logos/google_spreadsheets.png\";","export default __webpack_public_path__ + \"images/db-logos/graphite.png\";","export default __webpack_public_path__ + \"images/db-logos/hive.png\";","export default __webpack_public_path__ + \"images/db-logos/hive_http.png\";","export default __webpack_public_path__ + \"images/db-logos/ignite.png\";","export default __webpack_public_path__ + \"images/db-logos/impala.png\";","export default __webpack_public_path__ + \"images/db-logos/influxdb.png\";","export default __webpack_public_path__ + \"images/db-logos/influxdbv2.png\";","export default __webpack_public_path__ + \"images/db-logos/jirajql.png\";","export default __webpack_public_path__ + \"images/db-logos/json.png\";","export default __webpack_public_path__ + \"images/db-logos/kibana.png\";","export default __webpack_public_path__ + \"images/db-logos/kylin.png\";","export default __webpack_public_path__ + \"images/db-logos/mapd.png\";","export default __webpack_public_path__ + \"images/db-logos/memsql.png\";","export default __webpack_public_path__ + \"images/db-logos/mongodb.png\";","export default __webpack_public_path__ + \"images/db-logos/mssql.png\";","export default __webpack_public_path__ + \"images/db-logos/mssql_odbc.png\";","export default __webpack_public_path__ + \"images/db-logos/mysql.png\";","export default __webpack_public_path__ + \"images/db-logos/nz.png\";","export default __webpack_public_path__ + \"images/db-logos/oracle.png\";","export default __webpack_public_path__ + \"images/db-logos/pg.png\";","export default __webpack_public_path__ + \"images/db-logos/phoenix.png\";","export default __webpack_public_path__ + \"images/db-logos/pinot.png\";","export default __webpack_public_path__ + \"images/db-logos/presto.png\";","export default __webpack_public_path__ + \"images/db-logos/prometheus.png\";","export default __webpack_public_path__ + \"images/db-logos/python.png\";","export default __webpack_public_path__ + \"images/db-logos/qubole.png\";","export default __webpack_public_path__ + \"images/db-logos/rds_mysql.png\";","export default __webpack_public_path__ + \"images/db-logos/redshift.png\";","export default __webpack_public_path__ + \"images/db-logos/redshift_iam.png\";","export default __webpack_public_path__ + \"images/db-logos/results.png\";","export default __webpack_public_path__ + \"images/db-logos/rockset.png\";","export default __webpack_public_path__ + \"images/db-logos/salesforce.png\";","export default __webpack_public_path__ + \"images/db-logos/scylla.png\";","export default __webpack_public_path__ + \"images/db-logos/snowflake.png\";","export default __webpack_public_path__ + \"images/db-logos/sparql_endpoint.png\";","export default __webpack_public_path__ + \"images/db-logos/sqlite.png\";","export default __webpack_public_path__ + \"images/db-logos/tinybird.png\";","export default __webpack_public_path__ + \"images/db-logos/treasuredata.png\";","export default __webpack_public_path__ + \"images/db-logos/trino.png\";","export default __webpack_public_path__ + \"images/db-logos/uptycs.png\";","export default __webpack_public_path__ + \"images/db-logos/url.png\";","export default __webpack_public_path__ + \"images/db-logos/vertica.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_appmetrika.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_disk.png\";","export default __webpack_public_path__ + \"images/db-logos/yandex_metrika.png\";","export default __webpack_public_path__ + \"images/destinations/asana.png\";","export default __webpack_public_path__ + \"images/destinations/chatwork.png\";","export default __webpack_public_path__ + \"images/destinations/datadog.png\";","export default __webpack_public_path__ + \"images/destinations/discord.png\";","export default __webpack_public_path__ + \"images/destinations/email.png\";","export default __webpack_public_path__ + \"images/destinations/hangouts_chat.png\";","export default __webpack_public_path__ + \"images/destinations/mattermost.png\";","export default __webpack_public_path__ + \"images/destinations/microsoft_teams_webhook.png\";","export default __webpack_public_path__ + \"images/destinations/pagerduty.png\";","export default __webpack_public_path__ + \"images/destinations/slack.png\";","export default __webpack_public_path__ + \"images/destinations/webex.png\";","export default __webpack_public_path__ + \"images/destinations/webhook.png\";","export default __webpack_public_path__ + \"images/favicon-16x16.png\";","export default __webpack_public_path__ + \"images/favicon-32x32.png\";","export default __webpack_public_path__ + \"images/favicon-96x96.png\";","export default __webpack_public_path__ + \"images/fixtures/map-tile.png\";","export default __webpack_public_path__ + \"images/google_logo.svg\";","export default __webpack_public_path__ + \"images/illustrations/alert.svg\";","export default __webpack_public_path__ + \"images/illustrations/dashboard.svg\";","export default __webpack_public_path__ + \"images/illustrations/no-query-results.svg\";","export default __webpack_public_path__ + \"images/illustrations/query.svg\";","export default __webpack_public_path__ + \"images/logo.png\";","export default __webpack_public_path__ + \"images/logo_white.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1782;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import React from \"react\";\nimport Button, { ButtonProps as AntdButtonProps } from \"antd/lib/button\";\n\nfunction DefaultLinkComponent({ children, ...props }: React.AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return <a {...props}>{children}</a>;\n}\n\nLink.Component = DefaultLinkComponent;\n\ninterface LinkProps extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"role\" | \"type\" | \"target\"> {\n  href: string;\n}\nfunction Link({ children, ...props }: LinkProps) {\n  return <Link.Component {...props}>{children}</Link.Component>;\n}\n\ninterface LinkWithIconProps extends LinkProps {\n  children: string;\n  icon: JSX.Element;\n  alt: string;\n  target?: \"_self\" | \"_blank\" | \"_parent\" | \"_top\";\n}\n\nfunction LinkWithIcon({ icon, alt, children, ...props }: LinkWithIconProps) {\n  return (\n    <Link.Component {...props}>\n      {children} {icon} <span className=\"sr-only\">{alt}</span>\n    </Link.Component>\n  );\n}\n\nLink.WithIcon = LinkWithIcon;\n\nfunction ExternalLink({\n  icon = <i className=\"fa fa-external-link\" aria-hidden=\"true\" />,\n  alt = \"(opens in a new tab)\",\n  ...props\n}: Omit<LinkWithIconProps, \"target\">) {\n  return <Link.WithIcon target=\"_blank\" rel=\"noopener noreferrer\" icon={icon} alt={alt} {...props} />;\n}\n\nLink.External = ExternalLink;\n\n// Ant Button will render an <a> if href is present.\nfunction DefaultButtonLinkComponent(props: ButtonProps) {\n  return <Button {...props} />;\n}\n\nButtonLink.Component = DefaultButtonLinkComponent;\n\ninterface ButtonProps extends AntdButtonProps {\n  href: string;\n}\n\nfunction ButtonLink(props: ButtonProps) {\n  return <ButtonLink.Component {...props} />;\n}\n\nLink.Button = ButtonLink;\n\nexport default Link;\n","import { isNil, isUndefined, isFunction, isObject, trimStart, mapValues, omitBy, extend } from \"lodash\";\nimport qs from \"query-string\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nfunction normalizeLocation(rawLocation) {\n  const { pathname, search, hash } = rawLocation;\n  const result = {};\n\n  result.path = pathname;\n  result.search = mapValues(qs.parse(search), value => (isNil(value) ? true : value));\n  result.hash = trimStart(hash, \"#\");\n  result.url = `${pathname}${search}${hash}`;\n\n  return result;\n}\n\nconst location = {\n  listen(handler) {\n    if (isFunction(handler)) {\n      return history.listen((unused, action) => handler(location, action));\n    } else {\n      return () => {};\n    }\n  },\n\n  confirmChange(handler) {\n    if (isFunction(handler)) {\n      return history.block(nextLocation => {\n        return handler(normalizeLocation(nextLocation), location);\n      });\n    } else {\n      return () => {};\n    }\n  },\n\n  update(newLocation, replace = false) {\n    if (isObject(newLocation)) {\n      // remap fields and remove undefined ones\n      newLocation = omitBy(\n        {\n          pathname: newLocation.path,\n          search: newLocation.search,\n          hash: newLocation.hash,\n        },\n        isUndefined\n      );\n\n      // keep existing fields (!)\n      newLocation = extend(\n        {\n          pathname: location.path,\n          search: location.search,\n          hash: location.hash,\n        },\n        newLocation\n      );\n\n      // serialize search and keep existing search parameters (!)\n      if (isObject(newLocation.search)) {\n        newLocation.search = omitBy(extend({}, location.search, newLocation.search), isNil);\n        newLocation.search = mapValues(newLocation.search, value => (value === true ? null : value));\n        newLocation.search = qs.stringify(newLocation.search);\n      }\n    }\n    if (replace) {\n      history.replace(newLocation);\n    } else {\n      history.push(newLocation);\n    }\n  },\n\n  url: undefined,\n\n  path: undefined,\n  setPath(path, replace = false) {\n    location.update({ path }, replace);\n  },\n\n  search: undefined,\n  setSearch(search, replace = false) {\n    location.update({ search }, replace);\n  },\n\n  hash: undefined,\n  setHash(hash, replace = false) {\n    location.update({ hash }, replace);\n  },\n};\n\nfunction locationChanged() {\n  extend(location, normalizeLocation(history.location));\n}\n\nhistory.listen(locationChanged);\nlocationChanged(); // init service\n\nexport default location;\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Auth } from \"@/services/auth\";\n\nconst SESSION_RESTORED_MESSAGE = \"redash_session_restored\";\n\nexport function notifySessionRestored() {\n  if (window.opener) {\n    window.opener.postMessage({ type: SESSION_RESTORED_MESSAGE }, window.location.origin);\n  }\n}\n\nfunction getPopupPosition(width, height) {\n  const windowLeft = window.screenX;\n  const windowTop = window.screenY;\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  return {\n    left: Math.floor((windowWidth - width) / 2 + windowLeft),\n    top: Math.floor((windowHeight - height) / 2 + windowTop),\n    width: Math.floor(width),\n    height: Math.floor(height),\n  };\n}\n\nfunction showRestoreSessionPrompt(loginUrl, onSuccess) {\n  let popup = null;\n\n  Modal.warning({\n    content: \"Your session has expired. Please login to continue.\",\n    okText: (\n      <React.Fragment>\n        Login <i className=\"fa fa-external-link m-r-5\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">(opens in a new tab)</span>\n      </React.Fragment>\n    ),\n    centered: true,\n    mask: true,\n    maskClosable: false,\n    keyboard: false,\n    onOk: closeModal => {\n      if (popup && !popup.closed) {\n        popup.focus();\n        return; // popup already shown\n      }\n\n      const popupOptions = {\n        ...getPopupPosition(640, 640),\n        menubar: \"no\",\n        toolbar: \"no\",\n        location: \"yes\",\n        resizable: \"yes\",\n        scrollbars: \"yes\",\n        status: \"yes\",\n      };\n\n      popup = window.open(loginUrl, \"Restore Session\", map(popupOptions, (value, key) => `${key}=${value}`).join(\",\"));\n\n      const handlePostMessage = event => {\n        if (event.data.type === SESSION_RESTORED_MESSAGE) {\n          if (popup) {\n            popup.close();\n          }\n          popup = null;\n          window.removeEventListener(\"message\", handlePostMessage);\n          closeModal();\n          onSuccess();\n        }\n      };\n\n      window.addEventListener(\"message\", handlePostMessage, false);\n    },\n  });\n}\n\nlet restoreSessionPromise = null;\n\nexport function restoreSession() {\n  if (!restoreSessionPromise) {\n    restoreSessionPromise = new Promise(resolve => {\n      showRestoreSessionPrompt(Auth.getLoginUrl(), () => {\n        restoreSessionPromise = null;\n        resolve();\n      });\n    });\n  }\n\n  return restoreSessionPromise;\n}\n","import { get, includes } from \"lodash\";\nimport axiosLib from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { Auth } from \"@/services/auth\";\nimport qs from \"query-string\";\nimport { restoreSession } from \"@/services/restoreSession\";\n\nexport const axios = axiosLib.create({\n  paramsSerializer: params => qs.stringify(params),\n  xsrfCookieName: \"csrf_token\",\n  xsrfHeaderName: \"X-CSRF-TOKEN\",\n});\n\naxios.interceptors.response.use(response => response.data);\n\nexport const csrfRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const message = get(error, \"response.data.message\");\n    if (error.isAxiosError && includes(message, \"CSRF\")) {\n      return axios.get(\"/ping\");\n    } else {\n      return Promise.reject(error);\n    }\n  },\n  { statusCodes: [400] }\n);\n\nexport const sessionRefreshInterceptor = createAuthRefreshInterceptor(\n  axios,\n  error => {\n    const status = parseInt(get(error, \"response.status\"));\n    const message = get(error, \"response.data.message\");\n    // TODO: In axios@0.9.1 this check could be replaced with { skipAuthRefresh: true } flag. See axios-auth-refresh docs\n    const requestUrl = get(error, \"config.url\");\n    if (error.isAxiosError && (status === 401 || includes(message, \"Please login\")) && requestUrl !== \"api/session\") {\n      return restoreSession();\n    }\n    return Promise.reject(error);\n  },\n  {\n    statusCodes: [401, 404],\n    pauseInstanceWhileRefreshing: false, // According to docs, `false` is default value, but in fact it's not :-)\n  }\n);\n\naxios.interceptors.request.use(config => {\n  const apiKey = Auth.getApiKey();\n  if (apiKey) {\n    config.headers.Authorization = `Key ${apiKey}`;\n  }\n\n  return config;\n});\n","import debug from \"debug\";\nimport { includes, extend } from \"lodash\";\nimport location from \"@/services/location\";\nimport { axios } from \"@/services/axios\";\nimport { notifySessionRestored } from \"@/services/restoreSession\";\n\nexport const currentUser = {\n  _isAdmin: undefined,\n\n  canEdit(object) {\n    const userId = object.user_id || (object.user && object.user.id);\n    return this.isAdmin || (userId && userId === this.id);\n  },\n\n  canCreate() {\n    return (\n      this.hasPermission(\"create_query\") || this.hasPermission(\"create_dashboard\") || this.hasPermission(\"list_alerts\")\n    );\n  },\n\n  hasPermission(permission) {\n    if (permission === \"admin\" && this._isAdmin !== undefined) {\n      return this._isAdmin;\n    }\n    return includes(this.permissions, permission);\n  },\n\n  get isAdmin() {\n    return this.hasPermission(\"admin\");\n  },\n\n  set isAdmin(isAdmin) {\n    this._isAdmin = isAdmin;\n  },\n};\n\nexport const clientConfig = {};\nexport const messages = [];\n\nconst logger = debug(\"redash:auth\");\nconst session = { loaded: false };\n\nconst AuthUrls = {\n  Login: \"login\",\n};\n\nexport function updateClientConfig(newClientConfig) {\n  extend(clientConfig, newClientConfig);\n}\n\nfunction updateSession(sessionData) {\n  logger(\"Updating session to be:\", sessionData);\n  extend(session, sessionData, { loaded: true });\n  extend(currentUser, session.user);\n  extend(clientConfig, session.client_config);\n  extend(messages, session.messages);\n}\n\nexport const Auth = {\n  isAuthenticated() {\n    return session.loaded && session.user.id;\n  },\n  getLoginUrl() {\n    return AuthUrls.Login;\n  },\n  setLoginUrl(loginUrl) {\n    AuthUrls.Login = loginUrl;\n  },\n  login() {\n    const next = encodeURI(location.url);\n    logger(\"Calling login with next = %s\", next);\n    window.location.href = `${AuthUrls.Login}?next=${next}`;\n  },\n  logout() {\n    logger(\"Logout.\");\n    window.location.href = \"logout\";\n  },\n  loadSession() {\n    logger(\"Loading session\");\n    if (session.loaded && session.user.id) {\n      logger(\"Resolving with local value.\");\n      return Promise.resolve(session);\n    }\n\n    Auth.setApiKey(null);\n    return axios.get(\"api/session\").then(data => {\n      updateSession(data);\n      return session;\n    });\n  },\n  loadConfig() {\n    logger(\"Loading config\");\n    return axios.get(\"/api/config\").then(data => {\n      updateSession({ client_config: data.client_config, user: { permissions: [] }, messages: [] });\n      return data;\n    });\n  },\n  setApiKey(apiKey) {\n    logger(\"Set API key to: %s\", apiKey);\n    Auth.apiKey = apiKey;\n  },\n  getApiKey() {\n    return Auth.apiKey;\n  },\n  requireSession() {\n    logger(\"Requested authentication\");\n    if (Auth.isAuthenticated()) {\n      return Promise.resolve(session);\n    }\n    return Auth.loadSession()\n      .then(() => {\n        if (Auth.isAuthenticated()) {\n          logger(\"Loaded session\");\n          notifySessionRestored();\n          return session;\n        }\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      })\n      .catch(() => {\n        logger(\"Need to login, redirecting\");\n        Auth.login();\n      });\n  },\n};\n","import DefaultPolicy from \"./DefaultPolicy\";\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let policy = new DefaultPolicy();\n\nexport function setPolicy(newPolicy) {\n  policy = newPolicy;\n}\n","import { get, isArray } from \"lodash\";\nimport { currentUser, clientConfig } from \"@/services/auth\";\n\n/* eslint-disable class-methods-use-this */\n\nexport default class DefaultPolicy {\n  refresh() {\n    return Promise.resolve(this);\n  }\n\n  canCreateDataSource() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDataSourceEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDestination() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateDestinationEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  canCreateDashboard() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  isCreateDashboardEnabled() {\n    return currentUser.hasPermission(\"create_dashboard\");\n  }\n\n  canCreateAlert() {\n    return true;\n  }\n\n  canCreateUser() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateUserEnabled() {\n    return currentUser.isAdmin;\n  }\n\n  isCreateQuerySnippetEnabled() {\n    return true;\n  }\n\n  getDashboardRefreshIntervals() {\n    const result = clientConfig.dashboardRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  getQueryRefreshIntervals() {\n    const result = clientConfig.queryRefreshIntervals;\n    return isArray(result) ? result : null;\n  }\n\n  canEdit(object) {\n    return get(object, \"can_edit\", false);\n  }\n\n  canRun() {\n    return true;\n  }\n}\n","import { axios } from \"@/services/axios\";\n\nclass OrganizationStatus {\n  constructor() {\n    this.objectCounters = {};\n  }\n\n  refresh() {\n    return axios.get(\"api/organization/status\").then(data => {\n      this.objectCounters = data.object_counters;\n      return this;\n    });\n  }\n}\n\nexport default new OrganizationStatus();\n","import { isFunction, isString, isUndefined } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst componentsRegistry = new Map();\nconst activeInstances = new Set();\n\nexport function registerComponent(name, component) {\n  if (isString(name) && name !== \"\") {\n    componentsRegistry.set(name, isFunction(component) ? component : null);\n    // Refresh active DynamicComponent instances which use this component\n    activeInstances.forEach(dynamicComponent => {\n      if (dynamicComponent.props.name === name) {\n        dynamicComponent.forceUpdate();\n      }\n    });\n  }\n}\n\nexport function unregisterComponent(name) {\n  registerComponent(name, null);\n}\n\nexport default class DynamicComponent extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    fallback: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: null,\n  };\n\n  componentDidMount() {\n    activeInstances.add(this);\n  }\n\n  componentWillUnmount() {\n    activeInstances.delete(this);\n  }\n\n  render() {\n    const { name, children, fallback, ...props } = this.props;\n    const RealComponent = componentsRegistry.get(name);\n    if (!RealComponent) {\n      // return fallback if any, otherwise return children\n      return isUndefined(fallback) ? children : fallback;\n    }\n    return <RealComponent {...props}>{children}</RealComponent>;\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"./PlainButton.less\";\n\nexport interface PlainButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"type\"> {\n  type?: \"link\" | \"button\";\n}\n\nfunction PlainButton({ className, type, ...rest }: PlainButtonProps) {\n  return (\n    <button\n      className={classNames(\"plain-button\", \"clickable\", { \"plain-button-link\": type === \"link\" }, className)}\n      type=\"button\"\n      {...rest}\n    />\n  );\n}\n\nexport default PlainButton;\n","import React from \"react\";\nimport AntTooltip, { TooltipProps } from \"antd/lib/tooltip\";\nimport { isNil } from \"lodash\";\n\nexport default function Tooltip({ title, ...restProps }: TooltipProps) {\n  const liveTitle = !isNil(title) ? (\n    <span role=\"status\" aria-live=\"assertive\" aria-relevant=\"additions\">\n      {title}\n    </span>\n  ) : null;\n\n  return <AntTooltip trigger={[\"hover\", \"focus\"]} title={liveTitle} {...restProps} />;\n}\n","import { uniqueId } from \"lodash\";\nimport { useLazyRef } from \"./useLazyRef\";\n\nexport function useUniqueId(prefix: string) {\n  const { current: id } = useLazyRef(() => uniqueId(prefix));\n  return id;\n}\n","import { useRef } from \"react\";\n\nexport function useLazyRef<T>(getInitialValue: () => T) {\n  const lazyRef = useRef<T>(null) as React.MutableRefObject<T>;\n\n  if (lazyRef.current === null) {\n    lazyRef.current = getInitialValue();\n  }\n\n  return lazyRef;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport cx from \"classnames\";\n\nfunction BigMessage({ message, icon, children, className }) {\n  const messageId = useUniqueId(\"bm-message\");\n  return (\n    <div\n      className={\"big-message p-15 text-center \" + className}\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-relevant=\"additions removals\">\n      <h3 className=\"m-t-0 m-b-0\" aria-labelledby={messageId}>\n        <i className={cx(\"fa\", icon)} aria-hidden=\"true\" />\n      </h3>\n      <br />\n      <span id={messageId}>{message}</span>\n      {children}\n    </div>\n  );\n}\n\nBigMessage.propTypes = {\n  message: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nBigMessage.defaultProps = {\n  message: \"\",\n  children: null,\n  className: \"tiled bg-white\",\n};\n\nexport default BigMessage;\n","import { startsWith, get, some, mapValues } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Drawer from \"antd/lib/drawer\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport BigMessage from \"@/components/BigMessage\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\n\nimport \"./HelpTrigger.less\";\n\nconst DOMAIN = \"https://redash.io\";\nconst HELP_PATH = \"/help\";\nconst IFRAME_TIMEOUT = 20000;\nconst IFRAME_URL_UPDATE_MESSAGE = \"iframe_url\";\n\nexport const TYPES = mapValues(\n  {\n    HOME: [\"\", \"Help\"],\n    VALUE_SOURCE_OPTIONS: [\"/user-guide/querying/query-parameters#Value-Source-Options\", \"Guide: Value Source Options\"],\n    SHARE_DASHBOARD: [\"/user-guide/dashboards/sharing-dashboards\", \"Guide: Sharing and Embedding Dashboards\"],\n    AUTHENTICATION_OPTIONS: [\"/user-guide/users/authentication-options\", \"Guide: Authentication Options\"],\n    USAGE_DATA_SHARING: [\"/open-source/admin-guide/usage-data\", \"Help: Anonymous Usage Data Sharing\"],\n    DS_ATHENA: [\"/data-sources/amazon-athena-setup\", \"Guide: Help Setting up Amazon Athena\"],\n    DS_BIGQUERY: [\"/data-sources/bigquery-setup\", \"Guide: Help Setting up BigQuery\"],\n    DS_URL: [\"/data-sources/querying-urls\", \"Guide: Help Setting up URL\"],\n    DS_MONGODB: [\"/data-sources/mongodb-setup\", \"Guide: Help Setting up MongoDB\"],\n    DS_GOOGLE_SPREADSHEETS: [\n      \"/data-sources/querying-a-google-spreadsheet\",\n      \"Guide: Help Setting up Google Spreadsheets\",\n    ],\n    DS_GOOGLE_ANALYTICS: [\"/data-sources/google-analytics-setup\", \"Guide: Help Setting up Google Analytics\"],\n    DS_AXIBASETSD: [\"/data-sources/axibase-time-series-database\", \"Guide: Help Setting up Axibase Time Series\"],\n    DS_RESULTS: [\"/user-guide/querying/query-results-data-source\", \"Guide: Help Setting up Query Results\"],\n    ALERT_SETUP: [\"/user-guide/alerts/setting-up-an-alert\", \"Guide: Setting Up a New Alert\"],\n    MAIL_CONFIG: [\"/open-source/setup/#Mail-Configuration\", \"Guide: Mail Configuration\"],\n    ALERT_NOTIF_TEMPLATE_GUIDE: [\"/user-guide/alerts/custom-alert-notifications\", \"Guide: Custom Alerts Notifications\"],\n    FAVORITES: [\"/user-guide/querying/favorites-tagging/#Favorites\", \"Guide: Favorites\"],\n    MANAGE_PERMISSIONS: [\n      \"/user-guide/querying/writing-queries#Managing-Query-Permissions\",\n      \"Guide: Managing Query Permissions\",\n    ],\n    NUMBER_FORMAT_SPECS: [\"/user-guide/visualizations/formatting-numbers\", \"Formatting Numbers\"],\n    GETTING_STARTED: [\"/user-guide/getting-started\", \"Guide: Getting Started\"],\n    DASHBOARDS: [\"/user-guide/dashboards\", \"Guide: Dashboards\"],\n    QUERIES: [\"/user-guide/querying\", \"Guide: Queries\"],\n    ALERTS: [\"/user-guide/alerts\", \"Guide: Alerts\"],\n  },\n  ([url, title]) => [DOMAIN + HELP_PATH + url, title]\n);\n\nconst HelpTriggerPropTypes = {\n  type: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.node,\n  className: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  renderAsLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nconst HelpTriggerDefaultProps = {\n  type: null,\n  href: null,\n  title: null,\n  className: null,\n  showTooltip: true,\n  renderAsLink: false,\n  children: <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />,\n};\n\nexport function helpTriggerWithTypes(types, allowedDomains = [], drawerClassName = null) {\n  return class HelpTrigger extends React.Component {\n    static propTypes = {\n      ...HelpTriggerPropTypes,\n      type: PropTypes.oneOf(Object.keys(types)),\n    };\n\n    static defaultProps = HelpTriggerDefaultProps;\n\n    iframeRef = React.createRef();\n\n    iframeLoadingTimeout = null;\n\n    state = {\n      visible: false,\n      loading: false,\n      error: false,\n      currentUrl: null,\n    };\n\n    componentDidMount() {\n      window.addEventListener(\"message\", this.onPostMessageReceived, false);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"message\", this.onPostMessageReceived);\n      clearTimeout(this.iframeLoadingTimeout);\n    }\n\n    loadIframe = url => {\n      clearTimeout(this.iframeLoadingTimeout);\n      this.setState({ loading: true, error: false });\n\n      this.iframeRef.current.src = url;\n      this.iframeLoadingTimeout = setTimeout(() => {\n        this.setState({ error: url, loading: false });\n      }, IFRAME_TIMEOUT); // safety\n    };\n\n    onIframeLoaded = () => {\n      this.setState({ loading: false });\n      clearTimeout(this.iframeLoadingTimeout);\n    };\n\n    onPostMessageReceived = event => {\n      if (!some(allowedDomains, domain => startsWith(event.origin, domain))) {\n        return;\n      }\n\n      const { type, message: currentUrl } = event.data || {};\n      if (type !== IFRAME_URL_UPDATE_MESSAGE) {\n        return;\n      }\n\n      this.setState({ currentUrl });\n    };\n\n    getUrl = () => {\n      const helpTriggerType = get(types, this.props.type);\n      return helpTriggerType ? helpTriggerType[0] : this.props.href;\n    };\n\n    openDrawer = e => {\n      // keep \"open in new tab\" behavior\n      if (!e.shiftKey && !e.ctrlKey && !e.metaKey) {\n        e.preventDefault();\n        this.setState({ visible: true });\n        // wait for drawer animation to complete so there's no animation jank\n        setTimeout(() => this.loadIframe(this.getUrl()), 300);\n      }\n    };\n\n    closeDrawer = event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.setState({ visible: false });\n      this.setState({ visible: false, currentUrl: null });\n    };\n\n    render() {\n      const targetUrl = this.getUrl();\n      if (!targetUrl) {\n        return null;\n      }\n\n      const tooltip = get(types, `${this.props.type}[1]`, this.props.title);\n      const className = cx(\"help-trigger\", this.props.className);\n      const url = this.state.currentUrl;\n      const isAllowedDomain = some(allowedDomains, domain => startsWith(url || targetUrl, domain));\n      const shouldRenderAsLink = this.props.renderAsLink || !isAllowedDomain;\n\n      return (\n        <React.Fragment>\n          <Tooltip\n            title={\n              this.props.showTooltip ? (\n                <>\n                  {tooltip}\n                  {shouldRenderAsLink && (\n                    <>\n                      {\" \"}\n                      <i className=\"fa fa-external-link\" style={{ marginLeft: 5 }} aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </>\n                  )}\n                </>\n              ) : null\n            }>\n            <Link\n              href={url || this.getUrl()}\n              className={className}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              onClick={shouldRenderAsLink ? () => {} : this.openDrawer}>\n              {this.props.children}\n            </Link>\n          </Tooltip>\n          <Drawer\n            placement=\"right\"\n            closable={false}\n            onClose={this.closeDrawer}\n            visible={this.state.visible}\n            className={cx(\"help-drawer\", drawerClassName)}\n            destroyOnClose\n            width={400}>\n            <div className=\"drawer-wrapper\">\n              <div className=\"drawer-menu\">\n                {url && (\n                  <Tooltip title=\"Open page in a new window\" placement=\"left\">\n                    {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                    <Link href={url} target=\"_blank\">\n                      <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">(opens in a new tab)</span>\n                    </Link>\n                  </Tooltip>\n                )}\n                <Tooltip title=\"Close\" placement=\"bottom\">\n                  <PlainButton onClick={this.closeDrawer}>\n                    <CloseOutlinedIcon />\n                  </PlainButton>\n                </Tooltip>\n              </div>\n\n              {/* iframe */}\n              {!this.state.error && (\n                <iframe\n                  ref={this.iframeRef}\n                  title=\"Usage Help\"\n                  src=\"about:blank\"\n                  className={cx({ ready: !this.state.loading })}\n                  onLoad={this.onIframeLoaded}\n                />\n              )}\n\n              {/* loading indicator */}\n              {this.state.loading && (\n                <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" className=\"help-message\" />\n              )}\n\n              {/* error message */}\n              {this.state.error && (\n                <BigMessage icon=\"fa-exclamation-circle\" className=\"help-message\">\n                  Something went wrong.\n                  <br />\n                  {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                  <Link href={this.state.error} target=\"_blank\" rel=\"noopener\">\n                    Click here\n                  </Link>{\" \"}\n                  to open the page in a new window.\n                </BigMessage>\n              )}\n            </div>\n\n            {/* extra content */}\n            <DynamicComponent name=\"HelpDrawerExtraContent\" onLeave={this.closeDrawer} openPageUrl={this.loadIframe} />\n          </Drawer>\n        </React.Fragment>\n      );\n    }\n  };\n}\n\nregisterComponent(\"HelpTrigger\", helpTriggerWithTypes(TYPES, [DOMAIN]));\n\nexport default function HelpTrigger(props) {\n  return <DynamicComponent {...props} name=\"HelpTrigger\" />;\n}\n\nHelpTrigger.propTypes = HelpTriggerPropTypes;\nHelpTrigger.defaultProps = HelpTriggerDefaultProps;\n","import { isFunction } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\n\n/**\n  Wrapper for dialogs based on Ant's <Modal> component.\n\n\n  Using wrapped dialogs\n  =====================\n\n  Wrapped component is an object with two fields:\n\n    {\n      showModal: (dialogProps) => object({\n          close: (result) => void,\n          dismiss: (reason) => void,\n          onClose: (handler) => this,\n          onDismiss: (handler) => this,\n        }),\n      Component: React.Component, // wrapped dialog component\n    }\n\n  To open dialog, use `showModal` method; optionally you can pass additional properties that\n  will be expanded on wrapped component:\n\n    const dialog = SomeWrappedDialog.showModal()\n\n    const dialog = SomeWrappedDialog.showModal({ greeting: 'Hello' })\n\n  To get result of modal, use `onClose`/`onDismiss` setters:\n\n    dialog\n      .onClose(result => { ... }) // pressed OK button or used `close` method\n      .onDismiss(result => { ... }) // pressed Cancel button or used `dismiss` method\n\n  If `onClose`/`onDismiss` returns a promise - dialog wrapper will stop handling further close/dismiss\n  requests and will show loader on a corresponding button until that promise is fulfilled (either resolved or\n  rejected). If that promise will be rejected - dialog close/dismiss will be abandoned. Use promise returned\n  from `close`/`dismiss` methods to handle errors (if needed).\n\n  Also, dialog has `close` and `dismiss` methods that allows to close dialog by caller. Passed arguments\n  will be passed to a corresponding handler. Both methods will return the promise returned from `onClose` and\n `onDismiss` callbacks. `update` method allows to pass new properties to dialog.\n\n\n  Creating a dialog\n  ================\n\n  1. Add imports:\n\n    import { wrap as wrapDialog, DialogPropType } from 'path/to/DialogWrapper';\n\n  2. define a `dialog` property on your component:\n\n    propTypes = {\n      dialog: DialogPropType.isRequired,\n    };\n\n  `dialog` property is an object:\n\n    {\n      props: object, // properties for <Modal> component;\n      close: (result) => void, // method to confirm dialog; `result` will be returned to caller\n      dismiss: (reason) => void, // method to reject dialog; `reason` will be returned to caller\n    }\n\n  3. expand additional properties on <Modal> component:\n\n    render() {\n      const { dialog } = this.props;\n      return (\n        <Modal {...dialog.props}>\n      );\n    }\n\n  4. wrap your component and export it:\n\n    export default wrapDialog(YourComponent).\n\n  Your component is ready to use. Wrapper will manage <Modal>'s visibility and events.\n  If you want to override behavior of `onOk`/`onCancel` - don't forget to close dialog:\n\n    customOkHandler() {\n      this.saveData().then(() => {\n         this.props.dialog.close({ success: true }); // or dismiss();\n      });\n    }\n\n    render() {\n      const { dialog } = this.props;\n        return (\n          <Modal {...dialog.props} onOk={() => this.customOkHandler()}>\n        );\n    }\n*/\n\nexport const DialogPropType = PropTypes.shape({\n  props: PropTypes.shape({\n    visible: PropTypes.bool,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    afterClose: PropTypes.func,\n  }).isRequired,\n  close: PropTypes.func.isRequired,\n  dismiss: PropTypes.func.isRequired,\n});\n\nfunction openDialog(DialogComponent, props) {\n  const dialog = {\n    props: {\n      visible: true,\n      okButtonProps: {},\n      cancelButtonProps: {},\n      onOk: () => {},\n      onCancel: () => {},\n      afterClose: () => {},\n    },\n    close: () => {},\n    dismiss: () => {},\n  };\n\n  let pendingCloseTask = null;\n\n  const handlers = {\n    onClose: () => {},\n    onDismiss: () => {},\n  };\n\n  const container = document.createElement(\"div\");\n  document.body.appendChild(container);\n\n  function render() {\n    ReactDOM.render(<DialogComponent {...props} dialog={dialog} />, container);\n  }\n\n  function destroyDialog() {\n    // Allow calling chain to roll up, and then destroy component\n    setTimeout(() => {\n      ReactDOM.unmountComponentAtNode(container);\n      document.body.removeChild(container);\n    }, 10);\n  }\n\n  function processDialogClose(result, setAdditionalDialogProps) {\n    dialog.props.okButtonProps = { disabled: true };\n    dialog.props.cancelButtonProps = { disabled: true };\n    setAdditionalDialogProps();\n    render();\n\n    return Promise.resolve(result)\n      .then(() => {\n        dialog.props.visible = false;\n      })\n      .finally(() => {\n        dialog.props.okButtonProps = {};\n        dialog.props.cancelButtonProps = {};\n        render();\n      });\n  }\n\n  function closeDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onClose(result), () => {\n        dialog.props.okButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  function dismissDialog(result) {\n    if (!pendingCloseTask) {\n      pendingCloseTask = processDialogClose(handlers.onDismiss(result), () => {\n        dialog.props.cancelButtonProps.loading = true;\n      }).finally(() => {\n        pendingCloseTask = null;\n      });\n    }\n    return pendingCloseTask;\n  }\n\n  dialog.props.onOk = closeDialog;\n  dialog.props.onCancel = dismissDialog;\n  dialog.props.afterClose = destroyDialog;\n  dialog.close = closeDialog;\n  dialog.dismiss = dismissDialog;\n\n  const result = {\n    close: closeDialog,\n    dismiss: dismissDialog,\n    update: newProps => {\n      props = { ...props, ...newProps };\n      render();\n    },\n    onClose: handler => {\n      if (isFunction(handler)) {\n        handlers.onClose = handler;\n      }\n      return result;\n    },\n    onDismiss: handler => {\n      if (isFunction(handler)) {\n        handlers.onDismiss = handler;\n      }\n      return result;\n    },\n  };\n\n  render(); // show it only when all structures initialized to avoid unnecessary re-rendering\n\n  return result;\n}\n\nexport function wrap(DialogComponent) {\n  return {\n    Component: DialogComponent,\n    showModal: props => openDialog(DialogComponent, props),\n  };\n}\n\nexport default {\n  DialogPropType,\n  wrap,\n};\n","import { pick, extend } from \"lodash\";\n\nconst link = document.createElement(\"a\"); // the only way to get an instance of Location class\n// add to document to apply <base> href\nlink.style.display = \"none\";\ndocument.body.appendChild(link);\n\nconst fragmentProps = [\"origin\", \"protocol\", \"host\", \"hostname\", \"port\", \"pathname\", \"search\", \"hash\", \"href\"];\n\nexport function parse(url) {\n  link.setAttribute(\"href\", url);\n  return pick(link, fragmentProps);\n}\n\nexport function stringify(fragments) {\n  extend(link, pick(fragments, fragmentProps));\n  return link.href; // absolute URL\n}\n\nexport function normalize(url) {\n  link.setAttribute(\"href\", url);\n  return link.href; // absolute URL\n}\n\nexport default { parse, stringify, normalize };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function ErrorMessageDetails(props) {\n  return <h4>{props.message}</h4>;\n}\n\nErrorMessageDetails.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n  message: PropTypes.string.isRequired,\n};\n","import { get, isObject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ErrorMessage.less\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { ErrorMessageDetails } from \"@/components/ApplicationArea/ErrorMessageDetails\";\n\nfunction getErrorMessageByStatus(status, defaultMessage) {\n  switch (status) {\n    case 404:\n      return \"It seems like the page you're looking for cannot be found.\";\n    case 401:\n    case 403:\n      return \"It seems like you don’t have permission to see this page.\";\n    default:\n      return defaultMessage;\n  }\n}\n\nfunction getErrorMessage(error) {\n  const message = \"It seems like we encountered an error. Try refreshing this page or contact your administrator.\";\n  if (isObject(error)) {\n    // HTTP errors\n    if (error.isAxiosError && isObject(error.response)) {\n      return getErrorMessageByStatus(error.response.status, get(error, \"response.data.message\", message));\n    }\n    // Router errors\n    if (error.status) {\n      return getErrorMessageByStatus(error.status, message);\n    }\n  }\n  return message;\n}\n\nexport default function ErrorMessage({ error, message }) {\n  if (!error) {\n    return null;\n  }\n\n  console.error(error);\n\n  const errorDetailsProps = {\n    error,\n    message: message || getErrorMessage(error),\n  };\n\n  return (\n    <div className=\"error-message-container\" data-test=\"ErrorMessage\" role=\"alert\">\n      <div className=\"error-state bg-white tiled\">\n        <div className=\"error-state__icon\">\n          <i className=\"zmdi zmdi-alert-circle-o\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"error-state__details\">\n          <DynamicComponent\n            name=\"ErrorMessageDetails\"\n            fallback={<ErrorMessageDetails {...errorDetailsProps} />}\n            {...errorDetailsProps}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.object.isRequired,\n  message: PropTypes.string,\n};\n","import { isFunction, startsWith, trimStart, trimEnd } from \"lodash\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport UniversalRouter from \"universal-router\";\nimport ErrorBoundary from \"@redash/viz/lib/components/ErrorBoundary\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\n\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction generateRouteKey() {\n  return Math.random()\n    .toString(32)\n    .substr(2);\n}\n\nexport const CurrentRouteContext = React.createContext(null);\n\nexport function useCurrentRoute() {\n  return useContext(CurrentRouteContext);\n}\n\nexport function stripBase(href) {\n  // Resolve provided link and '' (root) relative to document's base.\n  // If provided href is not related to current document (does not\n  // start with resolved root) - return false. Otherwise\n  // strip root and return relative url.\n\n  const baseHref = trimEnd(url.normalize(\"\"), \"/\") + \"/\";\n  href = url.normalize(href);\n\n  if (startsWith(href, baseHref)) {\n    return \"/\" + trimStart(href.substr(baseHref.length), \"/\");\n  }\n\n  return false;\n}\n\nexport default function Router({ routes, onRouteChange }) {\n  const [currentRoute, setCurrentRoute] = useState(null);\n\n  const currentPathRef = useRef(null);\n  const errorHandlerRef = useRef();\n\n  useEffect(() => {\n    let isAbandoned = false;\n\n    const router = new UniversalRouter(routes, {\n      resolveRoute({ route }, routeParams) {\n        if (isFunction(route.render)) {\n          return { ...route, routeParams };\n        }\n      },\n    });\n\n    function resolve(action) {\n      if (!isAbandoned) {\n        if (errorHandlerRef.current) {\n          errorHandlerRef.current.reset();\n        }\n\n        const pathname = stripBase(location.path) || \"/\";\n\n        // This is a optimization for route resolver: if current route was already resolved\n        // from this path - do nothing. It also prevents router from using outdated route in a case\n        // when user navigated to another path while current one was still resolving.\n        // Note: this lock uses only `path` fragment of URL to distinguish routes because currently\n        // all pages depend only on this fragment and handle search/hash on their own. If router\n        // should reload page on search/hash change - this fragment (and few checks below) should be updated\n        if (pathname === currentPathRef.current) {\n          return;\n        }\n        currentPathRef.current = pathname;\n\n        // Don't reload controller if URL was replaced\n        if (action === \"REPLACE\") {\n          return;\n        }\n\n        router\n          .resolve({ pathname })\n          .then(route => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({ ...route, key: generateRouteKey() });\n            }\n          })\n          .catch(error => {\n            if (!isAbandoned && currentPathRef.current === pathname) {\n              setCurrentRoute({\n                render: currentRoute => <ErrorMessage {...currentRoute.routeParams} />,\n                routeParams: { error },\n              });\n            }\n          });\n      }\n    }\n\n    resolve(\"PUSH\");\n\n    const unlisten = location.listen((unused, action) => resolve(action));\n\n    return () => {\n      isAbandoned = true;\n      currentPathRef.current = null;\n      unlisten();\n    };\n  }, [routes]);\n\n  useEffect(() => {\n    onRouteChange(currentRoute);\n  }, [currentRoute, onRouteChange]);\n\n  if (!currentRoute) {\n    return null;\n  }\n\n  return (\n    <CurrentRouteContext.Provider value={currentRoute}>\n      <ErrorBoundary ref={errorHandlerRef} renderError={error => <ErrorMessage error={error} />}>\n        {currentRoute.render(currentRoute)}\n      </ErrorBoundary>\n    </CurrentRouteContext.Provider>\n  );\n}\n\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      render: PropTypes.func, // (routeParams: PropTypes.object; currentRoute; location) => PropTypes.node\n      // Additional props to be injected into route component.\n      // Object keys are props names. Object values will become prop values:\n      // - if value is a function - it will be called without arguments, and result will be used; otherwise value will be used;\n      // - after previous step, if value is a promise - router will wait for it to resolve; resolved value then will be used;\n      //   otherwise value will be used directly.\n      resolve: PropTypes.objectOf(PropTypes.any),\n    })\n  ),\n  onRouteChange: PropTypes.func,\n};\n\nRouter.defaultProps = {\n  routes: [],\n  onRouteChange: () => {},\n};\n","import location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { stripBase } from \"./Router\";\n\n// When `replace` is set to `true` - it will just replace current URL\n// without reloading current page (router will skip this location change)\nexport default function navigateTo(href, replace = false) {\n  // Allow calling chain to roll up, and then navigate\n  setTimeout(() => {\n    const isExternal = stripBase(href) === false;\n    if (isExternal) {\n      window.location = href;\n      return;\n    }\n    href = url.parse(href);\n    location.update(\n      {\n        path: href.pathname,\n        search: href.search,\n        hash: href.hash,\n      },\n      replace\n    );\n  }, 10);\n}\n","import { axios } from \"@/services/axios\";\nimport { debounce, extend } from \"lodash\";\n\nlet events = [];\n\nconst post = debounce(() => {\n  const eventsToSend = events;\n  events = [];\n\n  axios.post(\"api/events\", eventsToSend);\n}, 1000);\n\nexport default function recordEvent(action, objectType, objectId, additionalProperties) {\n  const event = {\n    action,\n    object_type: objectType,\n    object_id: objectId,\n    timestamp: Date.now() / 1000.0,\n    screen_resolution: `${window.screen.width}x${window.screen.height}`,\n  };\n  extend(event, additionalProperties);\n  events.push(event);\n\n  post();\n}\n","export default {\n  columns: 6, // grid columns count\n  rowHeight: 50, // grid row height (incl. bottom padding)\n  margins: 15, // widget margins\n  mobileBreakPoint: 800,\n  // defaults for widgets\n  defaultSizeX: 3,\n  defaultSizeY: 3,\n  minSizeX: 1,\n  maxSizeX: 6,\n  minSizeY: 1,\n  maxSizeY: 1000,\n};\n","import { isNull, isObject, isFunction, isUndefined, isEqual, has, omit, isArray, each } from \"lodash\";\n\nclass Parameter {\n  constructor(parameter, parentQueryId) {\n    this.title = parameter.title;\n    this.name = parameter.name;\n    this.type = parameter.type;\n    this.global = parameter.global; // backward compatibility in Widget service\n    this.parentQueryId = parentQueryId;\n\n    // Used for meta-parameters (i.e. dashboard-level params)\n    this.locals = [];\n\n    // Used for URL serialization\n    this.urlPrefix = \"p_\";\n  }\n\n  static getExecutionValue(param, extra = {}) {\n    if (!isObject(param) || !isFunction(param.getExecutionValue)) {\n      return null;\n    }\n\n    return param.getExecutionValue(extra);\n  }\n\n  static setValue(param, value) {\n    if (!isObject(param) || !isFunction(param.setValue)) {\n      return null;\n    }\n\n    return param.setValue(value);\n  }\n\n  get isEmpty() {\n    return isNull(this.normalizedValue);\n  }\n\n  get hasPendingValue() {\n    return this.pendingValue !== undefined && !isEqual(this.pendingValue, this.normalizedValue);\n  }\n\n  /** Get normalized value to be used in inputs */\n  get normalizedValue() {\n    return this.$$value;\n  }\n\n  isEmptyValue(value) {\n    return isNull(this.normalizeValue(value));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isUndefined(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  updateLocals() {\n    if (isArray(this.locals)) {\n      each(this.locals, local => {\n        local.setValue(this.value);\n      });\n    }\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    this.value = normalizedValue;\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  /** Get execution value for a query */\n  getExecutionValue() {\n    return this.value;\n  }\n\n  setPendingValue(value) {\n    this.pendingValue = this.normalizeValue(value);\n  }\n\n  applyPendingValue() {\n    if (this.hasPendingValue) {\n      this.setValue(this.pendingValue);\n    }\n  }\n\n  clearPendingValue() {\n    this.pendingValue = undefined;\n  }\n\n  /** Update URL with Parameter value */\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    // `null` removes the parameter from the URL in case it exists\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? this.value : null,\n    };\n  }\n\n  /** Set parameter value from the URL */\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      this.setValue(query[key]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name} }}`;\n  }\n\n  /** Get a saveable version of the Parameter by omitting unnecessary props */\n  toSaveableObject() {\n    return omit(this, [\"$$value\", \"urlPrefix\", \"pendingValue\", \"parentQueryId\"]);\n  }\n}\n\nexport default Parameter;\n","import { toString, isEmpty } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass TextParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    const normalizedValue = toString(value);\n    if (isEmpty(normalizedValue)) {\n      return null;\n    }\n    return normalizedValue;\n  }\n}\n\nexport default TextParameter;\n","import { toNumber, isNull } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass NumberParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isNull(value)) {\n      return null;\n    }\n    const normalizedValue = toNumber(value);\n    return !isNaN(normalizedValue) ? normalizedValue : null;\n  }\n}\n\nexport default NumberParameter;\n","import { isArray, isEmpty, includes, intersection, get, map, join, has } from \"lodash\";\nimport Parameter from \"./Parameter\";\n\nclass EnumParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.enumOptions = parameter.enumOptions;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isEmpty(this.enumOptions)) {\n      return null;\n    }\n\n    const enumOptionsArray = this.enumOptions.split(\"\\n\") || [];\n    if (this.multiValuesOptions) {\n      if (!isArray(value)) {\n        value = [value];\n      }\n      value = intersection(value, enumOptionsArray);\n    } else if (!value || isArray(value) || !includes(enumOptionsArray, value)) {\n      value = enumOptionsArray[0];\n    }\n\n    if (isArray(value) && isEmpty(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n}\n\nexport default EnumParameter;\n","import debug from \"debug\";\nimport moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport { QueryResultError } from \"@/services/query\";\nimport { Auth } from \"@/services/auth\";\nimport { isString, uniqBy, each, isNumber, includes, extend, forOwn, get } from \"lodash\";\n\nconst logger = debug(\"redash:services:QueryResult\");\nconst filterTypes = [\"filter\", \"multi-filter\", \"multiFilter\"];\n\nfunction defer() {\n  const result = { onStatusChange: status => {} };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return result;\n}\n\nfunction getColumnNameWithoutType(column) {\n  let typeSplit;\n  if (column.indexOf(\"::\") !== -1) {\n    typeSplit = \"::\";\n  } else if (column.indexOf(\"__\") !== -1) {\n    typeSplit = \"__\";\n  } else {\n    return column;\n  }\n\n  const parts = column.split(typeSplit);\n  if (parts[0] === \"\" && parts.length === 2) {\n    return parts[1];\n  }\n\n  if (!includes(filterTypes, parts[1])) {\n    return column;\n  }\n\n  return parts[0];\n}\n\nfunction getColumnFriendlyName(column) {\n  return getColumnNameWithoutType(column).replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nconst createOrSaveUrl = data => (data.id ? `api/query_results/${data.id}` : \"api/query_results\");\nconst QueryResultResource = {\n  get: ({ id }) => axios.get(`api/query_results/${id}`),\n  post: data => axios.post(createOrSaveUrl(data), data),\n};\n\nexport const ExecutionStatus = {\n  WAITING: \"waiting\",\n  PROCESSING: \"processing\",\n  DONE: \"done\",\n  FAILED: \"failed\",\n  LOADING_RESULT: \"loading-result\",\n};\n\nconst statuses = {\n  1: ExecutionStatus.WAITING,\n  2: ExecutionStatus.PROCESSING,\n  3: ExecutionStatus.DONE,\n  4: ExecutionStatus.FAILED,\n};\n\nfunction handleErrorResponse(queryResult, error) {\n  const status = get(error, \"response.status\");\n  switch (status) {\n    case 403:\n      queryResult.update(error.response.data);\n      return;\n    case 400:\n      if (\"job\" in error.response.data) {\n        queryResult.update(error.response.data);\n        return;\n      }\n      break;\n    case 404:\n      queryResult.update({\n        job: {\n          error: \"cached query result unavailable, please execute again.\",\n          status: 4,\n        },\n      });\n      return;\n    // no default\n  }\n\n  logger(\"Unknown error\", error);\n  queryResult.update({\n    job: {\n      error: get(error, \"response.data.message\", \"Unknown error occurred. Please try again later.\"),\n      status: 4,\n    },\n  });\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function fetchDataFromJob(jobId, interval = 1000) {\n  return axios.get(`api/jobs/${jobId}`).then(data => {\n    const status = statuses[data.job.status];\n    if (status === ExecutionStatus.WAITING || status === ExecutionStatus.PROCESSING) {\n      return sleep(interval).then(() => fetchDataFromJob(data.job.id));\n    } else if (status === ExecutionStatus.DONE) {\n      return data.job.result;\n    } else if (status === ExecutionStatus.FAILED) {\n      return Promise.reject(data.job.error);\n    }\n  });\n}\n\nexport function isDateTime(v) {\n  return isString(v) && moment(v).isValid() && /^\\d{4}-\\d{2}-\\d{2}T/.test(v);\n}\n\nclass QueryResult {\n  constructor(props) {\n    this.deferred = defer();\n    this.job = {};\n    this.query_result = {};\n    this.status = \"waiting\";\n\n    this.updatedAt = moment();\n\n    // extended status flags\n    this.isLoadingResult = false;\n\n    if (props) {\n      this.update(props);\n    }\n  }\n\n  update(props) {\n    extend(this, props);\n\n    if (\"query_result\" in props) {\n      this.status = ExecutionStatus.DONE;\n      this.deferred.onStatusChange(ExecutionStatus.DONE);\n\n      const columnTypes = {};\n\n      // TODO: we should stop manipulating incoming data, and switch to relaying\n      // on the column type set by the backend. This logic is prone to errors,\n      // and better be removed. Kept for now, for backward compatability.\n      each(this.query_result.data.rows, row => {\n        forOwn(row, (v, k) => {\n          let newType = null;\n          if (isNumber(v)) {\n            newType = \"float\";\n          } else if (isDateTime(v)) {\n            row[k] = moment.utc(v);\n            newType = \"datetime\";\n          } else if (isString(v) && v.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            row[k] = moment.utc(v);\n            newType = \"date\";\n          } else if (typeof v === \"object\" && v !== null) {\n            row[k] = JSON.stringify(v);\n          } else {\n            newType = \"string\";\n          }\n\n          if (newType !== null) {\n            if (columnTypes[k] !== undefined && columnTypes[k] !== newType) {\n              columnTypes[k] = \"string\";\n            } else {\n              columnTypes[k] = newType;\n            }\n          }\n        });\n      });\n\n      each(this.query_result.data.columns, column => {\n        column.name = \"\" + column.name;\n        if (columnTypes[column.name]) {\n          if (column.type == null || column.type === \"string\") {\n            column.type = columnTypes[column.name];\n          }\n        }\n      });\n\n      this.deferred.resolve(this);\n    } else if (this.job.status === 3 || this.job.status === 2) {\n      this.deferred.onStatusChange(ExecutionStatus.PROCESSING);\n      this.status = \"processing\";\n    } else if (this.job.status === 4) {\n      this.status = statuses[this.job.status];\n      this.deferred.reject(new QueryResultError(this.job.error));\n    } else {\n      this.deferred.onStatusChange(undefined);\n      this.status = undefined;\n    }\n  }\n\n  getId() {\n    let id = null;\n    if (\"query_result\" in this) {\n      id = this.query_result.id;\n    }\n    return id;\n  }\n\n  cancelExecution() {\n    axios.delete(`api/jobs/${this.job.id}`);\n  }\n\n  getStatus() {\n    if (this.isLoadingResult) {\n      return ExecutionStatus.LOADING_RESULT;\n    }\n    return this.status || statuses[this.job.status];\n  }\n\n  getError() {\n    // TODO: move this logic to the server...\n    if (this.job.error === \"None\") {\n      return undefined;\n    }\n\n    return this.job.error;\n  }\n\n  getLog() {\n    if (!this.query_result.data || !this.query_result.data.log || this.query_result.data.log.length === 0) {\n      return null;\n    }\n\n    return this.query_result.data.log;\n  }\n\n  getUpdatedAt() {\n    return this.query_result.retrieved_at || this.job.updated_at * 1000.0 || this.updatedAt;\n  }\n\n  getRuntime() {\n    return this.query_result.runtime;\n  }\n\n  getRawData() {\n    if (!this.query_result.data) {\n      return null;\n    }\n\n    return this.query_result.data.rows;\n  }\n\n  getData() {\n    return this.query_result.data ? this.query_result.data.rows : null;\n  }\n\n  isEmpty() {\n    return this.getData() === null || this.getData().length === 0;\n  }\n\n  getColumns() {\n    if (this.columns === undefined && this.query_result.data) {\n      this.columns = this.query_result.data.columns;\n    }\n\n    return this.columns;\n  }\n\n  getColumnNames() {\n    if (this.columnNames === undefined && this.query_result.data) {\n      this.columnNames = this.query_result.data.columns.map(v => v.name);\n    }\n\n    return this.columnNames;\n  }\n\n  getColumnFriendlyNames() {\n    return this.getColumnNames().map(col => getColumnFriendlyName(col));\n  }\n\n  getTruncated() {\n    return this.query_result.data ? this.query_result.data.truncated : null;\n  }\n\n  getFilters() {\n    if (!this.getColumns()) {\n      return [];\n    }\n\n    const filters = [];\n\n    this.getColumns().forEach(col => {\n      const name = col.name;\n      const type = name.split(\"::\")[1] || name.split(\"__\")[1];\n      if (includes(filterTypes, type)) {\n        // filter found\n        const filter = {\n          name,\n          friendlyName: getColumnFriendlyName(name),\n          column: col,\n          values: [],\n          multiple: type === \"multiFilter\" || type === \"multi-filter\",\n        };\n        filters.push(filter);\n      }\n    }, this);\n\n    this.getRawData().forEach(row => {\n      filters.forEach(filter => {\n        filter.values.push(row[filter.name]);\n        if (filter.values.length === 1) {\n          if (filter.multiple) {\n            filter.current = [row[filter.name]];\n          } else {\n            filter.current = row[filter.name];\n          }\n        }\n      });\n    });\n\n    filters.forEach(filter => {\n      filter.values = uniqBy(filter.values, v => {\n        if (moment.isMoment(v)) {\n          return v.unix();\n        }\n        return v;\n      });\n      if (filter.values.length > 1 && filter.multiple) {\n        filter.current = filter.values.slice();\n      }\n    });\n\n    return filters;\n  }\n\n  toPromise(statusCallback) {\n    if (statusCallback) {\n      this.deferred.onStatusChange = statusCallback;\n    }\n    return this.deferred.promise;\n  }\n\n  static getById(queryId, id) {\n    const queryResult = new QueryResult();\n\n    queryResult.isLoadingResult = true;\n    queryResult.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    axios\n      .get(`api/queries/${queryId}/results/${id}.json`)\n      .then(response => {\n        // Success handler\n        queryResult.isLoadingResult = false;\n        queryResult.update(response);\n      })\n      .catch(error => {\n        // Error handler\n        queryResult.isLoadingResult = false;\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  loadLatestCachedResult(queryId, parameters) {\n    axios\n      .post(`api/queries/${queryId}/results`, { queryId, parameters })\n      .then(response => {\n        this.update(response);\n      })\n      .catch(error => {\n        handleErrorResponse(this, error);\n      });\n  }\n\n  loadResult(tryCount) {\n    this.isLoadingResult = true;\n    this.deferred.onStatusChange(ExecutionStatus.LOADING_RESULT);\n\n    QueryResultResource.get({ id: this.job.query_result_id })\n      .then(response => {\n        this.update(response);\n        this.isLoadingResult = false;\n      })\n      .catch(error => {\n        if (tryCount === undefined) {\n          tryCount = 0;\n        }\n\n        if (tryCount > 3) {\n          logger(\"Connection error while trying to load result\", error);\n          this.update({\n            job: {\n              error: \"failed communicating with server. Please check your Internet connection and try again.\",\n              status: 4,\n            },\n          });\n          this.isLoadingResult = false;\n        } else {\n          setTimeout(() => {\n            this.loadResult(tryCount + 1);\n          }, 1000 * Math.pow(2, tryCount));\n        }\n      });\n  }\n\n  refreshStatus(query, parameters, tryNumber = 1) {\n    const loadResult = () =>\n      Auth.isAuthenticated() ? this.loadResult() : this.loadLatestCachedResult(query, parameters);\n\n    const request = Auth.isAuthenticated()\n      ? axios.get(`api/jobs/${this.job.id}`)\n      : axios.get(`api/queries/${query}/jobs/${this.job.id}`);\n\n    request\n      .then(jobResponse => {\n        this.update(jobResponse);\n\n        if (this.getStatus() === \"processing\" && this.job.query_result_id && this.job.query_result_id !== \"None\") {\n          loadResult();\n        } else if (this.getStatus() !== \"failed\") {\n          const waitTime = tryNumber > 10 ? 3000 : 500;\n          setTimeout(() => {\n            this.refreshStatus(query, parameters, tryNumber + 1);\n          }, waitTime);\n        }\n      })\n      .catch(error => {\n        logger(\"Connection error\", error);\n        // TODO: use QueryResultError, or better yet: exception/reject of promise.\n        this.update({\n          job: {\n            error: \"failed communicating with server. Please check your Internet connection and try again.\",\n            status: 4,\n          },\n        });\n      });\n  }\n\n  getLink(queryId, fileType, apiKey) {\n    let link = `api/queries/${queryId}/results/${this.getId()}.${fileType}`;\n    if (apiKey) {\n      link = `${link}?api_key=${apiKey}`;\n    }\n    return link;\n  }\n\n  getName(queryName, fileType) {\n    return `${queryName.replace(/ /g, \"_\") + moment(this.getUpdatedAt()).format(\"_YYYY_MM_DD\")}.${fileType}`;\n  }\n\n  static getByQueryId(id, parameters, applyAutoLimit, maxAge) {\n    const queryResult = new QueryResult();\n\n    axios\n      .post(`api/queries/${id}/results`, { id, parameters, apply_auto_limit: applyAutoLimit, max_age: maxAge })\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(id, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n\n  static get(dataSourceId, query, parameters, applyAutoLimit, maxAge, queryId) {\n    const queryResult = new QueryResult();\n\n    const params = {\n      data_source_id: dataSourceId,\n      parameters,\n      query,\n      apply_auto_limit: applyAutoLimit,\n      max_age: maxAge,\n    };\n\n    if (queryId !== undefined) {\n      params.query_id = queryId;\n    }\n\n    QueryResultResource.post(params)\n      .then(response => {\n        queryResult.update(response);\n\n        if (\"job\" in response) {\n          queryResult.refreshStatus(query, parameters);\n        }\n      })\n      .catch(error => {\n        handleErrorResponse(queryResult, error);\n      });\n\n    return queryResult;\n  }\n}\n\nexport default QueryResult;\n","const PREFIX = \"localOptions:\";\n\nfunction get(key, defaultValue = undefined) {\n  const fullKey = PREFIX + key;\n  if (fullKey in window.localStorage) {\n    return JSON.parse(window.localStorage.getItem(fullKey));\n  }\n  return defaultValue;\n}\n\nfunction set(key, value) {\n  const fullKey = PREFIX + key;\n  window.localStorage.setItem(fullKey, JSON.stringify(value));\n}\n\nexport default {\n  get,\n  set,\n};\n","import moment from \"moment\";\nimport debug from \"debug\";\nimport Mustache from \"mustache\";\nimport { axios } from \"@/services/axios\";\nimport {\n  zipObject,\n  isEmpty,\n  isArray,\n  map,\n  filter,\n  includes,\n  union,\n  uniq,\n  has,\n  identity,\n  extend,\n  each,\n  some,\n  clone,\n  find,\n} from \"lodash\";\nimport location from \"@/services/location\";\n\nimport { Parameter, createParameter } from \"./parameters\";\nimport { currentUser } from \"./auth\";\nimport QueryResult from \"./query-result\";\nimport localOptions from \"@/lib/localOptions\";\n\nMustache.escape = identity; // do not html-escape values\n\nconst logger = debug(\"redash:services:query\");\n\nfunction collectParams(parts) {\n  let parameters = [];\n\n  parts.forEach(part => {\n    if (part[0] === \"name\" || part[0] === \"&\") {\n      parameters.push(part[1].split(\".\")[0]);\n    } else if (part[0] === \"#\") {\n      parameters = union(parameters, collectParams(part[4]));\n    }\n  });\n\n  return parameters;\n}\n\nexport class Query {\n  constructor(query) {\n    extend(this, query);\n\n    if (!has(this, \"options\")) {\n      this.options = {};\n    }\n    this.options.apply_auto_limit = !!this.options.apply_auto_limit;\n\n    if (!isArray(this.options.parameters)) {\n      this.options.parameters = [];\n    }\n  }\n\n  isNew() {\n    return this.id === undefined;\n  }\n\n  hasDailySchedule() {\n    return this.schedule && this.schedule.match(/\\d\\d:\\d\\d/) !== null;\n  }\n\n  scheduleInLocalTime() {\n    const parts = this.schedule.split(\":\");\n    return moment\n      .utc()\n      .hour(parts[0])\n      .minute(parts[1])\n      .local()\n      .format(\"HH:mm\");\n  }\n\n  hasResult() {\n    return !!(this.latest_query_data || this.latest_query_data_id);\n  }\n\n  paramsRequired() {\n    return this.getParameters().isRequired();\n  }\n\n  hasParameters() {\n    return this.getParametersDefs().length > 0;\n  }\n\n  prepareQueryResultExecution(execute, maxAge) {\n    const parameters = this.getParameters();\n    const missingParams = parameters.getMissing();\n\n    if (missingParams.length > 0) {\n      let paramsWord = \"parameter\";\n      let valuesWord = \"value\";\n      if (missingParams.length > 1) {\n        paramsWord = \"parameters\";\n        valuesWord = \"values\";\n      }\n\n      return new QueryResult({\n        job: {\n          error: `missing ${valuesWord} for ${missingParams.join(\", \")} ${paramsWord}.`,\n          status: 4,\n        },\n      });\n    }\n\n    if (parameters.isRequired()) {\n      // Need to clear latest results, to make sure we don't use results for different params.\n      this.latest_query_data = null;\n      this.latest_query_data_id = null;\n    }\n\n    if (this.latest_query_data && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = new QueryResult({\n          query_result: this.latest_query_data,\n        });\n      }\n    } else if (this.latest_query_data_id && maxAge !== 0) {\n      if (!this.queryResult) {\n        this.queryResult = QueryResult.getById(this.id, this.latest_query_data_id);\n      }\n    } else {\n      this.queryResult = execute();\n    }\n\n    return this.queryResult;\n  }\n\n  getQueryResult(maxAge) {\n    const execute = () =>\n      QueryResult.getByQueryId(this.id, this.getParameters().getExecutionValues(), this.getAutoLimit(), maxAge);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getQueryResultByText(maxAge, selectedQueryText) {\n    const queryText = selectedQueryText || this.query;\n    if (!queryText) {\n      return new QueryResultError(\"Can't execute empty query.\");\n    }\n\n    const parameters = this.getParameters().getExecutionValues({ joinListValues: true });\n    const execute = () =>\n      QueryResult.get(this.data_source_id, queryText, parameters, this.getAutoLimit(), maxAge, this.id);\n    return this.prepareQueryResultExecution(execute, maxAge);\n  }\n\n  getUrl(source, hash) {\n    let url = `queries/${this.id}`;\n\n    if (source) {\n      url += \"/source\";\n    }\n\n    let params = {};\n    if (this.getParameters().isRequired()) {\n      this.getParametersDefs().forEach(param => {\n        extend(params, param.toUrlParams());\n      });\n    }\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    params = map(params, (value, name) => `${encodeURIComponent(name)}=${encodeURIComponent(value)}`).join(\"&\");\n\n    if (params !== \"\") {\n      url += `?${params}`;\n    }\n\n    if (hash) {\n      url += `#${hash}`;\n    }\n\n    return url;\n  }\n\n  getQueryResultPromise() {\n    return this.getQueryResult().toPromise();\n  }\n\n  getParameters() {\n    if (!this.$parameters) {\n      this.$parameters = new Parameters(this, location.search);\n    }\n\n    return this.$parameters;\n  }\n\n  getAutoLimit() {\n    return this.options.apply_auto_limit;\n  }\n\n  getParametersDefs(update = true) {\n    return this.getParameters().get(update);\n  }\n\n  favorite() {\n    return Query.favorite(this);\n  }\n\n  unfavorite() {\n    return Query.unfavorite(this);\n  }\n\n  clone() {\n    const newQuery = clone(this);\n    newQuery.$parameters = null;\n    newQuery.getParameters();\n    return newQuery;\n  }\n}\n\nclass Parameters {\n  constructor(query, queryString) {\n    this.query = query;\n    this.updateParameters();\n    this.initFromQueryString(queryString);\n  }\n\n  parseQuery() {\n    const fallback = () => map(this.query.options.parameters, i => i.name);\n\n    let parameters = [];\n    if (this.query.query !== undefined) {\n      try {\n        const parts = Mustache.parse(this.query.query);\n        parameters = uniq(collectParams(parts));\n      } catch (e) {\n        logger(\"Failed parsing parameters: \", e);\n        // Return current parameters so we don't reset the list\n        parameters = fallback();\n      }\n    } else {\n      parameters = fallback();\n    }\n\n    return parameters;\n  }\n\n  updateParameters(update) {\n    if (this.query.query === this.cachedQueryText) {\n      const parameters = this.query.options.parameters;\n      const hasUnprocessedParameters = find(parameters, p => !(p instanceof Parameter));\n      if (hasUnprocessedParameters) {\n        this.query.options.parameters = map(parameters, p =>\n          p instanceof Parameter ? p : createParameter(p, this.query.id)\n        );\n      }\n      return;\n    }\n\n    this.cachedQueryText = this.query.query;\n    const parameterNames = update ? this.parseQuery() : map(this.query.options.parameters, p => p.name);\n\n    this.query.options.parameters = this.query.options.parameters || [];\n\n    const parametersMap = {};\n    this.query.options.parameters.forEach(param => {\n      parametersMap[param.name] = param;\n    });\n\n    parameterNames.forEach(param => {\n      if (!has(parametersMap, param)) {\n        this.query.options.parameters.push(\n          createParameter({\n            title: param,\n            name: param,\n            type: \"text\",\n            value: null,\n            global: false,\n          })\n        );\n      }\n    });\n\n    const parameterExists = p => includes(parameterNames, p.name);\n    const parameters = this.query.options.parameters;\n    this.query.options.parameters = parameters\n      .filter(parameterExists)\n      .map(p => (p instanceof Parameter ? p : createParameter(p, this.query.id)));\n  }\n\n  initFromQueryString(query) {\n    this.get().forEach(param => {\n      param.fromUrlParams(query);\n    });\n  }\n\n  get(update = true) {\n    this.updateParameters(update);\n    return this.query.options.parameters;\n  }\n\n  add(parameterDef) {\n    this.query.options.parameters = this.query.options.parameters.filter(p => p.name !== parameterDef.name);\n    const param = createParameter(parameterDef);\n    this.query.options.parameters.push(param);\n    return param;\n  }\n\n  getMissing() {\n    return map(\n      filter(this.get(), p => p.isEmpty),\n      i => i.title\n    );\n  }\n\n  isRequired() {\n    return !isEmpty(this.get());\n  }\n\n  getExecutionValues(extra = {}) {\n    const params = this.get();\n    return zipObject(\n      map(params, i => i.name),\n      map(params, i => i.getExecutionValue(extra))\n    );\n  }\n\n  hasPendingValues() {\n    return some(this.get(), p => p.hasPendingValue);\n  }\n\n  applyPendingValues() {\n    each(this.get(), p => p.applyPendingValue());\n  }\n\n  toUrlParams() {\n    if (this.get().length === 0) {\n      return \"\";\n    }\n\n    const params = Object.assign(...this.get().map(p => p.toUrlParams()));\n    Object.keys(params).forEach(key => params[key] == null && delete params[key]);\n    return Object.keys(params)\n      .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n      .join(\"&\");\n  }\n}\n\nexport class QueryResultError {\n  constructor(errorMessage) {\n    this.errorMessage = errorMessage;\n    this.updatedAt = moment.utc();\n  }\n\n  getUpdatedAt() {\n    return this.updatedAt;\n  }\n\n  getError() {\n    return this.errorMessage;\n  }\n\n  toPromise() {\n    return Promise.reject(this);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getStatus() {\n    return \"failed\";\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getData() {\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getLog() {\n    return null;\n  }\n}\n\nconst getQuery = query => new Query(query);\nconst saveOrCreateUrl = data => (data.id ? `api/queries/${data.id}` : \"api/queries\");\nconst mapResults = data => ({ ...data, results: map(data.results, getQuery) });\n\nconst QueryService = {\n  query: params => axios.get(\"api/queries\", { params }).then(mapResults),\n  get: data => axios.get(`api/queries/${data.id}`, data).then(getQuery),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(getQuery),\n  delete: data => axios.delete(`api/queries/${data.id}`),\n  recent: params => axios.get(`api/queries/recent`, { params }).then(data => map(data, getQuery)),\n  archive: params => axios.get(`api/queries/archive`, { params }).then(mapResults),\n  myQueries: params => axios.get(\"api/queries/my\", { params }).then(mapResults),\n  fork: ({ id }) => axios.post(`api/queries/${id}/fork`, { id }).then(getQuery),\n  resultById: data => axios.get(`api/queries/${data.id}/results.json`),\n  asDropdown: data => axios.get(`api/queries/${data.id}/dropdown`),\n  associatedDropdown: ({ queryId, dropdownQueryId }) =>\n    axios.get(`api/queries/${queryId}/dropdowns/${dropdownQueryId}`),\n  favorites: params => axios.get(\"api/queries/favorites\", { params }).then(mapResults),\n  favorite: data => axios.post(`api/queries/${data.id}/favorite`),\n  unfavorite: data => axios.delete(`api/queries/${data.id}/favorite`),\n};\n\nQueryService.newQuery = function newQuery() {\n  return new Query({\n    query: \"\",\n    name: \"New Query\",\n    schedule: null,\n    user: currentUser,\n    options: { apply_auto_limit: localOptions.get(\"applyAutoLimit\", true) },\n    tags: [],\n    can_edit: true,\n  });\n};\n\nextend(Query, QueryService);\n","import { isNull, isUndefined, isArray, isEmpty, get, map, join, has } from \"lodash\";\nimport { Query } from \"@/services/query\";\nimport Parameter from \"./Parameter\";\n\nclass QueryBasedDropdownParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.queryId = parameter.queryId;\n    this.multiValuesOptions = parameter.multiValuesOptions;\n    this.setValue(parameter.value);\n  }\n\n  normalizeValue(value) {\n    if (isUndefined(value) || isNull(value) || (isArray(value) && isEmpty(value))) {\n      return null;\n    }\n\n    if (this.multiValuesOptions) {\n      value = isArray(value) ? value : [value];\n    } else {\n      value = isArray(value) ? value[0] : value;\n    }\n    return value;\n  }\n\n  getExecutionValue(extra = {}) {\n    const { joinListValues } = extra;\n    if (joinListValues && isArray(this.value)) {\n      const separator = get(this.multiValuesOptions, \"separator\", \",\");\n      const prefix = get(this.multiValuesOptions, \"prefix\", \"\");\n      const suffix = get(this.multiValuesOptions, \"suffix\", \"\");\n      const parameterValues = map(this.value, v => `${prefix}${v}${suffix}`);\n      return join(parameterValues, separator);\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n\n    let urlParam = this.value;\n    if (this.multiValuesOptions && isArray(this.value)) {\n      urlParam = JSON.stringify(this.value);\n    }\n\n    return {\n      [`${prefix}${this.name}`]: !this.isEmpty ? urlParam : null,\n    };\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n    if (has(query, key)) {\n      if (this.multiValuesOptions) {\n        try {\n          const valueFromJson = JSON.parse(query[key]);\n          this.setValue(isArray(valueFromJson) ? valueFromJson : query[key]);\n        } catch (e) {\n          this.setValue(query[key]);\n        }\n      } else {\n        this.setValue(query[key]);\n      }\n    }\n  }\n\n  loadDropdownValues() {\n    if (this.parentQueryId) {\n      return Query.associatedDropdown({ queryId: this.parentQueryId, dropdownQueryId: this.queryId }).catch(() =>\n        Promise.resolve([])\n      );\n    }\n\n    return Query.asDropdown({ id: this.queryId }).catch(Promise.resolve([]));\n  }\n}\n\nexport default QueryBasedDropdownParameter;\n","import { findKey, startsWith, has, includes, isNull, values } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  // eslint-disable-next-line quote-props\n  date: \"YYYY-MM-DD\",\n  \"datetime-local\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\nconst DYNAMIC_DATES = {\n  now: {\n    name: \"Today/Now\",\n    value: () => moment(),\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => moment().subtract(1, \"day\"),\n  },\n};\n\nexport const DynamicDateType = PropTypes.oneOf(values(DYNAMIC_DATES));\n\nfunction isDynamicDateString(value) {\n  return startsWith(value, DYNAMIC_PREFIX) && has(DYNAMIC_DATES, value.substring(DYNAMIC_PREFIX.length));\n}\n\nexport function isDynamicDate(value) {\n  return includes(DYNAMIC_DATES, value);\n}\n\nexport function getDynamicDateFromString(value) {\n  if (!isDynamicDateString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.useCurrentDateTime = parameter.useCurrentDateTime;\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDate(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateString(value)) {\n      return getDynamicDateFromString(value);\n    }\n\n    if (isDynamicDate(value)) {\n      return value;\n    }\n\n    const normalizedValue = moment(value);\n    return normalizedValue.isValid() ? normalizedValue : null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDate(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATES, normalizedValue);\n    } else if (moment.isMoment(normalizedValue)) {\n      this.value = normalizedValue.format(DATETIME_FORMATS[this.type]);\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      return this.normalizedValue.value().format(DATETIME_FORMATS[this.type]);\n    }\n    if (isNull(this.value) && this.useCurrentDateTime) {\n      return moment().format(DATETIME_FORMATS[this.type]);\n    }\n    return this.value;\n  }\n}\n\nexport default DateParameter;\n","import { startsWith, has, includes, findKey, values, isObject, isArray } from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport Parameter from \"./Parameter\";\n\nconst DATETIME_FORMATS = {\n  \"date-range\": \"YYYY-MM-DD\",\n  \"datetime-range\": \"YYYY-MM-DD HH:mm\",\n  \"datetime-range-with-seconds\": \"YYYY-MM-DD HH:mm:ss\",\n};\n\nconst DYNAMIC_PREFIX = \"d_\";\n\n/**\n * Dynamic date range preset value with end set to current time\n * @param from {function(): moment.Moment}\n * @param now {function(): moment.Moment=} moment - defaults to now\n * @returns {function(withNow: boolean): [moment.Moment, moment.Moment|undefined]}\n */\nconst untilNow = (from, now = () => moment()) => (withNow = true) => [from(), withNow ? now() : undefined];\n\nconst DYNAMIC_DATE_RANGES = {\n  today: {\n    name: \"Today\",\n    value: () => [moment().startOf(\"day\"), moment().endOf(\"day\")],\n  },\n  yesterday: {\n    name: \"Yesterday\",\n    value: () => [\n      moment()\n        .subtract(1, \"day\")\n        .startOf(\"day\"),\n      moment()\n        .subtract(1, \"day\")\n        .endOf(\"day\"),\n    ],\n  },\n  this_week: {\n    name: \"This week\",\n    value: () => [moment().startOf(\"week\"), moment().endOf(\"week\")],\n  },\n  this_month: {\n    name: \"This month\",\n    value: () => [moment().startOf(\"month\"), moment().endOf(\"month\")],\n  },\n  this_year: {\n    name: \"This year\",\n    value: () => [moment().startOf(\"year\"), moment().endOf(\"year\")],\n  },\n  last_week: {\n    name: \"Last week\",\n    value: () => [\n      moment()\n        .subtract(1, \"week\")\n        .startOf(\"week\"),\n      moment()\n        .subtract(1, \"week\")\n        .endOf(\"week\"),\n    ],\n  },\n  last_month: {\n    name: \"Last month\",\n    value: () => [\n      moment()\n        .subtract(1, \"month\")\n        .startOf(\"month\"),\n      moment()\n        .subtract(1, \"month\")\n        .endOf(\"month\"),\n    ],\n  },\n  last_year: {\n    name: \"Last year\",\n    value: () => [\n      moment()\n        .subtract(1, \"year\")\n        .startOf(\"year\"),\n      moment()\n        .subtract(1, \"year\")\n        .endOf(\"year\"),\n    ],\n  },\n  last_hour: {\n    name: \"Last hour\",\n    value: untilNow(() => moment().subtract(1, \"hour\")),\n  },\n  last_8_hours: {\n    name: \"Last 8 hours\",\n    value: untilNow(() => moment().subtract(8, \"hour\")),\n  },\n  last_24_hours: {\n    name: \"Last 24 hours\",\n    value: untilNow(() => moment().subtract(24, \"hour\")),\n  },\n  last_7_days: {\n    name: \"Last 7 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(7, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_14_days: {\n    name: \"Last 14 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(14, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_30_days: {\n    name: \"Last 30 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(30, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_60_days: {\n    name: \"Last 60 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(60, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_90_days: {\n    name: \"Last 90 days\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(90, \"days\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n  last_12_months: {\n    name: \"Last 12 months\",\n    value: untilNow(\n      () =>\n        moment()\n          .subtract(12, \"months\")\n          .startOf(\"day\"),\n      () => moment().endOf(\"day\")\n    ),\n  },\n};\n\nexport const DynamicDateRangeType = PropTypes.oneOf(values(DYNAMIC_DATE_RANGES));\n\nexport function isDynamicDateRangeString(value) {\n  if (!startsWith(value, DYNAMIC_PREFIX)) {\n    return false;\n  }\n  return !!DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nexport function getDynamicDateRangeStringFromName(dynamicRangeName) {\n  const key = findKey(DYNAMIC_DATE_RANGES, range => range.name === dynamicRangeName);\n  return key ? DYNAMIC_PREFIX + key : undefined;\n}\n\nexport function isDynamicDateRange(value) {\n  return includes(DYNAMIC_DATE_RANGES, value);\n}\n\nexport function getDynamicDateRangeFromString(value) {\n  if (!isDynamicDateRangeString(value)) {\n    return null;\n  }\n  return DYNAMIC_DATE_RANGES[value.substring(DYNAMIC_PREFIX.length)];\n}\n\nclass DateRangeParameter extends Parameter {\n  constructor(parameter, parentQueryId) {\n    super(parameter, parentQueryId);\n    this.setValue(parameter.value);\n  }\n\n  get hasDynamicValue() {\n    return isDynamicDateRange(this.normalizedValue);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizeValue(value) {\n    if (isDynamicDateRangeString(value)) {\n      return getDynamicDateRangeFromString(value);\n    }\n\n    if (isDynamicDateRange(value)) {\n      return value;\n    }\n\n    if (isObject(value) && !isArray(value)) {\n      value = [value.start, value.end];\n    }\n\n    if (isArray(value) && value.length === 2) {\n      value = [moment(value[0]), moment(value[1])];\n      if (value[0].isValid() && value[1].isValid()) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  setValue(value) {\n    const normalizedValue = this.normalizeValue(value);\n    if (isDynamicDateRange(normalizedValue)) {\n      this.value = DYNAMIC_PREFIX + findKey(DYNAMIC_DATE_RANGES, normalizedValue);\n    } else if (isArray(normalizedValue)) {\n      this.value = {\n        start: normalizedValue[0].format(DATETIME_FORMATS[this.type]),\n        end: normalizedValue[1].format(DATETIME_FORMATS[this.type]),\n      };\n    } else {\n      this.value = normalizedValue;\n    }\n    this.$$value = normalizedValue;\n\n    this.updateLocals();\n    this.clearPendingValue();\n    return this;\n  }\n\n  getExecutionValue() {\n    if (this.hasDynamicValue) {\n      const format = date => date.format(DATETIME_FORMATS[this.type]);\n      const [start, end] = this.normalizedValue.value().map(format);\n      return { start, end };\n    }\n    return this.value;\n  }\n\n  toUrlParams() {\n    const prefix = this.urlPrefix;\n    if (isObject(this.value) && this.value.start && this.value.end) {\n      return {\n        [`${prefix}${this.name}`]: `${this.value.start}--${this.value.end}`,\n      };\n    }\n    return super.toUrlParams();\n  }\n\n  fromUrlParams(query) {\n    const prefix = this.urlPrefix;\n    const key = `${prefix}${this.name}`;\n\n    // backward compatibility\n    const keyStart = `${prefix}${this.name}.start`;\n    const keyEnd = `${prefix}${this.name}.end`;\n\n    if (has(query, key)) {\n      const dates = query[key].split(\"--\");\n      if (dates.length === 2) {\n        this.setValue(dates);\n      } else {\n        this.setValue(query[key]);\n      }\n    } else if (has(query, keyStart) && has(query, keyEnd)) {\n      this.setValue([query[keyStart], query[keyEnd]]);\n    }\n  }\n\n  toQueryTextFragment() {\n    return `{{ ${this.name}.start }} {{ ${this.name}.end }}`;\n  }\n}\n\nexport default DateRangeParameter;\n","import Parameter from \"./Parameter\";\nimport TextParameter from \"./TextParameter\";\nimport NumberParameter from \"./NumberParameter\";\nimport EnumParameter from \"./EnumParameter\";\nimport QueryBasedDropdownParameter from \"./QueryBasedDropdownParameter\";\nimport DateParameter from \"./DateParameter\";\nimport DateRangeParameter from \"./DateRangeParameter\";\n\nfunction createParameter(param, parentQueryId) {\n  switch (param.type) {\n    case \"number\":\n      return new NumberParameter(param, parentQueryId);\n    case \"enum\":\n      return new EnumParameter(param, parentQueryId);\n    case \"query\":\n      return new QueryBasedDropdownParameter(param, parentQueryId);\n    case \"date\":\n    case \"datetime-local\":\n    case \"datetime-with-seconds\":\n      return new DateParameter(param, parentQueryId);\n    case \"date-range\":\n    case \"datetime-range\":\n    case \"datetime-range-with-seconds\":\n      return new DateRangeParameter(param, parentQueryId);\n    default:\n      return new TextParameter({ ...param, type: \"text\" }, parentQueryId);\n  }\n}\n\nfunction cloneParameter(param) {\n  return createParameter(param, param.parentQueryId);\n}\n\nexport {\n  Parameter,\n  TextParameter,\n  NumberParameter,\n  EnumParameter,\n  QueryBasedDropdownParameter,\n  DateParameter,\n  DateRangeParameter,\n  createParameter,\n  cloneParameter,\n};\n","import moment from \"moment\";\nimport { axios } from \"@/services/axios\";\nimport {\n  each,\n  pick,\n  extend,\n  isObject,\n  truncate,\n  keys,\n  difference,\n  filter,\n  map,\n  merge,\n  sortBy,\n  indexOf,\n  size,\n  includes,\n} from \"lodash\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport { registeredVisualizations } from \"@redash/viz/lib\";\nimport { Query } from \"./query\";\n\nexport const WidgetTypeEnum = {\n  TEXTBOX: \"textbox\",\n  VISUALIZATION: \"visualization\",\n  RESTRICTED: \"restricted\",\n};\n\nfunction calculatePositionOptions(widget) {\n  widget.width = 1; // Backward compatibility, user on back-end\n\n  const visualizationOptions = {\n    autoHeight: false,\n    sizeX: Math.round(dashboardGridOptions.columns / 2),\n    sizeY: dashboardGridOptions.defaultSizeY,\n    minSizeX: dashboardGridOptions.minSizeX,\n    maxSizeX: dashboardGridOptions.maxSizeX,\n    minSizeY: dashboardGridOptions.minSizeY,\n    maxSizeY: dashboardGridOptions.maxSizeY,\n  };\n\n  const config = widget.visualization ? registeredVisualizations[widget.visualization.type] : null;\n  if (isObject(config)) {\n    if (Object.prototype.hasOwnProperty.call(config, \"autoHeight\")) {\n      visualizationOptions.autoHeight = config.autoHeight;\n    }\n\n    // Width constraints\n    const minColumns = parseInt(config.minColumns, 10);\n    if (isFinite(minColumns) && minColumns >= 0) {\n      visualizationOptions.minSizeX = minColumns;\n    }\n    const maxColumns = parseInt(config.maxColumns, 10);\n    if (isFinite(maxColumns) && maxColumns >= 0) {\n      visualizationOptions.maxSizeX = Math.min(maxColumns, dashboardGridOptions.columns);\n    }\n\n    // Height constraints\n    // `minRows` is preferred, but it should be kept for backward compatibility\n    const height = parseInt(config.height, 10);\n    if (isFinite(height)) {\n      visualizationOptions.minSizeY = Math.ceil(height / dashboardGridOptions.rowHeight);\n    }\n    const minRows = parseInt(config.minRows, 10);\n    if (isFinite(minRows)) {\n      visualizationOptions.minSizeY = minRows;\n    }\n    const maxRows = parseInt(config.maxRows, 10);\n    if (isFinite(maxRows) && maxRows >= 0) {\n      visualizationOptions.maxSizeY = maxRows;\n    }\n\n    // Default dimensions\n    const defaultWidth = parseInt(config.defaultColumns, 10);\n    if (isFinite(defaultWidth) && defaultWidth > 0) {\n      visualizationOptions.sizeX = defaultWidth;\n    }\n    const defaultHeight = parseInt(config.defaultRows, 10);\n    if (isFinite(defaultHeight) && defaultHeight > 0) {\n      visualizationOptions.sizeY = defaultHeight;\n    }\n  }\n\n  return visualizationOptions;\n}\n\nexport const ParameterMappingType = {\n  DashboardLevel: \"dashboard-level\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nclass Widget {\n  static MappingType = ParameterMappingType;\n\n  constructor(data) {\n    // Copy properties\n    extend(this, data);\n\n    const visualizationOptions = calculatePositionOptions(this);\n\n    this.options = this.options || {};\n    this.options.position = extend(\n      {},\n      visualizationOptions,\n      pick(this.options.position, [\"col\", \"row\", \"sizeX\", \"sizeY\", \"autoHeight\"])\n    );\n\n    if (this.options.position.sizeY < 0) {\n      this.options.position.autoHeight = true;\n    }\n  }\n\n  get type() {\n    if (this.visualization) {\n      return WidgetTypeEnum.VISUALIZATION;\n    } else if (this.restricted) {\n      return WidgetTypeEnum.RESTRICTED;\n    }\n    return WidgetTypeEnum.TEXTBOX;\n  }\n\n  getQuery() {\n    if (!this.query && this.visualization) {\n      this.query = new Query(this.visualization.query);\n    }\n\n    return this.query;\n  }\n\n  getQueryResult() {\n    return this.data;\n  }\n\n  getName() {\n    if (this.visualization) {\n      return `${this.visualization.query.name} (${this.visualization.name})`;\n    }\n    return truncate(this.text, 20);\n  }\n\n  load(force, maxAge) {\n    if (!this.visualization) {\n      return Promise.resolve();\n    }\n\n    // Both `this.data` and `this.queryResult` are query result objects;\n    // `this.data` is last loaded query result;\n    // `this.queryResult` is currently loading query result;\n    // while widget is refreshing, `this.data` !== `this.queryResult`\n\n    if (force || this.queryResult === undefined) {\n      this.loading = true;\n      this.refreshStartedAt = moment();\n\n      if (maxAge === undefined || force) {\n        maxAge = force ? 0 : undefined;\n      }\n\n      const queryResult = this.getQuery().getQueryResult(maxAge);\n      this.queryResult = queryResult;\n\n      queryResult\n        .toPromise()\n        .then(result => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = result;\n          }\n          return result;\n        })\n        .catch(error => {\n          if (this.queryResult === queryResult) {\n            this.loading = false;\n            this.data = error;\n          }\n          return error;\n        });\n    }\n\n    return this.queryResult.toPromise();\n  }\n\n  save(key, value) {\n    const data = pick(this, \"options\", \"text\", \"id\", \"width\", \"dashboard_id\", \"visualization_id\");\n    if (key && value) {\n      data[key] = merge({}, data[key], value); // done like this so `this.options` doesn't get updated by side-effect\n    }\n\n    let url = \"api/widgets\";\n    if (this.id) {\n      url = `${url}/${this.id}`;\n    }\n\n    return axios.post(url, data).then(data => {\n      each(data, (v, k) => {\n        this[k] = v;\n      });\n\n      return this;\n    });\n  }\n\n  delete() {\n    const url = `api/widgets/${this.id}`;\n    return axios.delete(url);\n  }\n\n  isStaticParam(param) {\n    const mappings = this.getParameterMappings();\n    const mappingType = mappings[param.name].type;\n    return mappingType === Widget.MappingType.StaticValue;\n  }\n\n  getParametersDefs() {\n    const mappings = this.getParameterMappings();\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs() : [];\n\n    const queryParams = location.search;\n\n    const localTypes = [Widget.MappingType.WidgetLevel, Widget.MappingType.StaticValue];\n    const localParameters = map(\n      filter(params, param => localTypes.indexOf(mappings[param.name].type) >= 0),\n      param => {\n        const mapping = mappings[param.name];\n        const result = cloneParameter(param);\n        result.title = mapping.title || param.title;\n        result.locals = [param];\n        result.urlPrefix = `p_w${this.id}_`;\n        if (mapping.type === Widget.MappingType.StaticValue) {\n          result.setValue(mapping.value);\n        } else {\n          result.fromUrlParams(queryParams);\n        }\n        return result;\n      }\n    );\n\n    // order widget params using paramOrder\n    return sortBy(localParameters, param =>\n      includes(this.options.paramOrder, param.name)\n        ? indexOf(this.options.paramOrder, param.name)\n        : size(this.options.paramOrder)\n    );\n  }\n\n  getParameterMappings() {\n    if (!isObject(this.options.parameterMappings)) {\n      this.options.parameterMappings = {};\n    }\n\n    const existingParams = {};\n    // textboxes does not have query\n    const params = this.getQuery() ? this.getQuery().getParametersDefs(false) : [];\n    each(params, param => {\n      existingParams[param.name] = true;\n      if (!isObject(this.options.parameterMappings[param.name])) {\n        // \"migration\" for old dashboards: parameters with `global` flag\n        // should be mapped to a dashboard-level parameter with the same name\n        this.options.parameterMappings[param.name] = {\n          name: param.name,\n          type: param.global ? Widget.MappingType.DashboardLevel : Widget.MappingType.WidgetLevel,\n          mapTo: param.name, // map to param with the same name\n          value: null, // for StaticValue\n          title: \"\", // Use parameter's title\n        };\n      }\n    });\n\n    // Remove mappings for parameters that do not exists anymore\n    const removedParams = difference(keys(this.options.parameterMappings), keys(existingParams));\n    each(removedParams, name => {\n      delete this.options.parameterMappings[name];\n    });\n\n    return this.options.parameterMappings;\n  }\n\n  getLocalParameters() {\n    return filter(this.getParametersDefs(), param => !this.isStaticParam(param));\n  }\n}\n\nexport default Widget;\n","import _ from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport dashboardGridOptions from \"@/config/dashboard-grid-options\";\nimport Widget from \"./widget\";\nimport location from \"@/services/location\";\nimport { cloneParameter } from \"@/services/parameters\";\nimport { policy } from \"@/services/policy\";\n\nexport const urlForDashboard = ({ id, slug }) => `dashboards/${id}-${slug}`;\n\nexport function collectDashboardFilters(dashboard, queryResults, urlParams) {\n  const filters = {};\n  _.each(queryResults, queryResult => {\n    const queryFilters = queryResult && queryResult.getFilters ? queryResult.getFilters() : [];\n    _.each(queryFilters, queryFilter => {\n      const hasQueryStringValue = _.has(urlParams, queryFilter.name);\n\n      if (!(hasQueryStringValue || dashboard.dashboard_filters_enabled)) {\n        // If dashboard filters not enabled, or no query string value given,\n        // skip filters linking.\n        return;\n      }\n\n      if (hasQueryStringValue) {\n        queryFilter.current = urlParams[queryFilter.name];\n      }\n\n      const filter = { ...queryFilter };\n      if (!_.has(filters, queryFilter.name)) {\n        filters[filter.name] = filter;\n      } else {\n        filters[filter.name].values = _.union(filters[filter.name].values, filter.values);\n      }\n    });\n  });\n\n  return _.values(filters);\n}\n\nfunction prepareWidgetsForDashboard(widgets) {\n  // Default height for auto-height widgets.\n  // Compute biggest widget size and choose between it and some magic number.\n  // This value should be big enough so auto-height widgets will not overlap other ones.\n  const defaultWidgetSizeY =\n    Math.max(\n      _.chain(widgets)\n        .map(w => w.options.position.sizeY)\n        .max()\n        .value(),\n      20\n    ) + 5;\n\n  // Fix layout:\n  // 1. sort and group widgets by row\n  // 2. update position of widgets in each row - place it right below\n  //    biggest widget from previous row\n  _.chain(widgets)\n    .sortBy(widget => widget.options.position.row)\n    .groupBy(widget => widget.options.position.row)\n    .reduce((row, widgetsAtRow) => {\n      let height = 1;\n      _.each(widgetsAtRow, widget => {\n        height = Math.max(\n          height,\n          widget.options.position.autoHeight ? defaultWidgetSizeY : widget.options.position.sizeY\n        );\n        widget.options.position.row = row;\n        if (widget.options.position.sizeY < 1) {\n          widget.options.position.sizeY = defaultWidgetSizeY;\n        }\n      });\n      return row + height;\n    }, 0)\n    .value();\n\n  // Sort widgets by updated column and row value\n  widgets = _.sortBy(widgets, widget => widget.options.position.col);\n  widgets = _.sortBy(widgets, widget => widget.options.position.row);\n\n  return widgets;\n}\n\nfunction calculateNewWidgetPosition(existingWidgets, newWidget) {\n  const width = _.extend({ sizeX: dashboardGridOptions.defaultSizeX }, _.extend({}, newWidget.options).position).sizeX;\n\n  // Find first free row for each column\n  const bottomLine = _.chain(existingWidgets)\n    .map(w => {\n      const options = _.extend({}, w.options);\n      const position = _.extend({ row: 0, sizeY: 0 }, options.position);\n      return {\n        left: position.col,\n        top: position.row,\n        right: position.col + position.sizeX,\n        bottom: position.row + position.sizeY,\n        width: position.sizeX,\n        height: position.sizeY,\n      };\n    })\n    .reduce((result, item) => {\n      const from = Math.max(item.left, 0);\n      const to = Math.min(item.right, result.length + 1);\n      for (let i = from; i < to; i += 1) {\n        result[i] = Math.max(result[i], item.bottom);\n      }\n      return result;\n    }, _.map(new Array(dashboardGridOptions.columns), _.constant(0)))\n    .value();\n\n  // Go through columns, pick them by count necessary to hold new block,\n  // and calculate bottom-most free row per group.\n  // Choose group with the top-most free row (comparing to other groups)\n  return _.chain(_.range(0, dashboardGridOptions.columns - width + 1))\n    .map(col => ({\n      col,\n      row: _.chain(bottomLine)\n        .slice(col, col + width)\n        .max()\n        .value(),\n    }))\n    .sortBy(\"row\")\n    .first()\n    .value();\n}\n\nexport function Dashboard(dashboard) {\n  _.extend(this, dashboard);\n  Object.defineProperty(this, \"url\", {\n    get: function() {\n      return urlForDashboard(this);\n    },\n  });\n}\n\nfunction prepareDashboardWidgets(widgets) {\n  return prepareWidgetsForDashboard(_.map(widgets, widget => new Widget(widget)));\n}\n\nfunction transformSingle(dashboard) {\n  dashboard = new Dashboard(dashboard);\n  if (dashboard.widgets) {\n    dashboard.widgets = prepareDashboardWidgets(dashboard.widgets);\n  }\n  dashboard.publicAccessEnabled = dashboard.public_url !== undefined;\n  return dashboard;\n}\n\nfunction transformResponse(data) {\n  if (data.results) {\n    data = { ...data, results: _.map(data.results, transformSingle) };\n  } else {\n    data = transformSingle(data);\n  }\n  return data;\n}\n\nconst saveOrCreateUrl = data => (data.id ? `api/dashboards/${data.id}` : \"api/dashboards\");\nconst DashboardService = {\n  get: ({ id, slug }) => {\n    const params = {};\n    if (!id) {\n      params.legacy = null;\n    }\n    return axios.get(`api/dashboards/${id || slug}`, { params }).then(transformResponse);\n  },\n  getByToken: ({ token }) => axios.get(`api/dashboards/public/${token}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), data).then(transformResponse),\n  delete: ({ id }) => axios.delete(`api/dashboards/${id}`).then(transformResponse),\n  query: params => axios.get(\"api/dashboards\", { params }).then(transformResponse),\n  recent: params => axios.get(\"api/dashboards/recent\", { params }).then(transformResponse),\n  myDashboards: params => axios.get(\"api/dashboards/my\", { params }).then(transformResponse),\n  favorites: params => axios.get(\"api/dashboards/favorites\", { params }).then(transformResponse),\n  favorite: ({ id }) => axios.post(`api/dashboards/${id}/favorite`),\n  unfavorite: ({ id }) => axios.delete(`api/dashboards/${id}/favorite`),\n  fork: ({ id }) => axios.post(`api/dashboards/${id}/fork`, { id }).then(transformResponse),\n};\n\n_.extend(Dashboard, DashboardService);\n\nDashboard.prepareDashboardWidgets = prepareDashboardWidgets;\nDashboard.prepareWidgetsForDashboard = prepareWidgetsForDashboard;\n\nDashboard.prototype.canEdit = function canEdit() {\n  return policy.canEdit(this);\n};\n\nDashboard.prototype.getParametersDefs = function getParametersDefs() {\n  const globalParams = {};\n  const queryParams = location.search;\n  _.each(this.widgets, widget => {\n    if (widget.getQuery()) {\n      const mappings = widget.getParameterMappings();\n      widget\n        .getQuery()\n        .getParametersDefs(false)\n        .forEach(param => {\n          const mapping = mappings[param.name];\n          if (mapping.type === Widget.MappingType.DashboardLevel) {\n            // create global param\n            if (!globalParams[mapping.mapTo]) {\n              globalParams[mapping.mapTo] = cloneParameter(param);\n              globalParams[mapping.mapTo].name = mapping.mapTo;\n              globalParams[mapping.mapTo].title = mapping.title || param.title;\n              globalParams[mapping.mapTo].locals = [];\n            }\n\n            // add to locals list\n            globalParams[mapping.mapTo].locals.push(param);\n          }\n        });\n    }\n  });\n  const resultingGlobalParams = _.values(\n    _.each(globalParams, param => {\n      param.setValue(param.value); // apply global param value to all locals\n      param.fromUrlParams(queryParams); // try to initialize from url (may do nothing)\n    })\n  );\n\n  // order dashboard params using paramOrder\n  return _.sortBy(resultingGlobalParams, param =>\n    _.includes(this.options.globalParamOrder, param.name)\n      ? _.indexOf(this.options.globalParamOrder, param.name)\n      : _.size(this.options.globalParamOrder)\n  );\n};\n\nDashboard.prototype.addWidget = function addWidget(textOrVisualization, options = {}) {\n  const props = {\n    dashboard_id: this.id,\n    options: {\n      ...options,\n      isHidden: false,\n      position: {},\n    },\n    text: \"\",\n    visualization_id: null,\n    visualization: null,\n  };\n\n  if (_.isString(textOrVisualization)) {\n    props.text = textOrVisualization;\n  } else if (_.isObject(textOrVisualization)) {\n    props.visualization_id = textOrVisualization.id;\n    props.visualization = textOrVisualization;\n  } else {\n    // TODO: Throw an error?\n  }\n\n  const widget = new Widget(props);\n\n  const position = calculateNewWidgetPosition(this.widgets, widget);\n  widget.options.position.col = position.col;\n  widget.options.position.row = position.row;\n\n  return widget.save().then(() => {\n    this.widgets = [...this.widgets, widget];\n    return widget;\n  });\n};\n\nDashboard.prototype.favorite = function favorite() {\n  return Dashboard.favorite(this);\n};\n\nDashboard.prototype.unfavorite = function unfavorite() {\n  return Dashboard.unfavorite(this);\n};\n\nDashboard.prototype.getUrl = function getUrl() {\n  return urlForDashboard(this);\n};\n","import { trim } from \"lodash\";\nimport React, { useState } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { policy } from \"@/services/policy\";\nimport { Dashboard } from \"@/services/dashboard\";\n\nfunction CreateDashboardDialog({ dialog }) {\n  const [name, setName] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [saveInProgress, setSaveInProgress] = useState(false);\n  const isCreateDashboardEnabled = policy.isCreateDashboardEnabled();\n\n  function handleNameChange(event) {\n    const value = trim(event.target.value);\n    setName(value);\n    setIsValid(value !== \"\");\n  }\n\n  function save() {\n    if (name !== \"\") {\n      setSaveInProgress(true);\n\n      Dashboard.save({ name }).then(data => {\n        dialog.close();\n        navigateTo(`${data.url}?edit`);\n      });\n      recordEvent(\"create\", \"dashboard\");\n    }\n  }\n\n  return (\n    <Modal\n      {...dialog.props}\n      {...(isCreateDashboardEnabled ? {} : { footer: null })}\n      title=\"New Dashboard\"\n      okText=\"Save\"\n      cancelText=\"Close\"\n      okButtonProps={{\n        disabled: !isValid || saveInProgress,\n        loading: saveInProgress,\n        \"data-test\": \"DashboardSaveButton\",\n      }}\n      cancelButtonProps={{\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      closable={!saveInProgress}\n      maskClosable={!saveInProgress}\n      wrapProps={{\n        \"data-test\": \"CreateDashboardDialog\",\n      }}>\n      <DynamicComponent name=\"CreateDashboardDialogExtra\" disabled={!isCreateDashboardEnabled}>\n        <Input\n          defaultValue={name}\n          onChange={handleNameChange}\n          onPressEnter={save}\n          placeholder=\"Dashboard Name\"\n          aria-label=\"Dashboard name\"\n          disabled={saveInProgress}\n          autoFocus\n        />\n      </DynamicComponent>\n    </Modal>\n  );\n}\n\nCreateDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateDashboardDialog);\n","import { isString, isObject, isFunction, extend, omit, sortBy, find, filter } from \"lodash\";\nimport { stripBase } from \"@/components/ApplicationArea/Router\";\nimport { currentUser } from \"@/services/auth\";\n\nclass SettingsMenuItem {\n  constructor(menuItem) {\n    extend(this, { pathPrefix: `/${menuItem.path}` }, omit(menuItem, [\"isActive\", \"isAvailable\"]));\n    if (isFunction(menuItem.isActive)) {\n      this.isActive = menuItem.isActive;\n    }\n    if (isFunction(menuItem.isAvailable)) {\n      this.isAvailable = menuItem.isAvailable;\n    }\n  }\n\n  isActive(path) {\n    return path.startsWith(this.pathPrefix);\n  }\n\n  isAvailable() {\n    return this.permission === undefined || currentUser.hasPermission(this.permission);\n  }\n}\n\nclass SettingsMenu {\n  items = [];\n\n  add(id, item) {\n    id = isString(id) ? id : null;\n    this.remove(id);\n    if (isObject(item)) {\n      this.items.push(new SettingsMenuItem({ ...item, id }));\n      this.items = sortBy(this.items, \"order\");\n    }\n  }\n\n  remove(id) {\n    if (isString(id)) {\n      this.items = filter(this.items, item => item.id !== id);\n      // removing item does not change order of other items, so no need to sort\n    }\n  }\n\n  getAvailableItems() {\n    return filter(this.items, item => item.isAvailable());\n  }\n\n  getActiveItem(path) {\n    const strippedPath = stripBase(path);\n    return find(this.items, item => item.isActive(strippedPath));\n  }\n}\n\nexport default new SettingsMenu();\n","import React from \"react\";\nimport Link from \"@/components/Link\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport frontendVersion from \"@/version.json\";\n\nexport default function VersionInfo() {\n  return (\n    <React.Fragment>\n      <div>\n        Version: {clientConfig.version}\n        {frontendVersion !== clientConfig.version && ` (${frontendVersion.substring(0, 8)})`}\n      </div>\n      {clientConfig.newVersionAvailable && currentUser.hasPermission(\"super_admin\") && (\n        <div className=\"m-t-10\">\n          {/* eslint-disable react/jsx-no-target-blank */}\n          <Link href=\"https://version.redash.io/\" className=\"update-available\" target=\"_blank\" rel=\"noopener\">\n            Update Available <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">(opens in a new tab)</span>\n          </Link>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { first, includes } from \"lodash\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { useCurrentRoute } from \"@/components/ApplicationArea/Router\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport DesktopOutlinedIcon from \"@ant-design/icons/DesktopOutlined\";\nimport CodeOutlinedIcon from \"@ant-design/icons/CodeOutlined\";\nimport AlertOutlinedIcon from \"@ant-design/icons/AlertOutlined\";\nimport PlusOutlinedIcon from \"@ant-design/icons/PlusOutlined\";\nimport QuestionCircleOutlinedIcon from \"@ant-design/icons/QuestionCircleOutlined\";\nimport SettingOutlinedIcon from \"@ant-design/icons/SettingOutlined\";\nimport VersionInfo from \"./VersionInfo\";\n\nimport \"./DesktopNavbar.less\";\n\nfunction NavbarSection({ children, ...props }) {\n  return (\n    <Menu selectable={false} mode=\"vertical\" theme=\"dark\" {...props}>\n      {children}\n    </Menu>\n  );\n}\n\nfunction useNavbarActiveState() {\n  const currentRoute = useCurrentRoute();\n\n  return useMemo(\n    () => ({\n      dashboards: includes(\n        [\n          \"Dashboards.List\",\n          \"Dashboards.Favorites\",\n          \"Dashboards.My\",\n          \"Dashboards.ViewOrEdit\",\n          \"Dashboards.LegacyViewOrEdit\",\n        ],\n        currentRoute.id\n      ),\n      queries: includes(\n        [\n          \"Queries.List\",\n          \"Queries.Favorites\",\n          \"Queries.Archived\",\n          \"Queries.My\",\n          \"Queries.View\",\n          \"Queries.New\",\n          \"Queries.Edit\",\n        ],\n        currentRoute.id\n      ),\n      dataSources: includes([\"DataSources.List\"], currentRoute.id),\n      alerts: includes([\"Alerts.List\", \"Alerts.New\", \"Alerts.View\", \"Alerts.Edit\"], currentRoute.id),\n    }),\n    [currentRoute.id]\n  );\n}\n\nexport default function DesktopNavbar() {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  const activeState = useNavbarActiveState();\n\n  const canCreateQuery = currentUser.hasPermission(\"create_query\");\n  const canCreateDashboard = currentUser.hasPermission(\"create_dashboard\");\n  const canCreateAlert = currentUser.hasPermission(\"list_alerts\");\n\n  return (\n    <nav className=\"desktop-navbar\">\n      <NavbarSection className=\"desktop-navbar-logo\">\n        <div role=\"menuitem\">\n          <Link href=\"./\">\n            <img src={logoUrl} alt=\"Redash\" />\n          </Link>\n        </div>\n      </NavbarSection>\n\n      <NavbarSection>\n        {currentUser.hasPermission(\"list_dashboards\") && (\n          <Menu.Item key=\"dashboards\" className={activeState.dashboards ? \"navbar-active-item\" : null}>\n            <Link href=\"dashboards\">\n              <DesktopOutlinedIcon aria-label=\"Dashboard navigation button\" />\n              <span className=\"desktop-navbar-label\">Dashboards</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"view_query\") && (\n          <Menu.Item key=\"queries\" className={activeState.queries ? \"navbar-active-item\" : null}>\n            <Link href=\"queries\">\n              <CodeOutlinedIcon aria-label=\"Queries navigation button\" />\n              <span className=\"desktop-navbar-label\">Queries</span>\n            </Link>\n          </Menu.Item>\n        )}\n        {currentUser.hasPermission(\"list_alerts\") && (\n          <Menu.Item key=\"alerts\" className={activeState.alerts ? \"navbar-active-item\" : null}>\n            <Link href=\"alerts\">\n              <AlertOutlinedIcon aria-label=\"Alerts navigation button\" />\n              <span className=\"desktop-navbar-label\">Alerts</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-spacer\">\n        {(canCreateQuery || canCreateDashboard || canCreateAlert) && (\n          <Menu.SubMenu\n            key=\"create\"\n            popupClassName=\"desktop-navbar-submenu\"\n            data-test=\"CreateButton\"\n            tabIndex={0}\n            title={\n              <React.Fragment>\n                <PlusOutlinedIcon />\n                <span className=\"desktop-navbar-label\">Create</span>\n              </React.Fragment>\n            }>\n            {canCreateQuery && (\n              <Menu.Item key=\"new-query\">\n                <Link href=\"queries/new\" data-test=\"CreateQueryMenuItem\">\n                  New Query\n                </Link>\n              </Menu.Item>\n            )}\n            {canCreateDashboard && (\n              <Menu.Item key=\"new-dashboard\">\n                <PlainButton data-test=\"CreateDashboardMenuItem\" onClick={() => CreateDashboardDialog.showModal()}>\n                  New Dashboard\n                </PlainButton>\n              </Menu.Item>\n            )}\n            {canCreateAlert && (\n              <Menu.Item key=\"new-alert\">\n                <Link data-test=\"CreateAlertMenuItem\" href=\"alerts/new\">\n                  New Alert\n                </Link>\n              </Menu.Item>\n            )}\n          </Menu.SubMenu>\n        )}\n      </NavbarSection>\n\n      <NavbarSection>\n        <Menu.Item key=\"help\">\n          <HelpTrigger showTooltip={false} type=\"HOME\" tabIndex={0}>\n            <QuestionCircleOutlinedIcon />\n            <span className=\"desktop-navbar-label\">Help</span>\n          </HelpTrigger>\n        </Menu.Item>\n        {firstSettingsTab && (\n          <Menu.Item key=\"settings\" className={activeState.dataSources ? \"navbar-active-item\" : null}>\n            <Link href={firstSettingsTab.path} data-test=\"SettingsLink\">\n              <SettingOutlinedIcon />\n              <span className=\"desktop-navbar-label\">Settings</span>\n            </Link>\n          </Menu.Item>\n        )}\n      </NavbarSection>\n\n      <NavbarSection className=\"desktop-navbar-profile-menu\">\n        <Menu.SubMenu\n          key=\"profile\"\n          popupClassName=\"desktop-navbar-submenu\"\n          tabIndex={0}\n          title={\n            <span data-test=\"ProfileDropdown\" className=\"desktop-navbar-profile-menu-title\">\n              <img className=\"profile__image_thumb\" src={currentUser.profile_image_url} alt={currentUser.name} />\n            </span>\n          }>\n          <Menu.Item key=\"profile\">\n            <Link href=\"users/me\">Profile</Link>\n          </Menu.Item>\n          {currentUser.hasPermission(\"super_admin\") && (\n            <Menu.Item key=\"status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n          )}\n          <Menu.Divider />\n          <Menu.Item key=\"logout\">\n            <PlainButton data-test=\"LogOutButton\" onClick={() => Auth.logout()}>\n              Log out\n            </PlainButton>\n          </Menu.Item>\n          <Menu.Divider />\n          <Menu.Item key=\"version\" role=\"presentation\" disabled className=\"version-info\">\n            <VersionInfo />\n          </Menu.Item>\n        </Menu.SubMenu>\n      </NavbarSection>\n    </nav>\n  );\n}\n","import { first } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport MenuOutlinedIcon from \"@ant-design/icons/MenuOutlined\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport { Auth, currentUser } from \"@/services/auth\";\nimport settingsMenu from \"@/services/settingsMenu\";\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport \"./MobileNavbar.less\";\n\nexport default function MobileNavbar({ getPopupContainer }) {\n  const firstSettingsTab = first(settingsMenu.getAvailableItems());\n\n  return (\n    <div className=\"mobile-navbar\">\n      <div className=\"mobile-navbar-logo\">\n        <Link href=\"./\">\n          <img src={logoUrl} alt=\"Redash\" />\n        </Link>\n      </div>\n      <div>\n        <Dropdown\n          overlayStyle={{ minWidth: 200 }}\n          trigger={[\"click\"]}\n          getPopupContainer={getPopupContainer} // so the overlay menu stays with the fixed header when page scrolls\n          overlay={\n            <Menu mode=\"vertical\" theme=\"dark\" selectable={false} className=\"mobile-navbar-menu\">\n              {currentUser.hasPermission(\"list_dashboards\") && (\n                <Menu.Item key=\"dashboards\">\n                  <Link href=\"dashboards\">Dashboards</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"view_query\") && (\n                <Menu.Item key=\"queries\">\n                  <Link href=\"queries\">Queries</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"list_alerts\") && (\n                <Menu.Item key=\"alerts\">\n                  <Link href=\"alerts\">Alerts</Link>\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"profile\">\n                <Link href=\"users/me\">Edit Profile</Link>\n              </Menu.Item>\n              <Menu.Divider />\n              {firstSettingsTab && (\n                <Menu.Item key=\"settings\">\n                  <Link href={firstSettingsTab.path}>Settings</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && (\n                <Menu.Item key=\"status\">\n                  <Link href=\"admin/status\">System Status</Link>\n                </Menu.Item>\n              )}\n              {currentUser.hasPermission(\"super_admin\") && <Menu.Divider />}\n              <Menu.Item key=\"help\">\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <Link href=\"https://redash.io/help\" target=\"_blank\" rel=\"noopener\">\n                  Help\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"logout\" onClick={() => Auth.logout()}>\n                Log out\n              </Menu.Item>\n            </Menu>\n          }>\n          <Button className=\"mobile-navbar-toggle-button\" ghost>\n            <MenuOutlinedIcon />\n          </Button>\n        </Dropdown>\n      </div>\n    </div>\n  );\n}\n\nMobileNavbar.propTypes = {\n  getPopupContainer: PropTypes.func,\n};\n\nMobileNavbar.defaultProps = {\n  getPopupContainer: null,\n};\n","import React, { useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DesktopNavbar from \"./DesktopNavbar\";\nimport MobileNavbar from \"./MobileNavbar\";\n\nimport \"./index.less\";\n\nexport default function ApplicationLayout({ children }) {\n  const mobileNavbarContainerRef = useRef();\n\n  const getMobileNavbarPopupContainer = useCallback(() => mobileNavbarContainerRef.current, []);\n\n  return (\n    <React.Fragment>\n      <DynamicComponent name=\"ApplicationWrapper\">\n        <div className=\"application-layout-side-menu\">\n          <DynamicComponent name=\"ApplicationDesktopNavbar\">\n            <DesktopNavbar />\n          </DynamicComponent>\n        </div>\n        <div className=\"application-layout-content\">\n          <nav className=\"application-layout-top-menu\" ref={mobileNavbarContainerRef}>\n            <DynamicComponent name=\"ApplicationMobileNavbar\" getPopupContainer={getMobileNavbarPopupContainer}>\n              <MobileNavbar getPopupContainer={getMobileNavbarPopupContainer} />\n            </DynamicComponent>\n          </nav>\n          {children}\n        </div>\n      </DynamicComponent>\n    </React.Fragment>\n  );\n}\n\nApplicationLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nApplicationLayout.defaultProps = {\n  children: null,\n};\n","import React, { useEffect, useState } from \"react\";\nimport ErrorBoundary, { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport { CurrentRoute } from \"@/services/routes\";\nimport organizationStatus from \"@/services/organizationStatus\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport ApplicationLayout from \"./ApplicationLayout\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport type UserSessionWrapperRenderChildrenProps<P> = {\n  pageTitle?: string;\n  onError: (error: Error) => void;\n} & P;\n\nexport interface UserSessionWrapperProps<P> {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  currentRoute: CurrentRoute<P>;\n  bodyClass?: string;\n}\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n\nexport function UserSessionWrapper<P>({ bodyClass, currentRoute, render }: UserSessionWrapperProps<P>) {\n  const [isAuthenticated, setIsAuthenticated] = useState(!!Auth.isAuthenticated());\n  useEffect(() => {\n    let isCancelled = false;\n    Promise.all([Auth.requireSession(), organizationStatus.refresh(), policy.refresh()])\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(!!Auth.isAuthenticated());\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (bodyClass) {\n      document.body.classList.toggle(bodyClass, true);\n      return () => {\n        document.body.classList.toggle(bodyClass, false);\n      };\n    }\n  }, [bodyClass]);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ApplicationLayout>\n      <React.Fragment key={currentRoute.key}>\n        {/* @ts-expect-error FIXME */}\n        <ErrorBoundary renderError={(error: Error) => <ErrorMessage error={error} />}>\n          <ErrorBoundaryContext.Consumer>\n            {(\n              {\n                handleError,\n              } /* : { handleError: UserSessionWrapperRenderChildrenProps<P>[\"onError\"] } FIXME bring back type */\n            ) => render({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError })}\n          </ErrorBoundaryContext.Consumer>\n        </ErrorBoundary>\n      </React.Fragment>\n    </ApplicationLayout>\n  );\n}\n\nexport type RouteWithUserSessionOptions<P> = {\n  render: (props: UserSessionWrapperRenderChildrenProps<P>) => React.ReactNode;\n  bodyClass?: string;\n  title: string;\n  path: string;\n};\n\nexport const UserSessionWrapperDynamicComponentName = \"UserSessionWrapper\";\n\nexport default function routeWithUserSession<P extends {} = {}>({\n  render: originalRender,\n  bodyClass,\n  ...rest\n}: RouteWithUserSessionOptions<P>) {\n  return {\n    ...rest,\n    render: (currentRoute: CurrentRoute<P>) => {\n      const props = {\n        render: originalRender,\n        bodyClass,\n        currentRoute,\n      };\n      return (\n        <DynamicComponent\n          {...props}\n          name={UserSessionWrapperDynamicComponentName}\n          fallback={<UserSessionWrapper {...props} />}\n        />\n      );\n    },\n  };\n}\n","import { keys, some } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { currentUser } from \"@/services/auth\";\nimport organizationStatus from \"@/services/organizationStatus\";\n\nimport \"./empty-state.less\";\n\nexport function Step({ show, completed, text, url, urlText, onClick }) {\n  if (!show) {\n    return null;\n  }\n\n  const commonProps = { children: urlText, onClick };\n\n  return (\n    <li className={classNames({ done: completed })}>\n      {url ? <Link href={url} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />} {text}\n    </li>\n  );\n}\n\nStep.propTypes = {\n  show: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.node,\n  url: PropTypes.string,\n  urlTarget: PropTypes.string,\n  urlText: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nStep.defaultProps = {\n  url: null,\n  urlTarget: null,\n  urlText: null,\n  text: null,\n  onClick: null,\n};\n\nexport function EmptyStateHelpMessage({ helpTriggerType }) {\n  return (\n    <p>\n      Need more support?{\" \"}\n      <HelpTrigger className=\"f-14\" type={helpTriggerType} showTooltip={false}>\n        See our Help\n      </HelpTrigger>\n    </p>\n  );\n}\n\nEmptyStateHelpMessage.propTypes = {\n  helpTriggerType: PropTypes.string.isRequired,\n};\n\nfunction EmptyState({\n  icon,\n  header,\n  description,\n  illustration,\n  helpMessage,\n  closable,\n  onClose,\n  onboardingMode,\n  showAlertStep,\n  showDashboardStep,\n  showDataSourceStep,\n  showInviteStep,\n  getStepsItems,\n  illustrationPath,\n}) {\n  const isAvailable = {\n    dataSource: showDataSourceStep,\n    query: true,\n    alert: showAlertStep,\n    dashboard: showDashboardStep,\n    inviteUsers: showInviteStep,\n  };\n\n  const isCompleted = {\n    dataSource: organizationStatus.objectCounters.data_sources > 0,\n    query: organizationStatus.objectCounters.queries > 0,\n    alert: organizationStatus.objectCounters.alerts > 0,\n    dashboard: organizationStatus.objectCounters.dashboards > 0,\n    inviteUsers: organizationStatus.objectCounters.users > 1,\n  };\n\n  const showCreateDashboardDialog = useCallback(() => {\n    CreateDashboardDialog.showModal();\n  }, []);\n\n  // Show if `onboardingMode=false` or any requested step not completed\n  const shouldShow = !onboardingMode || some(keys(isAvailable), step => isAvailable[step] && !isCompleted[step]);\n\n  if (!shouldShow) {\n    return null;\n  }\n\n  const renderDataSourcesStep = () => {\n    if (currentUser.isAdmin) {\n      return (\n        <Step\n          key=\"dataSources\"\n          show={isAvailable.dataSource}\n          completed={isCompleted.dataSource}\n          url=\"data_sources/new\"\n          urlText=\"Connect a Data Source\"\n        />\n      );\n    }\n\n    return (\n      <Step\n        key=\"dataSources\"\n        show={isAvailable.dataSource}\n        completed={isCompleted.dataSource}\n        text=\"Ask an account admin to connect a data source\"\n      />\n    );\n  };\n\n  const defaultStepsItems = [\n    {\n      key: \"dataSources\",\n      node: renderDataSourcesStep(),\n    },\n    {\n      key: \"queries\",\n      node: (\n        <Step\n          key=\"queries\"\n          show={isAvailable.query}\n          completed={isCompleted.query}\n          url=\"queries/new\"\n          urlText=\"Create your first Query\"\n        />\n      ),\n    },\n    {\n      key: \"alerts\",\n      node: (\n        <Step\n          key=\"alerts\"\n          show={isAvailable.alert}\n          completed={isCompleted.alert}\n          url=\"alerts/new\"\n          urlText=\"Create your first Alert\"\n        />\n      ),\n    },\n    {\n      key: \"dashboards\",\n      node: (\n        <Step\n          key=\"dashboards\"\n          show={isAvailable.dashboard}\n          completed={isCompleted.dashboard}\n          onClick={showCreateDashboardDialog}\n          urlText=\"Create your first Dashboard\"\n        />\n      ),\n    },\n    {\n      key: \"users\",\n      node: (\n        <Step\n          key=\"users\"\n          show={isAvailable.inviteUsers}\n          completed={isCompleted.inviteUsers}\n          url=\"users/new\"\n          urlText=\"Invite your team members\"\n        />\n      ),\n    },\n  ];\n\n  const stepsItems = getStepsItems ? getStepsItems(defaultStepsItems) : defaultStepsItems;\n  const imageSource = illustrationPath ? illustrationPath : \"static/images/illustrations/\" + illustration + \".svg\";\n\n  return (\n    <div className=\"empty-state-wrapper\">\n      <div className=\"empty-state bg-white tiled\">\n        <div className=\"empty-state__summary\">\n          {header && <h4>{header}</h4>}\n          <h2>\n            <i className={icon} aria-hidden=\"true\" />\n          </h2>\n          <p>{description}</p>\n          <img src={imageSource} alt={illustration + \" Illustration\"} width=\"75%\" />\n        </div>\n        <div className=\"empty-state__steps\">\n          <h4>Let&apos;s get started</h4>\n          <ol>{stepsItems.map(item => item.node)}</ol>\n          {helpMessage}\n        </div>\n      </div>\n      {closable && (\n        <PlainButton className=\"close-button\" aria-label=\"Close\" onClick={onClose}>\n          <CloseOutlinedIcon />\n        </PlainButton>\n      )}\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  icon: PropTypes.string,\n  header: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  illustration: PropTypes.string.isRequired,\n  illustrationPath: PropTypes.string,\n  helpMessage: PropTypes.node,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n\n  onboardingMode: PropTypes.bool,\n  showAlertStep: PropTypes.bool,\n  showDashboardStep: PropTypes.bool,\n  showDataSourceStep: PropTypes.bool,\n  showInviteStep: PropTypes.bool,\n\n  getStepItems: PropTypes.func,\n};\n\nEmptyState.defaultProps = {\n  icon: null,\n  header: null,\n  helpMessage: null,\n  closable: false,\n  onClose: () => {},\n\n  onboardingMode: false,\n  showAlertStep: false,\n  showDashboardStep: false,\n  showDataSourceStep: true,\n  showInviteStep: false,\n};\n\nexport default EmptyState;\n","import notification from \"antd/lib/notification\";\n\nnotification.config({\n  placement: \"bottomRight\",\n  duration: 3,\n});\n\nconst simpleNotification = {};\n\n[\"success\", \"error\", \"info\", \"warning\", \"warn\"].forEach(action => {\n  // eslint-disable-next-line arrow-body-style\n  simpleNotification[action] = (message, description = null, props = null) => {\n    return notification[action]({ ...props, message, description });\n  };\n});\n\nexport default {\n  // export Ant's notification and replace actions\n  ...notification,\n  ...simpleNotification,\n};\n","import { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\n\nexport default {\n  get: () => axios.get(\"api/settings/organization\"),\n  save: (data, message = \"Settings changes saved.\") =>\n    axios\n      .post(\"api/settings/organization\", data)\n      .then(data => {\n        notification.success(message);\n        return data;\n      })\n      .catch(() => {\n        notification.error(\"Failed saving changes.\");\n      }),\n};\n","import React, { useState } from \"react\";\nimport Card from \"antd/lib/card\";\nimport Button from \"antd/lib/button\";\nimport Typography from \"antd/lib/typography\";\nimport { clientConfig } from \"@/services/auth\";\nimport Link from \"@/components/Link\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport OrgSettings from \"@/services/organizationSettings\";\n\nconst Text = Typography.Text;\n\nfunction BeaconConsent() {\n  const [hide, setHide] = useState(false);\n\n  if (!clientConfig.showBeaconConsentMessage || hide) {\n    return null;\n  }\n\n  const hideConsentCard = () => {\n    clientConfig.showBeaconConsentMessage = false;\n    setHide(true);\n  };\n\n  const confirmConsent = confirm => {\n    let message = \"🙏 Thank you.\";\n\n    if (!confirm) {\n      message = \"Settings Saved.\";\n    }\n\n    OrgSettings.save({ beacon_consent: confirm }, message)\n      // .then(() => {\n      //   // const settings = get(response, 'settings');\n      //   // this.setState({ settings, formValues: { ...settings } });\n      // })\n      .finally(hideConsentCard);\n  };\n\n  return (\n    <DynamicComponent name=\"BeaconConsent\">\n      <div className=\"m-t-10 tiled\">\n        <Card\n          title={\n            <>\n              Would you be ok with sharing anonymous usage data with the Redash team?{\" \"}\n              <HelpTrigger type=\"USAGE_DATA_SHARING\" />\n            </>\n          }\n          bordered={false}>\n          <Text>Help Redash improve by automatically sending anonymous usage data:</Text>\n          <div className=\"m-t-5\">\n            <ul>\n              <li> Number of users, queries, dashboards, alerts, widgets and visualizations.</li>\n              <li> Types of data sources, alert destinations and visualizations.</li>\n            </ul>\n          </div>\n          <Text>All data is aggregated and will never include any sensitive or private data.</Text>\n          <div className=\"m-t-5\">\n            <Button type=\"primary\" className=\"m-r-5\" onClick={() => confirmConsent(true)}>\n              Yes\n            </Button>\n            <Button type=\"default\" onClick={() => confirmConsent(false)}>\n              No\n            </Button>\n          </div>\n          <div className=\"m-t-15\">\n            <Text type=\"secondary\">\n              You can change this setting anytime from the{\" \"}\n              <Link href=\"settings/organization\">Organization Settings</Link> page.\n            </Text>\n          </div>\n        </Card>\n      </div>\n    </DynamicComponent>\n  );\n}\n\nexport default BeaconConsent;\n","import { isString, isObject, filter, sortBy } from \"lodash\";\nimport React from \"react\";\nimport { Context, Route as UniversalRouterRoute } from \"universal-router\";\nimport pathToRegexp from \"path-to-regexp\";\n\nexport interface CurrentRoute<P> {\n  id: string | null;\n  key?: string;\n  title: string;\n  routeParams: P;\n}\n\nexport interface RedashRoute<P = {}, C extends Context = Context, R = any> extends UniversalRouterRoute<C, R> {\n  path: string; // we don't use other UniversalRouterRoute options, path should be available and should be a string\n  key?: string; // generated in Router.jsx\n  title: string;\n  render?: (currentRoute: CurrentRoute<P>) => React.ReactNode;\n  getApiKey?: () => string;\n}\n\ninterface RouteItem extends RedashRoute<any> {\n  id: string | null;\n}\n\nfunction getRouteParamsCount(path: string) {\n  const tokens = pathToRegexp.parse(path);\n  return filter(tokens, isObject).length;\n}\n\nclass Routes {\n  _items: RouteItem[] = [];\n  _sorted = false;\n\n  get items(): RouteItem[] {\n    if (!this._sorted) {\n      this._items = sortBy(this._items, [\n        item => getRouteParamsCount(item.path), // simple definitions first, with more params - last\n        item => -item.path.length, // longer first\n        item => item.path, // if same type and length - sort alphabetically\n      ]);\n      this._sorted = true;\n    }\n    return this._items;\n  }\n\n  public register<P>(id: string, route: RedashRoute<P>) {\n    const idOrNull = isString(id) ? id : null;\n    this.unregister(idOrNull);\n    if (isObject(route)) {\n      this._items = [...this.items, { ...route, id: idOrNull }];\n      this._sorted = false;\n    }\n  }\n\n  public unregister(id: string | null) {\n    if (isString(id)) {\n      // removing item does not break their order (if already sorted)\n      this._items = filter(this.items, item => item.id !== id);\n    }\n  }\n}\n\nexport default new Routes();\n","import { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { Query } from \"@/services/query\";\n\nexport function FavoriteList({ title, resource, itemUrl, emptyState }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    resource\n      .favorites()\n      .then(({ results }) => setItems(results))\n      .finally(() => setLoading(false));\n  }, [resource]);\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center m-b-20\">\n        <p className=\"flex-fill f-500 c-black m-0\">{title}</p>\n        {loading && <LoadingOutlinedIcon />}\n      </div>\n      {!isEmpty(items) && (\n        <div role=\"list\" className=\"list-group\">\n          {items.map(item => (\n            <Link key={itemUrl(item)} role=\"listitem\" className=\"list-group-item\" href={itemUrl(item)}>\n              <span className=\"btn-favorite m-r-5\">\n                <i className=\"fa fa-star\" aria-hidden=\"true\" />\n              </span>\n              {item.name}\n              {item.is_draft && <span className=\"label label-default m-l-5\">Unpublished</span>}\n            </Link>\n          ))}\n        </div>\n      )}\n      {isEmpty(items) && !loading && emptyState}\n    </>\n  );\n}\n\nFavoriteList.propTypes = {\n  title: PropTypes.string.isRequired,\n  resource: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  itemUrl: PropTypes.func.isRequired,\n  emptyState: PropTypes.node,\n};\nFavoriteList.defaultProps = { emptyState: null };\n\nexport function DashboardAndQueryFavoritesList() {\n  return (\n    <div className=\"tile\">\n      <div className=\"t-body tb-padding\">\n        <div className=\"row home-favorites-list\">\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Dashboards\"\n              resource={Dashboard}\n              itemUrl={dashboard => dashboard.url}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"dashboards\">Dashboards</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n          <div className=\"col-sm-6 m-t-20\">\n            <FavoriteList\n              title=\"Favorite Queries\"\n              resource={Query}\n              itemUrl={query => `queries/${query.id}`}\n              emptyState={\n                <p>\n                  <span className=\"btn-favorite m-r-5\">\n                    <i className=\"fa fa-star\" aria-hidden=\"true\" />\n                  </span>\n                  Favorite <Link href=\"queries\">Queries</Link> will appear here\n                </p>\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { includes } from \"lodash\";\nimport React, { useEffect } from \"react\";\n\nimport Alert from \"antd/lib/alert\";\nimport Link from \"@/components/Link\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport BeaconConsent from \"@/components/BeaconConsent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { messages } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport { DashboardAndQueryFavoritesList } from \"./components/FavoritesList\";\n\nimport \"./Home.less\";\n\nfunction DeprecatedEmbedFeatureAlert() {\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          You have enabled <code>ALLOW_PARAMETERS_IN_EMBEDS</code>. This setting is now deprecated and should be turned\n          off. Parameters in embeds are supported by default.{\" \"}\n          <Link\n            href=\"https://discuss.redash.io/t/support-for-parameters-in-embedded-visualizations/3337\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Read more\n          </Link>\n          .\n        </>\n      }\n    />\n  );\n}\n\nfunction EmailNotVerifiedAlert() {\n  const verifyEmail = () => {\n    axios.post(\"verification_email/\").then(data => {\n      notification.success(data.message);\n    });\n  };\n\n  return (\n    <Alert\n      className=\"m-b-15\"\n      type=\"warning\"\n      message={\n        <>\n          We have sent an email with a confirmation link to your email address. Please follow the link to verify your\n          email address.{\" \"}\n          <PlainButton type=\"link\" onClick={verifyEmail}>\n            Resend email\n          </PlainButton>\n          .\n        </>\n      }\n    />\n  );\n}\n\nexport default function Home() {\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"personal_homepage\");\n  }, []);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"container\">\n        {includes(messages, \"using-deprecated-embed-feature\") && <DeprecatedEmbedFeatureAlert />}\n        {includes(messages, \"email-not-verified\") && <EmailNotVerifiedAlert />}\n        <DynamicComponent name=\"Home.EmptyState\">\n          <EmptyState\n            header=\"Welcome to Redash 👋\"\n            description=\"Connect to any data source, easily visualize and share your data\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"GETTING_STARTED\" />}\n            showDashboardStep\n            showInviteStep\n            onboardingMode\n          />\n        </DynamicComponent>\n        <DynamicComponent name=\"HomeExtra\" />\n        <DashboardAndQueryFavoritesList />\n        <BeaconConsent />\n      </div>\n    </div>\n  );\n}\n\nroutes.register(\n  \"Home\",\n  routeWithUserSession({\n    path: \"/\",\n    title: \"Redash\",\n    render: pageProps => <Home {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.less\";\n\nexport default function PageHeader({ title, actions }) {\n  return (\n    <div className=\"page-header-wrapper\">\n      <h3>{title}</h3>\n      {actions && <div className=\"page-header-actions\">{actions}</div>}\n    </div>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n  actions: PropTypes.node,\n};\n\nPageHeader.defaultProps = {\n  title: \"\",\n  actions: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\n\nimport \"./layout.less\";\n\nexport default function Layout({ activeTab, children }) {\n  return (\n    <div className=\"admin-page-layout\">\n      <div className=\"container\">\n        <PageHeader title=\"Admin\" />\n        <div className=\"bg-white tiled\">\n          <Menu selectedKeys={[activeTab]} selectable={false} mode=\"horizontal\">\n            <Menu.Item key=\"system_status\">\n              <Link href=\"admin/status\">System Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"jobs\">\n              <Link href=\"admin/queries/jobs\">RQ Status</Link>\n            </Menu.Item>\n            <Menu.Item key=\"outdated_queries\">\n              <Link href=\"admin/queries/outdated\">Outdated Queries</Link>\n            </Menu.Item>\n          </Menu>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  activeTab: PropTypes.string,\n  children: PropTypes.node,\n};\n\nLayout.defaultProps = {\n  activeTab: \"system_status\",\n  children: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default class FavoritesControl extends React.Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      is_favorite: PropTypes.bool.isRequired,\n    }).isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  toggleItem(event, item, callback) {\n    const action = item.is_favorite ? item.unfavorite.bind(item) : item.favorite.bind(item);\n    const savedIsFavorite = item.is_favorite;\n\n    action().then(() => {\n      item.is_favorite = !savedIsFavorite;\n      this.forceUpdate();\n      callback();\n    });\n  }\n\n  render() {\n    const { item, onChange } = this.props;\n    const icon = item.is_favorite ? \"fa fa-star\" : \"fa fa-star-o\";\n    const title = item.is_favorite ? \"Remove from favorites\" : \"Add to favorites\";\n    return (\n      <PlainButton\n        title={title}\n        aria-label={title}\n        className=\"favorites-control btn-favorite\"\n        onClick={event => this.toggleItem(event, item, onChange)}>\n        <i className={icon} aria-hidden=\"true\" />\n      </PlainButton>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport { wrap } from \"lodash\";\nimport moment from \"moment\";\n\nexport const DataSource = PropTypes.shape({\n  syntax: PropTypes.string,\n  options: PropTypes.shape({\n    doc: PropTypes.string,\n    doc_url: PropTypes.string,\n  }),\n  type_name: PropTypes.string,\n});\n\nexport const Table = PropTypes.shape({\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const Schema = PropTypes.arrayOf(Table);\n\nexport const RefreshScheduleType = PropTypes.shape({\n  interval: PropTypes.number,\n  time: PropTypes.string,\n  day_of_week: PropTypes.string,\n  until: PropTypes.string,\n});\n\nexport const RefreshScheduleDefault = {\n  interval: null,\n  time: null,\n  day_of_week: null,\n  until: null,\n};\n\nexport const UserProfile = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  profileImageUrl: PropTypes.string,\n  apiKey: PropTypes.string,\n  isDisabled: PropTypes.bool,\n});\n\nexport const Destination = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n});\n\nexport const Query = PropTypes.shape({\n  id: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  data_source_id: PropTypes.any.isRequired,\n  created_at: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  user: UserProfile,\n  query: PropTypes.string,\n  queryHash: PropTypes.string,\n  is_safe: PropTypes.bool.isRequired,\n  is_draft: PropTypes.bool.isRequired,\n  is_archived: PropTypes.bool.isRequired,\n  api_key: PropTypes.string.isRequired,\n});\n\nexport const AlertOptions = PropTypes.shape({\n  column: PropTypes.string,\n  op: PropTypes.oneOf([\">\", \">=\", \"<\", \"<=\", \"==\", \"!=\"]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  custom_subject: PropTypes.string,\n  custom_body: PropTypes.string,\n});\n\nexport const Alert = PropTypes.shape({\n  id: PropTypes.any,\n  name: PropTypes.string,\n  created_at: PropTypes.string,\n  last_triggered_at: PropTypes.string,\n  updated_at: PropTypes.string,\n  rearm: PropTypes.number,\n  state: PropTypes.oneOf([\"ok\", \"triggered\", \"unknown\"]),\n  user: UserProfile,\n  query: Query,\n  options: PropTypes.shape({\n    column: PropTypes.string,\n    op: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }).isRequired,\n});\n\nfunction checkMoment(isRequired, props, propName, componentName) {\n  const value = props[propName];\n  const isRequiredValid = isRequired && value !== null && value !== undefined && moment.isMoment(value);\n  const isOptionalValid = !isRequired && (value === null || value === undefined || moment.isMoment(value));\n  if (!isRequiredValid && !isOptionalValid) {\n    return new Error(\"Prop `\" + propName + \"` supplied to `\" + componentName + \"` should be a Moment.js instance.\");\n  }\n}\n\nexport const Moment = wrap(false, checkMoment);\nMoment.isRequired = wrap(true, checkMoment);\n","import moment from \"moment\";\nimport { isNil } from \"lodash\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\nimport { clientConfig } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\n\nfunction toMoment(value) {\n  value = !isNil(value) ? moment(value) : null;\n  return value && value.isValid() ? value : null;\n}\n\nexport default function TimeAgo({ date, placeholder, autoUpdate, variation }) {\n  const startDate = toMoment(date);\n  const [value, setValue] = useState(null);\n  const title = useMemo(() => (startDate ? startDate.format(clientConfig.dateTimeFormat) : null), [startDate]);\n\n  useEffect(() => {\n    function update() {\n      setValue(startDate ? startDate.fromNow() : placeholder);\n    }\n    update();\n\n    if (autoUpdate) {\n      const timer = setInterval(update, 30 * 1000);\n      return () => clearInterval(timer);\n    }\n  }, [autoUpdate, startDate, placeholder]);\n\n  if (variation === \"timeAgoInTooltip\") {\n    return (\n      <Tooltip title={value}>\n        <span data-test=\"TimeAgo\">{title}</span>\n      </Tooltip>\n    );\n  }\n  return (\n    <Tooltip title={title}>\n      <span data-test=\"TimeAgo\">{value}</span>\n    </Tooltip>\n  );\n}\n\nTimeAgo.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n  placeholder: PropTypes.string,\n  autoUpdate: PropTypes.bool,\n  variation: PropTypes.oneOf([\"timeAgoInTooltip\"]),\n};\n\nTimeAgo.defaultProps = {\n  date: null,\n  placeholder: \"\",\n  autoUpdate: true,\n};\n","import moment from \"moment\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport const IntervalEnum = {\n  NEVER: \"Never\",\n  SECONDS: \"second\",\n  MINUTES: \"minute\",\n  HOURS: \"hour\",\n  DAYS: \"day\",\n  WEEKS: \"week\",\n  MILLISECONDS: \"millisecond\",\n};\n\nexport const AbbreviatedTimeUnits = {\n  SECONDS: \"s\",\n  MINUTES: \"m\",\n  HOURS: \"h\",\n  DAYS: \"d\",\n  WEEKS: \"w\",\n  MILLISECONDS: \"ms\",\n};\n\nfunction formatDateTimeValue(value, format) {\n  if (!value) {\n    return \"\";\n  }\n\n  const parsed = moment(value);\n  if (!parsed.isValid()) {\n    return \"-\";\n  }\n\n  return parsed.format(format);\n}\n\nexport function formatDateTime(value) {\n  return formatDateTimeValue(value, clientConfig.dateTimeFormat);\n}\n\nexport function formatDateTimePrecise(value, withMilliseconds = false) {\n  return formatDateTimeValue(value, clientConfig.dateFormat + (withMilliseconds ? \" HH:mm:ss.SSS\" : \" HH:mm:ss\"));\n}\n\nexport function formatDate(value) {\n  return formatDateTimeValue(value, clientConfig.dateFormat);\n}\n\nexport function localizeTime(time) {\n  const [hrs, mins] = time.split(\":\");\n  return moment\n    .utc()\n    .hour(hrs)\n    .minute(mins)\n    .local()\n    .format(\"HH:mm\");\n}\n\nexport function secondsToInterval(count) {\n  if (!count) {\n    return { interval: IntervalEnum.NEVER };\n  }\n\n  let interval = IntervalEnum.SECONDS;\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.MINUTES;\n  }\n  if (count >= 60) {\n    count /= 60;\n    interval = IntervalEnum.HOURS;\n  }\n  if (count >= 24 && interval === IntervalEnum.HOURS) {\n    count /= 24;\n    interval = IntervalEnum.DAYS;\n  }\n  if (count >= 7 && !(count % 7) && interval === IntervalEnum.DAYS) {\n    count /= 7;\n    interval = IntervalEnum.WEEKS;\n  }\n  return { count, interval };\n}\n\nexport function pluralize(text, count) {\n  const should = count !== 1;\n  return text + (should ? \"s\" : \"\");\n}\n\nexport function durationHumanize(durationInSeconds, options = {}) {\n  if (!durationInSeconds) {\n    return \"-\";\n  }\n  let ret = \"\";\n  const { interval, count } = secondsToInterval(durationInSeconds);\n  const rounded = Math.round(count);\n  if (rounded !== 1 || !options.omitSingleValueNumber) {\n    ret = `${rounded} `;\n  }\n  ret += pluralize(interval, rounded);\n  return ret;\n}\n\nexport function toHuman(text) {\n  return text.replace(/_/g, \" \").replace(/(?:^|\\s)\\S/g, a => a.toUpperCase());\n}\n\nexport function remove(items, item) {\n  if (items === undefined) {\n    return items;\n  }\n\n  let notEquals;\n\n  if (item instanceof Array) {\n    notEquals = other => item.indexOf(other) === -1;\n  } else {\n    notEquals = other => item !== other;\n  }\n\n  const filtered = [];\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (notEquals(items[i])) {\n      filtered.push(items[i]);\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Formats number to string\n * @param value {number}\n * @param [fractionDigits] {number}\n * @return {string}\n */\nexport function formatNumber(value, fractionDigits = 3) {\n  return Math.round(value) !== value ? value.toFixed(fractionDigits) : value.toString();\n}\n\n/**\n * Formats any number using predefined units\n * @param value {string|number}\n * @param divisor {number}\n * @param [units] {Array<string>}\n * @param [fractionDigits] {number}\n * @return {{unit: string, value: string, divisor: number}}\n */\nexport function prettyNumberWithUnit(value, divisor, units = [], fractionDigits) {\n  if (isNaN(parseFloat(value)) || !isFinite(value)) {\n    return {\n      value: \"\",\n      unit: \"\",\n      divisor: 1,\n    };\n  }\n\n  let unit = 0;\n  let greatestDivisor = 1;\n\n  while (value >= divisor && unit < units.length - 1) {\n    value /= divisor;\n    greatestDivisor *= divisor;\n    unit += 1;\n  }\n\n  return {\n    value: formatNumber(value, fractionDigits),\n    unit: units[unit],\n    divisor: greatestDivisor,\n  };\n}\n\nexport function prettySizeWithUnit(bytes, fractionDigits) {\n  return prettyNumberWithUnit(bytes, 1024, [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"], fractionDigits);\n}\n\nexport function prettySize(bytes) {\n  const { value, unit } = prettySizeWithUnit(bytes);\n  if (!value) {\n    return \"?\";\n  }\n  return value + \" \" + unit;\n}\n\nexport function join(arr) {\n  if (arr === undefined || arr === null) {\n    return \"\";\n  }\n\n  return arr.join(\" / \");\n}\n\nexport function formatColumnValue(value, columnType = null) {\n  if (moment.isMoment(value)) {\n    if (columnType === \"date\") {\n      return formatDate(value);\n    }\n    return formatDateTime(value);\n  }\n\n  if (typeof value === \"boolean\") {\n    return value.toString();\n  }\n\n  return value;\n}\n","import { isFunction, map, filter, extend, omit, identity, range, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Table from \"antd/lib/table\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { durationHumanize, formatDate, formatDateTime } from \"@/lib/utils\";\n\n// `this` refers to previous function in the chain (`Columns.***`).\n// Adds `sorter: true` field to column definition\nfunction sortable(...args) {\n  return extend(this(...args), { sorter: true });\n}\n\nexport const Columns = {\n  favorites(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        render: (text, item) => <FavoritesControl item={item} />,\n      },\n      overrides\n    );\n  },\n  avatar(overrides, formatTitle) {\n    formatTitle = isFunction(formatTitle) ? formatTitle : identity;\n    return extend(\n      {\n        width: \"1%\",\n        render: (user, item) => (\n          <img\n            src={item.user.profile_image_url}\n            className=\"profile__image_thumb\"\n            alt={formatTitle(user.name, item)}\n            title={formatTitle(user.name, item)}\n          />\n        ),\n      },\n      overrides\n    );\n  },\n  date(overrides) {\n    return extend(\n      {\n        render: text => formatDate(text),\n      },\n      overrides\n    );\n  },\n  dateTime(overrides) {\n    return extend(\n      {\n        render: text => formatDateTime(text),\n      },\n      overrides\n    );\n  },\n  duration(overrides) {\n    return extend(\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n        render: text => durationHumanize(text),\n      },\n      overrides\n    );\n  },\n  timeAgo(overrides, timeAgoCustomProps = undefined) {\n    return extend(\n      {\n        render: value => <TimeAgo date={value} {...timeAgoCustomProps} />,\n      },\n      overrides\n    );\n  },\n  custom(render, overrides) {\n    return extend(\n      {\n        render,\n      },\n      overrides\n    );\n  },\n};\n\nColumns.date.sortable = sortable;\nColumns.dateTime.sortable = sortable;\nColumns.duration.sortable = sortable;\nColumns.timeAgo.sortable = sortable;\nColumns.custom.sortable = sortable;\n\nexport default class ItemsTable extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    // eslint-disable-next-line react/forbid-prop-types\n    items: PropTypes.arrayOf(PropTypes.object),\n    columns: PropTypes.arrayOf(\n      PropTypes.shape({\n        field: PropTypes.string, // data field\n        orderByField: PropTypes.string, // field to order by (defaults to `field`)\n        render: PropTypes.func, // (prop, item) => text | node; `prop` is `item[field]`\n        isAvailable: PropTypes.func, // return `true` to show column and `false` to hide; if omitted: show column\n      })\n    ),\n    showHeader: PropTypes.bool,\n    onRowClick: PropTypes.func, // (event, item) => void\n\n    orderByField: PropTypes.string,\n    orderByReverse: PropTypes.bool,\n    toggleSorting: PropTypes.func,\n    \"data-test\": PropTypes.string,\n    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  };\n\n  static defaultProps = {\n    loading: false,\n    items: [],\n    columns: [],\n    showHeader: true,\n    onRowClick: null,\n\n    orderByField: null,\n    orderByReverse: false,\n    toggleSorting: () => {},\n  };\n\n  prepareColumns() {\n    const { orderByField, orderByReverse, toggleSorting } = this.props;\n    const orderByDirection = orderByReverse ? \"descend\" : \"ascend\";\n\n    return map(\n      map(\n        filter(this.props.columns, column => (isFunction(column.isAvailable) ? column.isAvailable() : true)),\n        column => extend(column, { orderByField: column.orderByField || column.field })\n      ),\n      (column, index) => {\n        // Bind click events only to sortable columns\n        const onHeaderCell = column.sorter ? () => ({ onClick: () => toggleSorting(column.orderByField) }) : null;\n\n        // Wrap render function to pass correct arguments\n        const render = isFunction(column.render) ? (text, row) => column.render(text, row.item) : identity;\n\n        return extend(omit(column, [\"field\", \"orderByField\", \"render\"]), {\n          key: \"column\" + index,\n          dataIndex: [\"item\", column.field],\n          defaultSortOrder: column.orderByField === orderByField ? orderByDirection : null,\n          onHeaderCell,\n          render,\n        });\n      }\n    );\n  }\n\n  getRowKey = record => {\n    const { rowKey } = this.props;\n    if (rowKey) {\n      if (isFunction(rowKey)) {\n        return rowKey(record.item);\n      }\n      return record.item[rowKey];\n    }\n    return record.key;\n  };\n\n  render() {\n    const tableDataProps = {\n      columns: this.prepareColumns(),\n      dataSource: map(this.props.items, (item, index) => ({ key: \"row\" + index, item })),\n    };\n\n    // Bind events only if `onRowClick` specified\n    const onTableRow = isFunction(this.props.onRowClick)\n      ? row => ({\n          onClick: event => {\n            this.props.onRowClick(event, row.item);\n          },\n        })\n      : null;\n\n    const { showHeader } = this.props;\n    if (this.props.loading) {\n      if (isEmpty(tableDataProps.dataSource)) {\n        tableDataProps.columns = tableDataProps.columns.map(column => ({\n          ...column,\n          sorter: false,\n          render: () => <Skeleton active paragraph={false} />,\n        }));\n        tableDataProps.dataSource = range(10).map(key => ({ key: `${key}` }));\n      } else {\n        tableDataProps.loading = { indicator: null };\n      }\n    }\n\n    return (\n      <Table\n        className={classNames(\"table-data\", { \"ant-table-headerless\": !showHeader })}\n        showHeader={showHeader}\n        rowKey={this.getRowKey}\n        pagination={false}\n        onRow={onTableRow}\n        data-test={this.props[\"data-test\"]}\n        {...tableDataProps}\n      />\n    );\n  }\n}\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Badge from \"antd/lib/badge\";\nimport Card from \"antd/lib/card\";\nimport Spin from \"antd/lib/spin\";\nimport Table from \"antd/lib/table\";\nimport { Columns } from \"@/components/items-list/components/ItemsTable\";\n\n// CounterCard\n\nexport function CounterCard({ title, value, loading }) {\n  return (\n    <Spin spinning={loading}>\n      <Card>\n        {title}\n        <div className=\"f-20\">{value}</div>\n      </Card>\n    </Spin>\n  );\n}\n\nCounterCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.bool.isRequired,\n};\n\nCounterCard.defaultProps = {\n  value: \"\",\n};\n\n// Tables\n\nconst queryJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Query ID\", dataIndex: [\"meta\", \"query_id\"] },\n  { title: \"Org ID\", dataIndex: [\"meta\", \"org_id\"] },\n  { title: \"Data Source ID\", dataIndex: [\"meta\", \"data_source_id\"] },\n  { title: \"User ID\", dataIndex: [\"meta\", \"user_id\"] },\n  Columns.custom(scheduled => scheduled.toString(), { title: \"Scheduled\", dataIndex: [\"meta\", \"scheduled\"] }),\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst otherJobsColumns = [\n  { title: \"Queue\", dataIndex: \"origin\" },\n  { title: \"Job Name\", dataIndex: \"name\" },\n  Columns.timeAgo({ title: \"Start Time\", dataIndex: \"started_at\" }),\n  Columns.timeAgo({ title: \"Enqueue Time\", dataIndex: \"enqueued_at\" }),\n];\n\nconst workersColumns = [\n  Columns.custom(\n    value => (\n      <span>\n        <Badge status={{ busy: \"processing\", idle: \"default\", started: \"success\", suspended: \"warning\" }[value]} />{\" \"}\n        {value}\n      </span>\n    ),\n    { title: \"State\", dataIndex: \"state\" }\n  ),\n]\n  .concat(\n    map([\"Hostname\", \"PID\", \"Name\", \"Queues\", \"Current Job\", \"Successful Jobs\", \"Failed Jobs\"], c => ({\n      title: c,\n      dataIndex: c.toLowerCase().replace(/\\s/g, \"_\"),\n    }))\n  )\n  .concat([\n    Columns.dateTime({ title: \"Birth Date\", dataIndex: \"birth_date\" }),\n    Columns.duration({ title: \"Total Working Time\", dataIndex: \"total_working_time\" }),\n  ]);\n\nconst queuesColumns = map([\"Name\", \"Started\", \"Queued\"], c => ({ title: c, dataIndex: c.toLowerCase() }));\n\nconst TablePropTypes = {\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport function WorkersTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={workersColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nWorkersTable.propTypes = TablePropTypes;\n\nexport function QueuesTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queuesColumns}\n      rowKey=\"name\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueuesTable.propTypes = TablePropTypes;\n\nexport function QueryJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={queryJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nQueryJobsTable.propTypes = TablePropTypes;\n\nexport function OtherJobsTable({ loading, items }) {\n  return (\n    <Table\n      loading={loading}\n      columns={otherJobsColumns}\n      rowKey=\"id\"\n      dataSource={items}\n      pagination={{\n        defaultPageSize: 25,\n        pageSizeOptions: [\"10\", \"25\", \"50\"],\n        showSizeChanger: true,\n      }}\n    />\n  );\n}\n\nOtherJobsTable.propTypes = TablePropTypes;\n","import { partition, flatMap, values } from \"lodash\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nimport Alert from \"antd/lib/alert\";\nimport Tabs from \"antd/lib/tabs\";\nimport * as Grid from \"antd/lib/grid\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport { CounterCard, WorkersTable, QueuesTable, QueryJobsTable, OtherJobsTable } from \"@/components/admin/RQStatus\";\n\nimport { axios } from \"@/services/axios\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass Jobs extends React.Component {\n  state = {\n    activeTab: location.hash,\n    isLoading: true,\n    error: null,\n\n    queueCounters: [],\n    overallCounters: { started: 0, queued: 0 },\n    startedJobs: [],\n    workers: [],\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/rq_status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    // Ignore data after component unmounted\n    clearTimeout(this._refreshTimer);\n    this.processQueues = () => {};\n    this.handleError = () => {};\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/api/admin/queries/rq_status\")\n      .then(data => this.processQueues(data))\n      .catch(error => this.handleError(error));\n\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  processQueues = ({ queues, workers }) => {\n    const queueCounters = values(queues).map(({ started, ...rest }) => ({\n      started: started.length,\n      ...rest,\n    }));\n\n    const overallCounters = queueCounters.reduce(\n      (c, q) => ({\n        started: c.started + q.started,\n        queued: c.queued + q.queued,\n      }),\n      { started: 0, queued: 0 }\n    );\n\n    const startedJobs = flatMap(values(queues), queue =>\n      queue.started.map(job => ({\n        ...job,\n        enqueued_at: moment.utc(job.enqueued_at),\n        started_at: moment.utc(job.started_at),\n      }))\n    );\n\n    this.setState({ isLoading: false, queueCounters, startedJobs, overallCounters, workers });\n  };\n\n  handleError = error => {\n    this.setState({ isLoading: false, error });\n  };\n\n  render() {\n    const { isLoading, error, queueCounters, startedJobs, overallCounters, workers, activeTab } = this.state;\n    const [startedQueryJobs, otherStartedJobs] = partition(startedJobs, [\n      \"name\",\n      \"redash.tasks.queries.execution.execute_query\",\n    ]);\n\n    const changeTab = newTab => {\n      location.setHash(newTab);\n      this.setState({ activeTab: newTab });\n    };\n\n    return (\n      <Layout activeTab=\"jobs\">\n        <div className=\"p-15\">\n          {error && <Alert type=\"error\" message=\"Failed loading status. Please refresh.\" />}\n\n          {!error && (\n            <React.Fragment>\n              <Grid.Row gutter={15} className=\"m-b-15\">\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Started Jobs\" value={overallCounters.started} loading={isLoading} />\n                </Grid.Col>\n                <Grid.Col span={8}>\n                  <CounterCard title=\"Queued Jobs\" value={overallCounters.queued} loading={isLoading} />\n                </Grid.Col>\n              </Grid.Row>\n\n              <Tabs activeKey={activeTab || \"queues\"} onTabClick={changeTab} animated={false}>\n                <Tabs.TabPane key=\"queues\" tab=\"Queues\">\n                  <QueuesTable loading={isLoading} items={queueCounters} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"workers\" tab=\"Workers\">\n                  <WorkersTable loading={isLoading} items={workers} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"queries\" tab=\"Queries\">\n                  <QueryJobsTable loading={isLoading} items={startedQueryJobs} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"other\" tab=\"Other Jobs\">\n                  <OtherJobsTable loading={isLoading} items={otherStartedJobs} />\n                </Tabs.TabPane>\n              </Tabs>\n            </React.Fragment>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.Jobs\",\n  routeWithUserSession({\n    path: \"/admin/queries/jobs\",\n    title: \"RQ Status\",\n    render: pageProps => <Jobs {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"antd/lib/pagination\";\n\nconst MIN_ITEMS_PER_PAGE = 5;\n\nexport default function Paginator({ page, showPageSizeSelect, pageSize, onPageSizeChange, totalCount, onChange }) {\n  if (totalCount <= (showPageSizeSelect ? MIN_ITEMS_PER_PAGE : pageSize)) {\n    return null;\n  }\n  return (\n    <div className=\"paginator-container\">\n      <Pagination\n        showSizeChanger={showPageSizeSelect}\n        pageSizeOptions={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n        onShowSizeChange={(_, size) => onPageSizeChange(size)}\n        defaultCurrent={page}\n        pageSize={pageSize}\n        total={totalCount}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nPaginator.propTypes = {\n  page: PropTypes.number.isRequired,\n  showPageSizeSelect: PropTypes.bool,\n  pageSize: PropTypes.number.isRequired,\n  totalCount: PropTypes.number.isRequired,\n  onPageSizeChange: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nPaginator.defaultProps = {\n  showPageSizeSelect: false,\n  onChange: () => {},\n  onPageSizeChange: () => {},\n};\n","import { map, trim, uniq, compact } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nfunction EditTagsDialog({ dialog, tags, getAvailableTags }) {\n  const [availableTags, setAvailableTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [values, setValues] = useState(() => uniq(map(tags, trim))); // lazy evaluate\n  const [selectRef, setSelectRef] = useState(null);\n\n  // Select is initially disabled, so autoFocus prop cannot make it focused.\n  // Solution is to pass focus to the select when available tags are loaded and\n  // select becomes enabled.\n  useEffect(() => {\n    if (selectRef && !isLoading) {\n      selectRef.focus();\n    }\n  }, [selectRef, isLoading]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    getAvailableTags().then(availableTags => {\n      if (!isCancelled) {\n        setAvailableTags(uniq(compact(map(availableTags, trim))));\n        setIsLoading(false);\n      }\n    });\n    return () => {\n      isCancelled = true;\n    };\n  }, [getAvailableTags]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      onOk={() => dialog.close(values)}\n      title=\"Add/Edit Tags\"\n      className=\"shortModal\"\n      wrapProps={{ \"data-test\": \"EditTagsDialog\" }}>\n      <Select\n        ref={setSelectRef}\n        mode=\"tags\"\n        className=\"w-100\"\n        placeholder=\"Add some tags...\"\n        defaultValue={values}\n        onChange={v => setValues(compact(map(v, trim)))}\n        disabled={isLoading}\n        loading={isLoading}>\n        {map(availableTags, tag => (\n          <Select.Option key={tag}>{tag}</Select.Option>\n        ))}\n      </Select>\n    </Modal>\n  );\n}\n\nEditTagsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  getAvailableTags: PropTypes.func.isRequired,\n};\n\nEditTagsDialog.defaultProps = {\n  tags: [],\n};\n\nexport default wrapDialog(EditTagsDialog);\n","import { map, trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport EditTagsDialog from \"./EditTagsDialog\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport class TagsControl extends React.Component {\n  static propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string),\n    canEdit: PropTypes.bool,\n    getAvailableTags: PropTypes.func,\n    onEdit: PropTypes.func,\n    className: PropTypes.string,\n    tagsExtra: PropTypes.node,\n    tagSeparator: PropTypes.node,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    tags: [],\n    canEdit: false,\n    getAvailableTags: () => Promise.resolve([]),\n    onEdit: () => {},\n    className: \"\",\n    tagsExtra: null,\n    tagSeparator: null,\n    children: null,\n  };\n\n  editTags = (tags, getAvailableTags) => {\n    EditTagsDialog.showModal({ tags, getAvailableTags }).onClose(this.props.onEdit);\n  };\n\n  renderEditButton() {\n    const tags = map(this.props.tags, trim);\n    return (\n      <PlainButton\n        className=\"label label-tag hidden-xs\"\n        onClick={() => this.editTags(tags, this.props.getAvailableTags)}\n        data-test=\"EditTagsButton\">\n        {tags.length === 0 && (\n          <React.Fragment>\n            <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n            Add tag\n          </React.Fragment>\n        )}\n        {tags.length > 0 && (\n          <>\n            <i className=\"zmdi zmdi-edit\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Edit</span>\n          </>\n        )}\n      </PlainButton>\n    );\n  }\n\n  render() {\n    const { tags, tagSeparator } = this.props;\n    return (\n      <div className={\"tags-control \" + this.props.className} data-test=\"TagsControl\">\n        {this.props.children}\n        {map(tags, (tag, i) => (\n          <React.Fragment key={tag}>\n            {tagSeparator && i > 0 && <span className=\"tag-separator\">{tagSeparator}</span>}\n            <span className=\"label label-tag\" key={tag} title={tag} data-test=\"TagLabel\">\n              {tag}\n            </span>\n          </React.Fragment>\n        ))}\n        {this.props.canEdit && this.renderEditButton()}\n        {this.props.tagsExtra}\n      </div>\n    );\n  }\n}\n\nfunction modelTagsControl({ archivedTooltip }) {\n  // See comment for `propTypes`/`defaultProps`\n  // eslint-disable-next-line react/prop-types\n  function ModelTagsControl({ isDraft, isArchived, ...props }) {\n    return (\n      <TagsControl {...props}>\n        {!isArchived && isDraft && <span className=\"label label-tag-unpublished\">Unpublished</span>}\n        {isArchived && (\n          <Tooltip placement=\"right\" title={archivedTooltip}>\n            <span className=\"label label-tag-archived\">Archived</span>\n          </Tooltip>\n        )}\n      </TagsControl>\n    );\n  }\n\n  ModelTagsControl.propTypes = {\n    isDraft: PropTypes.bool,\n    isArchived: PropTypes.bool,\n  };\n\n  ModelTagsControl.defaultProps = {\n    isDraft: false,\n    isArchived: false,\n  };\n\n  return ModelTagsControl;\n}\n\nexport const QueryTagsControl = modelTagsControl({\n  archivedTooltip: \"This query is archived and can't be used in dashboards, or appear in search results.\",\n});\n\nexport const DashboardTagsControl = modelTagsControl({\n  archivedTooltip: \"This dashboard is archived and won't be listed in dashboards nor search results.\",\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { localizeTime, durationHumanize } from \"@/lib/utils\";\nimport { RefreshScheduleType, RefreshScheduleDefault } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nexport default class SchedulePhrase extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    isNew: PropTypes.bool.isRequired,\n    isLink: PropTypes.bool,\n    onClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n    isLink: false,\n    onClick: () => {},\n  };\n\n  get content() {\n    const { interval: seconds } = this.props.schedule || SchedulePhrase.defaultProps.schedule;\n    if (!seconds) {\n      return [\"Never\"];\n    }\n    const humanized = durationHumanize(seconds, {\n      omitSingleValueNumber: true,\n    });\n    const short = `Every ${humanized}`;\n    let full = `Refreshes every ${humanized}`;\n\n    const { time, day_of_week: dayOfWeek } = this.props.schedule;\n    if (time) {\n      full += ` at ${localizeTime(time)}`;\n    }\n    if (dayOfWeek) {\n      full += ` on ${dayOfWeek}`;\n    }\n\n    return [short, full];\n  }\n\n  render() {\n    if (this.props.isNew) {\n      return \"Never\";\n    }\n\n    const [short, full] = this.content;\n    const content = full ? <Tooltip title={full}>{short}</Tooltip> : short;\n\n    return this.props.isLink ? (\n      <PlainButton type=\"link\" className=\"schedule-phrase\" onClick={this.props.onClick} data-test=\"EditSchedule\">\n        {content}\n      </PlainButton>\n    ) : (\n      content\n    );\n  }\n}\n","import { omit, debounce } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport { clientConfig } from \"@/services/auth\";\nimport { AxiosError } from \"axios\";\n\nexport interface PaginationOptions {\n  page?: number;\n  itemsPerPage?: number;\n}\n\nexport interface Controller<I, P = any> {\n  params: P; // TODO: Find out what params is (except merging with props)\n\n  isLoaded: boolean;\n  isEmpty: boolean;\n\n  // search\n  searchTerm?: string;\n  updateSearch: (searchTerm: string) => void;\n\n  // tags\n  selectedTags: string[];\n  updateSelectedTags: (selectedTags: string[]) => void;\n\n  // sorting\n  orderByField?: string;\n  orderByReverse: boolean;\n  toggleSorting: (orderByField: string) => void;\n\n  // pagination\n  page: number;\n  itemsPerPage: number;\n  totalItemsCount: number;\n  pageSizeOptions: number[];\n  pageItems: I[];\n  updatePagination: (options: PaginationOptions) => void; // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: (error: any) => void; // TODO: Find out if error is string or object or Exception.\n}\n\nexport const ControllerType = PropTypes.shape({\n  // values of props declared by wrapped component and some additional props from items list\n  params: PropTypes.object.isRequired,\n\n  isLoaded: PropTypes.bool.isRequired,\n  isEmpty: PropTypes.bool.isRequired,\n\n  // search\n  searchTerm: PropTypes.string,\n  updateSearch: PropTypes.func.isRequired, // (searchTerm: string) => void\n\n  // tags\n  selectedTags: PropTypes.array.isRequired,\n  updateSelectedTags: PropTypes.func.isRequired, // (selectedTags: array of tags) => void\n\n  // sorting\n  orderByField: PropTypes.string,\n  orderByReverse: PropTypes.bool.isRequired,\n  toggleSorting: PropTypes.func.isRequired, // (orderByField: string) => void\n\n  // pagination\n  page: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  totalItemsCount: PropTypes.number.isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  pageItems: PropTypes.array.isRequired,\n  updatePagination: PropTypes.func.isRequired, // ({ page: number, itemsPerPage: number }) => void\n\n  handleError: PropTypes.func.isRequired, // (error) => void\n});\n\nexport type GenericItemSourceError = AxiosError | Error;\n\nexport interface ItemsListWrapperProps {\n  onError?: (error: AxiosError | Error) => void;\n  children: React.ReactNode;\n}\n\ninterface ItemsListWrapperState<I, P = any> extends Controller<I, P> {\n  totalCount?: number;\n  update: () => void;\n}\n\ntype ItemsSource = any; // TODO: Type ItemsSource\ntype StateStorage = any; // TODO: Type StateStore\n\nexport interface ItemsListWrappedComponentProps<I, P = any> {\n  controller: Controller<I, P>;\n}\n\nexport function wrap<I, P = any>(\n  WrappedComponent: React.ComponentType<ItemsListWrappedComponentProps<I>>,\n  createItemsSource: () => ItemsSource,\n  createStateStorage: () => StateStorage\n) {\n  class ItemsListWrapper extends React.Component<ItemsListWrapperProps, ItemsListWrapperState<I, P>> {\n    private _itemsSource: ItemsSource;\n\n    static propTypes = {\n      onError: PropTypes.func,\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      onError: (error: GenericItemSourceError) => {\n        // Allow calling chain to roll up, and then throw the error in global context\n        setTimeout(() => {\n          throw error;\n        });\n      },\n      children: null,\n    };\n\n    constructor(props: ItemsListWrapperProps) {\n      super(props);\n\n      const stateStorage = createStateStorage();\n      const itemsSource = createItemsSource();\n      this._itemsSource = itemsSource;\n\n      itemsSource.setState({ ...stateStorage.getState(), validate: false });\n      itemsSource.getCallbackContext = () => this.state;\n\n      itemsSource.onBeforeUpdate = () => {\n        const state = itemsSource.getState();\n        stateStorage.setState(state);\n        this.setState(this.getState({ ...state, isLoaded: false }));\n      };\n\n      itemsSource.onAfterUpdate = () => {\n        const state = itemsSource.getState();\n        this.setState(this.getState({ ...state, isLoaded: true }));\n      };\n\n      itemsSource.onError = (error: GenericItemSourceError) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.props.onError!(error);\n\n      const initialState = this.getState({ ...itemsSource.getState(), isLoaded: false });\n      const { updatePagination, toggleSorting, updateSearch, updateSelectedTags, update, handleError } = itemsSource;\n      this.state = {\n        ...initialState,\n        toggleSorting, // eslint-disable-line react/no-unused-state\n        updateSearch: debounce(updateSearch, 200), // eslint-disable-line react/no-unused-state\n        updateSelectedTags, // eslint-disable-line react/no-unused-state\n        updatePagination, // eslint-disable-line react/no-unused-state\n        update, // eslint-disable-line react/no-unused-state\n        handleError, // eslint-disable-line react/no-unused-state\n      };\n    }\n\n    componentDidMount() {\n      this.state.update();\n    }\n\n    componentWillUnmount() {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onBeforeUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onAfterUpdate = () => {};\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      this._itemsSource.onError = () => {};\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getState({\n      isLoaded,\n      totalCount,\n      pageItems,\n      params,\n      ...rest\n    }: ItemsListWrapperState<I, P>): ItemsListWrapperState<I, P> {\n      return {\n        ...rest,\n\n        params: {\n          ...params, // custom params from items source\n          ...omit(this.props, [\"onError\", \"children\"]), // add all props except of own ones\n        },\n\n        isLoaded,\n        isEmpty: !isLoaded || totalCount === 0,\n        totalItemsCount: totalCount || 0,\n        pageSizeOptions: (clientConfig as any).pageSizeOptions, // TODO: Type auth.js\n        pageItems: pageItems || [],\n      };\n    }\n\n    render() {\n      // don't pass own props to wrapped component\n      const { children, onError, ...props } = this.props;\n      return (\n        <WrappedComponent {...props} controller={this.state}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n  }\n\n  // Copy static methods from `WrappedComponent`\n  hoistNonReactStatics(ItemsListWrapper, WrappedComponent);\n\n  return ItemsListWrapper;\n}\n","import { isUndefined } from \"lodash\";\n\nexport default class Paginator {\n  page = 1;\n\n  itemsPerPage = 20;\n\n  totalCount = 0;\n\n  get totalPages() {\n    return Math.ceil(this.totalCount / this.itemsPerPage);\n  }\n\n  setPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 1;\n    if (validate) {\n      this.page = value >= 1 && value <= this.totalPages ? value : 1;\n    } else {\n      this.page = value >= 1 ? value : 1;\n    }\n  }\n\n  setItemsPerPage(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 20;\n    this.itemsPerPage = value >= 1 ? value : 1;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  setTotalCount(value, validate = true) {\n    if (isUndefined(value)) {\n      return;\n    }\n    value = parseInt(value, 10) || 0;\n    this.totalCount = value;\n    if (validate) {\n      this.setPage(this.page, validate);\n    }\n  }\n\n  constructor({ page, itemsPerPage, totalCount, validate = true } = {}) {\n    this.setItemsPerPage(itemsPerPage, validate);\n    this.setTotalCount(totalCount, validate);\n    this.setPage(page, validate);\n  }\n\n  getItemsForPage(items) {\n    const first = this.itemsPerPage * (this.page - 1);\n    const last = first + this.itemsPerPage;\n\n    return items.slice(first, last);\n  }\n}\n","import { isString, sortBy } from \"lodash\";\n\nconst ORDER_BY_REVERSE = \"-\";\n\nexport function compile(field, reverse) {\n  if (!field) {\n    return null;\n  }\n  return reverse ? ORDER_BY_REVERSE + field : field;\n}\n\nexport function parse(compiled) {\n  compiled = isString(compiled) ? compiled : \"\";\n  const reverse = compiled.startsWith(ORDER_BY_REVERSE);\n  if (reverse) {\n    compiled = compiled.substring(1);\n  }\n  const field = compiled !== \"\" ? compiled : null;\n  return { field, reverse };\n}\n\nexport default class Sorter {\n  field = null;\n\n  reverse = false;\n\n  sortByIteratees = null;\n\n  get compiled() {\n    return compile(this.field, this.reverse);\n  }\n\n  set compiled(value) {\n    const { field, reverse } = parse(value);\n    this.field = field;\n    this.reverse = reverse;\n  }\n\n  setField(value) {\n    this.field = isString(value) && value !== \"\" ? value : null;\n  }\n\n  setReverse(value) {\n    this.reverse = !!value; // cast to boolean\n  }\n\n  constructor({ orderByField, orderByReverse } = {}, sortByIteratees = undefined) {\n    this.setField(orderByField);\n    this.setReverse(orderByReverse);\n    this.sortByIteratees = sortByIteratees;\n  }\n\n  toggleField(field) {\n    if (!isString(field) || field === \"\") {\n      return;\n    }\n    if (field === this.field) {\n      this.reverse = !this.reverse;\n    } else {\n      this.field = field;\n      this.reverse = false;\n    }\n  }\n\n  sort(items) {\n    if (this.field) {\n      const customIteratee = this.sortByIteratees && this.sortByIteratees[this.field];\n      items = sortBy(items, customIteratee ? [customIteratee] : this.field);\n      if (this.reverse) {\n        items.reverse();\n      }\n      return items;\n    }\n  }\n}\n","import { identity, isFunction, isNil, isString } from \"lodash\";\n\nclass ItemsFetcher {\n  _getRequest(state, context) {\n    return this._originalGetRequest({}, context);\n  }\n\n  _processResults({ results, count }, state, context) {\n    return {\n      results: this._originalProcessResults(results, context),\n      count,\n    };\n  }\n\n  constructor({ getRequest, doRequest, processResults }) {\n    this._originalGetRequest = isFunction(getRequest) ? getRequest : identity;\n    this._originalDoRequest = doRequest;\n    this._originalProcessResults = isFunction(processResults) ? processResults : identity;\n  }\n\n  fetch(changes, state, context) {\n    const request = this._getRequest(state, context);\n    return this._originalDoRequest(request, context).then(data => this._processResults(data, state, context));\n  }\n}\n\n// For endpoints that return just an array with items; sorting and pagination\n// is performed on client\nexport class PlainListFetcher extends ItemsFetcher {\n  _allItems = [];\n\n  _getRequest({ searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n\n  _processResults(data, { paginator, sorter }, context) {\n    this._allItems = this._originalProcessResults(data, context);\n    this._allItems = sorter.sort(this._allItems);\n    return {\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    };\n  }\n\n  fetch(changes, state, context) {\n    // For plain lists we need to reload items from server only if tags or search changes.\n    if (isNil(changes) || changes.tags || changes.sorting) {\n      return super.fetch(changes, state, context);\n    }\n    // Sorting and pagination could be updated using previously fetched items.\n    const { paginator, sorter } = state;\n    if (changes.sorting) {\n      this._allItems = sorter.sort(this._allItems);\n    }\n    return Promise.resolve({\n      results: paginator.getItemsForPage(this._allItems),\n      count: this._allItems.length,\n      allResults: this._allItems,\n    });\n  }\n}\n\n// For endpoints that support server-side pagination (return object with\n// items for current page and total items count)\nexport class PaginatedListFetcher extends ItemsFetcher {\n  _getRequest({ paginator, sorter, searchTerm, selectedTags }, context) {\n    return this._originalGetRequest(\n      {\n        page: paginator.page,\n        page_size: paginator.itemsPerPage,\n        order: sorter.compiled,\n        q: isString(searchTerm) && searchTerm !== \"\" ? searchTerm : undefined,\n        tags: selectedTags,\n      },\n      context\n    );\n  }\n}\n","import { isFunction, identity, map, extend } from \"lodash\";\nimport Paginator from \"./Paginator\";\nimport Sorter from \"./Sorter\";\nimport { PlainListFetcher, PaginatedListFetcher } from \"./ItemsFetcher\";\n\nexport class ItemsSource {\n  onBeforeUpdate = null;\n\n  onAfterUpdate = null;\n\n  onError = null;\n\n  sortByIteratees = undefined;\n\n  getCallbackContext = () => null;\n\n  _beforeUpdate() {\n    if (isFunction(this.onBeforeUpdate)) {\n      return Promise.resolve(this.onBeforeUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  _afterUpdate() {\n    if (isFunction(this.onAfterUpdate)) {\n      return Promise.resolve(this.onAfterUpdate(this.getState(), this.getCallbackContext()));\n    }\n    return Promise.resolve();\n  }\n\n  // changes: object with flags or null (full refresh requested)\n  _changed(changes) {\n    const state = {\n      paginator: this._paginator,\n      sorter: this._sorter,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n    };\n    const customParams = {};\n    const context = {\n      ...this.getCallbackContext(),\n      setCustomParams: params => {\n        extend(customParams, params);\n      },\n    };\n    return this._beforeUpdate().then(() => {\n      const fetchToken = Math.random()\n        .toString(36)\n        .substr(2);\n      this._currentFetchToken = fetchToken;\n      return this._fetcher\n        .fetch(changes, state, context)\n        .then(({ results, count, allResults }) => {\n          if (this._currentFetchToken === fetchToken) {\n            this._pageItems = results;\n            this._allItems = allResults || null;\n            this._paginator.setTotalCount(count);\n            this._params = { ...this._params, ...customParams };\n            return this._afterUpdate();\n          }\n        })\n        .catch(error => this.handleError(error));\n    });\n  }\n\n  constructor({\n    getRequest,\n    doRequest,\n    processResults,\n    isPlainList = false,\n    sortByIteratees = undefined,\n    ...defaultState\n  }) {\n    if (!isFunction(getRequest)) {\n      getRequest = identity;\n    }\n\n    this._fetcher = isPlainList\n      ? new PlainListFetcher({ getRequest, doRequest, processResults })\n      : new PaginatedListFetcher({ getRequest, doRequest, processResults });\n\n    this.sortByIteratees = sortByIteratees;\n\n    this.setState(defaultState);\n    this._pageItems = [];\n\n    this._params = {};\n  }\n\n  getState() {\n    return {\n      page: this._paginator.page,\n      itemsPerPage: this._paginator.itemsPerPage,\n      orderByField: this._sorter.field,\n      orderByReverse: this._sorter.reverse,\n      searchTerm: this._searchTerm,\n      selectedTags: this._selectedTags,\n      totalCount: this._paginator.totalCount,\n      pageItems: this._pageItems,\n      allItems: this._allItems,\n      params: this._params,\n    };\n  }\n\n  setState(state) {\n    this._paginator = new Paginator(state);\n    this._sorter = new Sorter(state, this.sortByIteratees);\n\n    this._searchTerm = state.searchTerm || \"\";\n    this._selectedTags = state.selectedTags || [];\n\n    this._savedOrderByField = this._sorter.field;\n  }\n\n  updatePagination = ({ page, itemsPerPage }) => {\n    const { page: prevPage, itemsPerPage: prevItemsPerPage } = this._paginator;\n    this._paginator.setItemsPerPage(itemsPerPage);\n    this._paginator.setPage(page);\n    this._changed({\n      pagination: {\n        page: prevPage !== this._paginator.page, // page changed flag\n        itemsPerPage: prevItemsPerPage !== this._paginator.itemsPerPage, // items per page changed flags\n      },\n    });\n  };\n\n  toggleSorting = orderByField => {\n    this._sorter.toggleField(orderByField);\n    this._savedOrderByField = this._sorter.field;\n    this._changed({ sorting: true });\n  };\n\n  updateSearch = searchTerm => {\n    // here we update state directly, but later `fetchData` will update it properly\n    this._searchTerm = searchTerm;\n    // in search mode ignore the ordering and use the ranking order\n    // provided by the server-side FTS backend instead, unless it was\n    // requested by the user by actively ordering in search mode\n    if (searchTerm === \"\") {\n      this._sorter.setField(this._savedOrderByField); // restore ordering\n    } else {\n      this._sorter.setField(null);\n    }\n    this._paginator.setPage(1);\n    this._changed({ search: true, pagination: { page: true } });\n  };\n\n  updateSelectedTags = selectedTags => {\n    this._selectedTags = selectedTags;\n    this._paginator.setPage(1);\n    this._changed({ tags: true, pagination: { page: true } });\n  };\n\n  update = () => this._changed();\n\n  handleError = error => {\n    if (isFunction(this.onError)) {\n      this.onError(error);\n    }\n  };\n}\n\nexport class ResourceItemsSource extends ItemsSource {\n  constructor({ getResource, getItemProcessor, ...rest }) {\n    getItemProcessor = isFunction(getItemProcessor) ? getItemProcessor : () => null;\n    super({\n      ...rest,\n      doRequest: (request, context) => {\n        const resource = getResource(context)(request);\n        return resource;\n      },\n      processResults: (results, context) => {\n        let processItem = getItemProcessor(context);\n        processItem = isFunction(processItem) ? processItem : identity;\n        return map(results, item => processItem(item, context));\n      },\n    });\n  }\n}\n","import { defaults } from \"lodash\";\nimport { clientConfig } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport { parse as parseOrderBy, compile as compileOrderBy } from \"./Sorter\";\n\nexport class StateStorage {\n  constructor(state = {}) {\n    this._state = { ...state };\n  }\n\n  getState() {\n    return defaults(this._state, {\n      page: 1,\n      itemsPerPage: clientConfig.pageSize,\n      orderByField: \"created_at\",\n      orderByReverse: false,\n      searchTerm: \"\",\n      tags: [],\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState() {}\n}\n\nexport class UrlStateStorage extends StateStorage {\n  getState() {\n    const defaultState = super.getState();\n    const params = location.search;\n\n    const searchTerm = params.q || \"\";\n\n    // in search mode order by should be explicitly specified in url, otherwise use default\n    const defaultOrderBy =\n      searchTerm !== \"\" ? \"\" : compileOrderBy(defaultState.orderByField, defaultState.orderByReverse);\n\n    const { field: orderByField, reverse: orderByReverse } = parseOrderBy(params.order || defaultOrderBy);\n\n    return {\n      page: parseInt(params.page, 10) || defaultState.page,\n      itemsPerPage: parseInt(params.page_size, 10) || defaultState.itemsPerPage,\n      orderByField,\n      orderByReverse,\n      searchTerm,\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setState({ page, itemsPerPage, orderByField, orderByReverse, searchTerm }) {\n    location.setSearch(\n      {\n        page,\n        page_size: itemsPerPage,\n        order: compileOrderBy(orderByField, orderByReverse),\n        q: searchTerm !== \"\" ? searchTerm : null,\n      },\n      true\n    );\n  }\n}\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"loading\" message for list pages\nexport default function LoadingState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" {...props} />\n    </div>\n  );\n}\n","import { map, uniqueId } from \"lodash\";\nimport React from \"react\";\n\nimport Switch from \"antd/lib/switch\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Layout from \"@/components/admin/Layout\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport { axios } from \"@/services/axios\";\nimport { Query } from \"@/services/query\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nclass OutdatedQueries extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    {\n      title: \"ID\",\n      field: \"id\",\n      width: \"1%\",\n      align: \"right\",\n      sorter: true,\n    },\n    Columns.custom.sortable(\n      (text, item) => (\n        <React.Fragment>\n          <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n            {item.name}\n          </Link>\n          <QueryTagsControl\n            className=\"d-block\"\n            tags={item.tags}\n            isDraft={item.is_draft}\n            isArchived={item.is_archived}\n          />\n        </React.Fragment>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\" }),\n    Columns.duration.sortable({ title: \"Runtime\", field: \"runtime\" }),\n    Columns.dateTime.sortable({ title: \"Last Executed At\", field: \"retrieved_at\", orderByField: \"executed_at\" }),\n    Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n      title: \"Update Schedule\",\n      field: \"schedule\",\n    }),\n  ];\n\n  state = {\n    autoUpdate: true,\n  };\n\n  _updateTimer = null;\n  autoUpdateSwitchId = uniqueId(\"auto-update-switch\");\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/queries/outdated\");\n    this.update(true);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._updateTimer);\n  }\n\n  update = (isInitialCall = false) => {\n    if (!isInitialCall && this.state.autoUpdate) {\n      this.props.controller.update();\n    }\n    this._updateTimer = setTimeout(this.update, 60 * 1000);\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <Layout activeTab={controller.params.currentPage}>\n        <div className=\"m-15\">\n          <div>\n            <label htmlFor={this.autoUpdateSwitchId} className=\"m-0\">\n              Auto update\n            </label>\n            <Switch\n              id={this.autoUpdateSwitchId}\n              className=\"m-l-10\"\n              checked={this.state.autoUpdate}\n              onChange={autoUpdate => this.setState({ autoUpdate })}\n            />\n          </div>\n          {controller.params.lastUpdatedAt && (\n            <div className=\"m-t-5\">\n              Last updated: <TimeAgo date={controller.params.lastUpdatedAt * 1000} />\n            </div>\n          )}\n        </div>\n        {!controller.isLoaded && <LoadingState />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center p-15\">There are no outdated queries.</div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"bg-white tiled table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </Layout>\n    );\n  }\n}\n\nconst OutdatedQueriesPage = itemsList(\n  OutdatedQueries,\n  () =>\n    new ItemsSource({\n      doRequest(request, context) {\n        return (\n          axios\n            .get(\"/api/admin/queries/outdated\")\n            // eslint-disable-next-line camelcase\n            .then(({ queries, updated_at }) => {\n              context.setCustomParams({ lastUpdatedAt: parseFloat(updated_at) });\n              return queries;\n            })\n        );\n      },\n      processResults(items) {\n        return map(items, item => new Query(item));\n      },\n      isPlainList: true,\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Admin.OutdatedQueries\",\n  routeWithUserSession({\n    path: \"/admin/queries/outdated\",\n    title: \"Outdated Queries\",\n    render: pageProps => <OutdatedQueriesPage {...pageProps} currentPage=\"outdated_queries\" />,\n  })\n);\n","/* eslint-disable react/prop-types */\n\nimport { toPairs } from \"lodash\";\nimport React from \"react\";\n\nimport List from \"antd/lib/list\";\nimport Card from \"antd/lib/card\";\nimport TimeAgo from \"@/components/TimeAgo\";\n\nimport { toHuman, prettySize } from \"@/lib/utils\";\n\nexport function General({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"General\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, value]) => (\n            <List.Item extra={<span className=\"badge\">{value}</span>}>{toHuman(name)}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function DatabaseMetrics({ info }) {\n  return (\n    <Card title=\"Redash Database\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, size]) => (\n            <List.Item extra={<span className=\"badge\">{prettySize(size)}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Queues({ info }) {\n  info = toPairs(info);\n  return (\n    <Card title=\"Queues\" size=\"small\">\n      {info.length === 0 && <div className=\"text-muted text-center\">No data</div>}\n      {info.length > 0 && (\n        <List\n          size=\"small\"\n          itemLayout=\"vertical\"\n          dataSource={info}\n          renderItem={([name, queue]) => (\n            <List.Item extra={<span className=\"badge\">{queue.size}</span>}>{name}</List.Item>\n          )}\n        />\n      )}\n    </Card>\n  );\n}\n\nexport function Manager({ info }) {\n  const items = info\n    ? [\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.lastRefreshAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Last Refresh\n        </List.Item>,\n        <List.Item\n          extra={\n            <span className=\"badge\">\n              <TimeAgo date={info.startedAt} placeholder=\"n/a\" />\n            </span>\n          }>\n          Started\n        </List.Item>,\n        <List.Item extra={<span className=\"badge\">{info.outdatedQueriesCount}</span>}>\n          Outdated Queries Count\n        </List.Item>,\n      ]\n    : [];\n\n  return (\n    <Card title=\"Manager\" size=\"small\">\n      {!info && <div className=\"text-muted text-center\">No data</div>}\n      {info && <List size=\"small\" itemLayout=\"vertical\" dataSource={items} renderItem={item => item} />}\n    </Card>\n  );\n}\n","import { omit } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Layout from \"@/components/admin/Layout\";\nimport * as StatusBlock from \"@/components/admin/StatusBlock\";\n\nimport { axios } from \"@/services/axios\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nimport \"./system-status.less\";\n\nclass SystemStatus extends React.Component {\n  static propTypes = {\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    queues: [],\n    manager: null,\n    databaseMetrics: {},\n    status: {},\n  };\n\n  _refreshTimer = null;\n\n  componentDidMount() {\n    recordEvent(\"view\", \"page\", \"admin/status\");\n    this.refresh();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._refreshTimer);\n  }\n\n  refresh = () => {\n    axios\n      .get(\"/status.json\")\n      .then(data => {\n        this.setState({\n          queues: data.manager.queues,\n          manager: {\n            startedAt: data.manager.started_at * 1000,\n            lastRefreshAt: data.manager.last_refresh_at * 1000,\n            outdatedQueriesCount: data.manager.outdated_queries_count,\n          },\n          databaseMetrics: data.database_metrics.metrics || [],\n          status: omit(data, [\"workers\", \"manager\", \"database_metrics\"]),\n        });\n      })\n      .catch(error => this.props.onError(error));\n    this._refreshTimer = setTimeout(this.refresh, 60 * 1000);\n  };\n\n  render() {\n    return (\n      <Layout activeTab=\"system_status\">\n        <div className=\"system-status-page\">\n          <div className=\"system-status-page-blocks\">\n            <div className=\"system-status-page-block\">\n              <StatusBlock.General info={this.state.status} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Manager info={this.state.manager} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.Queues info={this.state.queues} />\n            </div>\n            <div className=\"system-status-page-block\">\n              <StatusBlock.DatabaseMetrics info={this.state.databaseMetrics} />\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nroutes.register(\n  \"Admin.SystemStatus\",\n  routeWithUserSession({\n    path: \"/admin/status\",\n    title: \"System Status\",\n    render: pageProps => <SystemStatus {...pageProps} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\nimport { merge } from \"lodash\";\n\n// backwards compatibility\nconst normalizeCondition = {\n  \"greater than\": \">\",\n  \"less than\": \"<\",\n  equals: \"=\",\n};\n\nconst transformResponse = data =>\n  merge({}, data, {\n    options: {\n      op: normalizeCondition[data.options.op] || data.options.op,\n    },\n  });\n\nconst transformRequest = data => {\n  const newData = Object.assign({}, data);\n  if (newData.query_id === undefined) {\n    newData.query_id = newData.query.id;\n    newData.destination_id = newData.destinations;\n    delete newData.query;\n    delete newData.destinations;\n  }\n\n  return newData;\n};\n\nconst saveOrCreateUrl = data => (data.id ? `api/alerts/${data.id}` : \"api/alerts\");\n\nconst Alert = {\n  query: () => axios.get(\"api/alerts\"),\n  get: ({ id }) => axios.get(`api/alerts/${id}`).then(transformResponse),\n  save: data => axios.post(saveOrCreateUrl(data), transformRequest(data)),\n  delete: data => axios.delete(`api/alerts/${data.id}`),\n  mute: data => axios.post(`api/alerts/${data.id}/mute`),\n  unmute: data => axios.delete(`api/alerts/${data.id}/mute`),\n};\n\nexport default Alert;\n","import { toUpper } from \"lodash\";\nimport React from \"react\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Alert from \"@/services/alert\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nexport const STATE_CLASS = {\n  unknown: \"label-warning\",\n  ok: \"label-success\",\n  triggered: \"label-danger\",\n};\n\nclass AlertsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, alert) => (\n        <span title={alert.options.muted ? \"Muted\" : \"Active\"}>\n          <i className={`fa fa-bell-${alert.options.muted ? \"slash\" : \"o\"} p-r-0`} aria-hidden=\"true\" />\n          <span className=\"sr-only\">{alert.options.muted ? \"Muted\" : \"Active\"}</span>\n        </span>\n      ),\n      {\n        title: (\n          <>\n            <i className=\"fa fa-bell p-r-0\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Sort by notification status.</span>\n          </>\n        ),\n        field: \"muted\",\n        width: \"1%\",\n      }\n    ),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <Link className=\"table-main-title\" href={\"alerts/\" + alert.id}>\n            {alert.name}\n          </Link>\n        </div>\n      ),\n      {\n        title: \"Name\",\n        field: \"name\",\n      }\n    ),\n    Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n    Columns.custom.sortable(\n      (text, alert) => (\n        <div>\n          <span className={`label ${STATE_CLASS[alert.state]}`}>{toUpper(alert.state)}</span>\n        </div>\n      ),\n      {\n        title: \"State\",\n        field: \"state\",\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.timeAgo.sortable({ title: \"Last Updated At\", field: \"updated_at\", width: \"1%\" }),\n    Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  ];\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div className=\"page-alerts-list\">\n        <div className=\"container\">\n          <PageHeader\n            title={controller.params.pageTitle}\n            actions={\n              currentUser.hasPermission(\"list_alerts\") ? (\n                <Link.Button block type=\"primary\" href=\"alerts/new\">\n                  <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                  New Alert\n                </Link.Button>\n              ) : null\n            }\n          />\n          <div>\n            {controller.isLoaded && controller.isEmpty ? (\n              <DynamicComponent name=\"AlertsList.EmptyState\">\n                <EmptyState\n                  icon=\"fa fa-bell-o\"\n                  illustration=\"alert\"\n                  description=\"Get notified on certain events\"\n                  helpMessage={<EmptyStateHelpMessage helpTriggerType=\"ALERTS\" />}\n                  showAlertStep\n                />\n              </DynamicComponent>\n            ) : (\n              <div className=\"table-responsive bg-white tiled\">\n                <ItemsTable\n                  loading={!controller.isLoaded}\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst AlertsListPage = itemsList(\n  AlertsList,\n  () =>\n    new ResourceItemsSource({\n      isPlainList: true,\n      getRequest() {\n        return {};\n      },\n      getResource() {\n        return Alert.query.bind(Alert);\n      },\n    }),\n  () => new StateStorage({ orderByField: \"created_at\", orderByReverse: true, itemsPerPage: 20 })\n);\n\nroutes.register(\n  \"Alerts.List\",\n  routeWithUserSession({\n    path: \"/alerts\",\n    title: \"Alerts\",\n    render: pageProps => <AlertsListPage {...pageProps} currentPage=\"alerts\" />,\n  })\n);\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Modal from \"antd/lib/modal\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\n\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport PlainButton from \"@/components/PlainButton\";\n\nexport default function MenuButton({ doDelete, canEdit, mute, unmute, muted }) {\n  const [loading, setLoading] = useState(false);\n\n  const execute = useCallback(action => {\n    setLoading(true);\n    action().finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    Modal.confirm({\n      title: \"Delete Alert\",\n      content: \"Are you sure you want to delete this alert?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => {\n        setLoading(true);\n        doDelete().catch(() => {\n          setLoading(false);\n        });\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [doDelete]);\n\n  return (\n    <Dropdown\n      className={cx(\"m-l-5\", { disabled: !canEdit })}\n      trigger={[canEdit ? \"click\" : undefined]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu>\n          <Menu.Item>\n            {muted ? (\n              <PlainButton onClick={() => execute(unmute)}>Unmute Notifications</PlainButton>\n            ) : (\n              <PlainButton onClick={() => execute(mute)}>Mute Notifications</PlainButton>\n            )}\n          </Menu.Item>\n          <Menu.Item>\n            <PlainButton onClick={confirmDelete}>Delete</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button aria-label=\"More actions\">\n        {loading ? <LoadingOutlinedIcon /> : <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />}\n      </Button>\n    </Dropdown>\n  );\n}\n\nMenuButton.propTypes = {\n  doDelete: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  muted: PropTypes.bool,\n};\n\nMenuButton.defaultProps = {\n  muted: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport { getDefaultName } from \"../Alert\";\n\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport \"./Title.less\";\n\nexport default function Title({ alert, editMode, name, onChange, children }) {\n  const defaultName = getDefaultName(alert);\n  return (\n    <div className=\"alert-header\">\n      <div className=\"alert-title\">\n        <h3>\n          {editMode && alert.query ? (\n            // BUG: Input is not the same width as the container\n            // TODO: consider adding a label (not obvious for sighted users)\n            <Input\n              className=\"f-inherit\"\n              placeholder={defaultName}\n              value={name}\n              aria-label=\"Alert title\"\n              onChange={e => onChange(e.target.value)}\n            />\n          ) : (\n            name || defaultName\n          )}\n        </h3>\n      </div>\n      <div className=\"alert-actions\">{children}</div>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  alert: AlertType.isRequired,\n  name: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  name: null,\n  children: null,\n  onChange: null,\n  editMode: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, includes, toString, isEmpty } from \"lodash\";\n\nimport Input from \"antd/lib/input\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Select from \"antd/lib/select\";\nimport Divider from \"antd/lib/divider\";\n\nimport { AlertOptions as AlertOptionsType } from \"@/components/proptypes\";\n\nimport \"./Criteria.less\";\n\nconst CONDITIONS = {\n  \">\": \"\\u003e\",\n  \">=\": \"\\u2265\",\n  \"<\": \"\\u003c\",\n  \"<=\": \"\\u2264\",\n  \"==\": \"\\u003d\",\n  \"!=\": \"\\u2260\",\n};\n\nconst VALID_STRING_CONDITIONS = [\"==\", \"!=\"];\n\nfunction DisabledInput({ children, minWidth }) {\n  return (\n    <div className=\"criteria-disabled-input\" style={{ minWidth }}>\n      {children}\n    </div>\n  );\n}\n\nDisabledInput.propTypes = {\n  children: PropTypes.node.isRequired,\n  minWidth: PropTypes.number.isRequired,\n};\n\nexport default function Criteria({ columnNames, resultValues, alertOptions, onChange, editMode }) {\n  const columnValue = !isEmpty(resultValues) ? head(resultValues)[alertOptions.column] : null;\n  const invalidMessage = (() => {\n    // bail if condition is valid for strings\n    if (includes(VALID_STRING_CONDITIONS, alertOptions.op)) {\n      return null;\n    }\n\n    if (isNaN(alertOptions.value)) {\n      return \"Value column type doesn't match threshold type.\";\n    }\n\n    if (isNaN(columnValue)) {\n      return \"Value column isn't supported by condition type.\";\n    }\n\n    return null;\n  })();\n\n  const columnHint = (\n    <small className=\"alert-criteria-hint\">\n      Top row value is <code className=\"p-0\">{toString(columnValue) || \"unknown\"}</code>\n    </small>\n  );\n\n  return (\n    <div data-test=\"Criteria\">\n      <div className=\"input-title\">\n        <span className=\"input-label\">Value column</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.column}\n            onChange={column => onChange({ column })}\n            dropdownMatchSelectWidth={false}\n            style={{ minWidth: 100 }}>\n            {columnNames.map(name => (\n              <Select.Option key={name}>{name}</Select.Option>\n            ))}\n          </Select>\n        ) : (\n          <DisabledInput minWidth={70}>{alertOptions.column}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <span className=\"input-label\">Condition</span>\n        {editMode ? (\n          <Select\n            value={alertOptions.op}\n            onChange={op => onChange({ op })}\n            optionLabelProp=\"label\"\n            dropdownMatchSelectWidth={false}\n            style={{ width: 55 }}>\n            <Select.Option value=\">\" label={CONDITIONS[\">\"]}>\n              {CONDITIONS[\">\"]} greater than\n            </Select.Option>\n            <Select.Option value=\">=\" label={CONDITIONS[\">=\"]}>\n              {CONDITIONS[\">=\"]} greater than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"<\" label={CONDITIONS[\"<\"]}>\n              {CONDITIONS[\"<\"]} less than\n            </Select.Option>\n            <Select.Option value=\"<=\" label={CONDITIONS[\"<=\"]}>\n              {CONDITIONS[\"<=\"]} less than or equals\n            </Select.Option>\n            <Select.Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider m-t-10 m-b-5\" />\n            </Select.Option>\n            <Select.Option value=\"==\" label={CONDITIONS[\"==\"]}>\n              {CONDITIONS[\"==\"]} equals\n            </Select.Option>\n            <Select.Option value=\"!=\" label={CONDITIONS[\"!=\"]}>\n              {CONDITIONS[\"!=\"]} not equal to\n            </Select.Option>\n          </Select>\n        ) : (\n          <DisabledInput minWidth={50}>{CONDITIONS[alertOptions.op]}</DisabledInput>\n        )}\n      </div>\n      <div className=\"input-title\">\n        <label className=\"input-label\" htmlFor=\"threshold-criterion\">\n          Threshold\n        </label>\n        {editMode ? (\n          <Input\n            id=\"threshold-criterion\"\n            style={{ width: 90 }}\n            value={alertOptions.value}\n            onChange={e => onChange({ value: e.target.value })}\n          />\n        ) : (\n          <DisabledInput minWidth={50}>{alertOptions.value}</DisabledInput>\n        )}\n      </div>\n      <div className=\"ant-form-item-explain\">\n        {columnHint}\n        <br />\n        {invalidMessage && (\n          <small>\n            <WarningFilledIcon className=\"warning-icon-danger\" /> {invalidMessage}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n}\n\nCriteria.propTypes = {\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n  alertOptions: AlertOptionsType.isRequired,\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nCriteria.defaultProps = {\n  onChange: () => {},\n  editMode: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toLower, isNumber } from \"lodash\";\n\nimport InputNumber from \"antd/lib/input-number\";\nimport Select from \"antd/lib/select\";\n\nimport \"./Rearm.less\";\n\nconst DURATIONS = [\n  [\"Second\", 1],\n  [\"Minute\", 60],\n  [\"Hour\", 3600],\n  [\"Day\", 86400],\n  [\"Week\", 604800],\n];\n\nfunction RearmByDuration({ value, onChange, editMode }) {\n  const [durationIdx, setDurationIdx] = useState();\n  const [count, setCount] = useState();\n\n  useEffect(() => {\n    for (let i = DURATIONS.length - 1; i >= 0; i -= 1) {\n      const [, durValue] = DURATIONS[i];\n      if (value % durValue === 0) {\n        setDurationIdx(i);\n        setCount(value / durValue);\n        break;\n      }\n    }\n  }, [value]);\n\n  if (!isNumber(count) || !isNumber(durationIdx)) {\n    return null;\n  }\n\n  const onChangeCount = newCount => {\n    setCount(newCount);\n    onChange(newCount * DURATIONS[durationIdx][1]);\n  };\n\n  const onChangeIdx = newIdx => {\n    setDurationIdx(newIdx);\n    onChange(count * DURATIONS[newIdx][1]);\n  };\n\n  const plural = count !== 1 ? \"s\" : \"\";\n\n  if (editMode) {\n    return (\n      <>\n        <InputNumber value={count} onChange={onChangeCount} min={1} precision={0} />\n        <Select value={durationIdx} onChange={onChangeIdx}>\n          {DURATIONS.map(([name], idx) => (\n            <Select.Option value={idx} key={name}>\n              {name}\n              {plural}\n            </Select.Option>\n          ))}\n        </Select>\n      </>\n    );\n  }\n\n  const [name] = DURATIONS[durationIdx];\n  return count + \" \" + toLower(name) + plural;\n}\n\nRearmByDuration.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n};\n\nRearmByDuration.defaultProps = {\n  onChange: () => {},\n};\n\nfunction RearmEditor({ value, onChange }) {\n  const [selected, setSelected] = useState(value < 2 ? value : 2);\n\n  const _onChange = newSelected => {\n    setSelected(newSelected);\n    onChange(newSelected < 2 ? newSelected : 3600);\n  };\n\n  return (\n    <div className=\"alert-rearm\">\n      <Select\n        optionLabelProp=\"label\"\n        defaultValue={selected || 0}\n        dropdownMatchSelectWidth={false}\n        onChange={_onChange}>\n        <Select.Option value={0} label=\"Just once\">\n          Just once <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={1} label=\"Each time alert is evaluated\">\n          Each time alert is evaluated <em>until back to normal</em>\n        </Select.Option>\n        <Select.Option value={2} label=\"At most every\">\n          At most every ... <em>when alert is evaluated</em>\n        </Select.Option>\n      </Select>\n      {selected === 2 && value && <RearmByDuration value={value} onChange={onChange} editMode />}\n    </div>\n  );\n}\n\nRearmEditor.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction RearmViewer({ value }) {\n  let phrase = \"\";\n  switch (value) {\n    case 0:\n      phrase = \"just once, until back to normal\";\n      break;\n    case 1:\n      phrase = \"each time alert is evaluated, until back to normal\";\n      break;\n    default:\n      phrase = (\n        <>\n          at most every <RearmByDuration value={value} editMode={false} />, when alert is evaluated\n        </>\n      );\n  }\n\n  return <span>Notifications are sent {phrase}.</span>;\n}\n\nRearmViewer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default function Rearm({ editMode, ...props }) {\n  return editMode ? <RearmEditor {...props} /> : <RearmViewer {...props} />;\n}\n\nRearm.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n};\n\nRearm.defaultProps = {\n  onChange: null,\n  editMode: false,\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport default function useSearchResults(fetch, { initialResults = null, debounceTimeout = 200 } = {}) {\n  const [result, setResult] = useState(initialResults);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentSearchTerm = useRef(null);\n  const isDestroyed = useRef(false);\n\n  const [doSearch] = useDebouncedCallback(searchTerm => {\n    setIsLoading(true);\n    currentSearchTerm.current = searchTerm;\n    fetch(searchTerm)\n      .catch(() => initialResults)\n      .then(data => {\n        if (searchTerm === currentSearchTerm.current && !isDestroyed.current) {\n          setResult(data);\n          setIsLoading(false);\n        }\n      });\n  }, debounceTimeout);\n\n  useEffect(\n    () =>\n      // ignore all requests after component destruction\n      () => {\n        isDestroyed.current = true;\n      },\n    []\n  );\n\n  return [doSearch, result, isLoading];\n}\n","import { find } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport { Query } from \"@/services/query\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nconst { Option } = Select;\nfunction search(term) {\n  if (term === null) {\n    return Promise.resolve(null);\n  }\n\n  // get recent\n  if (!term) {\n    return Query.recent().then(results => results.filter(item => !item.is_draft)); // filter out draft\n  }\n\n  // search by query\n  return Query.query({ q: term }).then(({ results }) => results);\n}\n\nexport default function QuerySelector(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedQuery, setSelectedQuery] = useState();\n  const [doSearch, searchResults, searching] = useSearchResults(search, { initialResults: [] });\n\n  const placeholder = \"Search a query by name\";\n  const clearIcon = (\n    <i\n      className=\"fa fa-times hide-in-percy\"\n      role=\"button\"\n      tabIndex={0}\n      aria-label=\"Clear\"\n      onClick={() => selectQuery(null)}\n    />\n  );\n  const spinIcon = (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className={cx(\"fa fa-spinner fa-pulse hide-in-percy\", { hidden: !searching })} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Searching...</span>\n    </span>\n  );\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  // set selected from prop\n  useEffect(() => {\n    if (props.selectedQuery) {\n      setSelectedQuery(props.selectedQuery);\n    }\n  }, [props.selectedQuery]);\n\n  function selectQuery(queryId) {\n    let query = null;\n    if (queryId) {\n      query = find(searchResults, { id: queryId });\n      if (!query) {\n        // shouldn't happen\n        notification.error(\"Something went wrong...\", \"Couldn't select query\");\n      }\n    }\n\n    setSearchTerm(query ? null : \"\"); // empty string triggers recent fetch\n    setSelectedQuery(query);\n    props.onChange(query);\n  }\n\n  function renderResults() {\n    if (!searchResults.length) {\n      return <div className=\"text-muted\">No results matching search term.</div>;\n    }\n\n    return (\n      <ul className=\"list-group\">\n        {searchResults.map(q => (\n          <PlainButton\n            className={cx(\"query-selector-result\", \"list-group-item\", { inactive: q.is_draft })}\n            key={q.id}\n            role=\"listitem\"\n            onClick={() => selectQuery(q.id)}\n            data-test={`QueryId${q.id}`}>\n            {q.name} <QueryTagsControl isDraft={q.is_draft} tags={q.tags} className=\"inline-tags-control\" />\n          </PlainButton>\n        ))}\n      </ul>\n    );\n  }\n\n  if (props.disabled) {\n    return (\n      <Input value={selectedQuery && selectedQuery.name} aria-label=\"Tied query\" placeholder={placeholder} disabled />\n    );\n  }\n\n  if (props.type === \"select\") {\n    const suffixIcon = selectedQuery ? clearIcon : null;\n    const value = selectedQuery ? selectedQuery.name : searchTerm;\n\n    return (\n      <Select\n        showSearch\n        dropdownMatchSelectWidth={false}\n        placeholder={placeholder}\n        value={value || undefined} // undefined for the placeholder to show\n        onSearch={setSearchTerm}\n        onChange={selectQuery}\n        suffixIcon={searching ? spinIcon : suffixIcon}\n        notFoundContent={null}\n        filterOption={false}\n        defaultActiveFirstOption={false}\n        className={props.className}\n        data-test=\"QuerySelector\">\n        {searchResults &&\n          searchResults.map(q => {\n            const disabled = q.is_draft;\n            return (\n              <Option\n                value={q.id}\n                key={q.id}\n                disabled={disabled}\n                className=\"query-selector-result\"\n                data-test={`QueryId${q.id}`}>\n                {q.name}{\" \"}\n                <QueryTagsControl\n                  isDraft={q.is_draft}\n                  tags={q.tags}\n                  className={cx(\"inline-tags-control\", { disabled })}\n                />\n              </Option>\n            );\n          })}\n      </Select>\n    );\n  }\n\n  return (\n    <span data-test=\"QuerySelector\">\n      {selectedQuery ? (\n        <Input value={selectedQuery.name} aria-label=\"Tied query\" suffix={clearIcon} readOnly />\n      ) : (\n        <Input\n          placeholder={placeholder}\n          value={searchTerm}\n          aria-label=\"Tied query\"\n          onChange={e => setSearchTerm(e.target.value)}\n          suffix={spinIcon}\n        />\n      )}\n      <div className=\"scrollbox\" style={{ maxHeight: \"50vh\", marginTop: 15 }}>\n        {searchResults && renderResults()}\n      </div>\n    </span>\n  );\n}\n\nQuerySelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  selectedQuery: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  type: PropTypes.oneOf([\"select\", \"default\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nQuerySelector.defaultProps = {\n  selectedQuery: null,\n  type: \"default\",\n  className: null,\n  disabled: false,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { Query as QueryType } from \"@/components/proptypes\";\n\nimport Tooltip from \"@/components/Tooltip\";\n\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport QuestionCircleTwoToneIcon from \"@ant-design/icons/QuestionCircleTwoTone\";\nimport LoadingOutlinedIcon from \"@ant-design/icons/LoadingOutlined\";\n\nimport \"./Query.less\";\n\nexport default function QueryFormItem({ query, queryResult, onChange, editMode }) {\n  const queryHint =\n    query && query.schedule ? (\n      <small>\n        Scheduled to refresh{\" \"}\n        <i className=\"alert-query-schedule\">\n          <SchedulePhrase schedule={query.schedule} isNew={false} />\n        </i>\n      </small>\n    ) : (\n      <small>\n        <WarningFilledIcon className=\"warning-icon-danger\" /> This query has no <i>refresh schedule</i>.{\" \"}\n        <Tooltip title=\"A query schedule is not necessary but is highly recommended for alerts. An Alert without a query schedule will only send notifications if a user in your organization manually executes this query.\">\n          <a role=\"presentation\">\n            Why it&apos;s recommended <QuestionCircleTwoToneIcon />\n          </a>\n        </Tooltip>\n      </small>\n    );\n\n  return (\n    <>\n      {editMode ? (\n        <QuerySelector onChange={onChange} selectedQuery={query} className=\"alert-query-selector\" type=\"select\" />\n      ) : (\n        <Tooltip title=\"Open query in a new tab.\">\n          <Link href={`queries/${query.id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"alert-query-link\">\n            {query.name} <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">(opens in a new tab)</span>\n          </Link>\n        </Tooltip>\n      )}\n      <div className=\"ant-form-item-explain\">{query && queryHint}</div>\n      {query && !queryResult && (\n        <div className=\"m-t-30\">\n          <LoadingOutlinedIcon className=\"m-r-5\" /> Loading query data\n        </div>\n      )}\n    </>\n  );\n}\n\nQueryFormItem.propTypes = {\n  query: QueryType,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onChange: PropTypes.func,\n  editMode: PropTypes.bool,\n};\n\nQueryFormItem.defaultProps = {\n  query: null,\n  queryResult: null,\n  onChange: () => {},\n  editMode: false,\n};\n","import { filter, find, isEmpty, size } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport BigMessage from \"@/components/BigMessage\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./SelectItemsDialog.less\";\n\nfunction ItemsList({ items, renderItem, onItemClick }) {\n  const renderListItem = useCallback(\n    item => {\n      const { content, className, isDisabled } = renderItem(item);\n\n      return (\n        <List.Item\n          className={classNames(\"select-items-list\", \"w-100\", \"p-l-10\", \"p-r-10\", { disabled: isDisabled }, className)}\n          onClick={isDisabled ? null : () => onItemClick(item)}>\n          {content}\n        </List.Item>\n      );\n    },\n    [renderItem, onItemClick]\n  );\n\n  return <List size=\"small\" dataSource={items} renderItem={renderListItem} />;\n}\n\nItemsList.propTypes = {\n  items: PropTypes.array,\n  renderItem: PropTypes.func,\n  onItemClick: PropTypes.func,\n};\n\nItemsList.defaultProps = {\n  items: [],\n  renderItem: () => {},\n  onItemClick: () => {},\n};\n\nfunction SelectItemsDialog({\n  dialog,\n  dialogTitle,\n  inputPlaceholder,\n  itemKey,\n  renderItem,\n  renderStagedItem,\n  searchItems,\n  selectedItemsTitle,\n  width,\n  showCount,\n  extraFooterContent,\n}) {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [search, items, isLoading] = useSearchResults(searchItems, { initialResults: [] });\n  const hasResults = items.length > 0;\n\n  useEffect(() => {\n    search();\n  }, [search]);\n\n  const isItemSelected = useCallback(\n    item => {\n      const key = itemKey(item);\n      return !!find(selectedItems, i => itemKey(i) === key);\n    },\n    [selectedItems, itemKey]\n  );\n\n  const toggleItem = useCallback(\n    item => {\n      if (isItemSelected(item)) {\n        const key = itemKey(item);\n        setSelectedItems(filter(selectedItems, i => itemKey(i) !== key));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems, itemKey, isItemSelected]\n  );\n\n  const save = useCallback(() => {\n    dialog.close(selectedItems).catch(error => {\n      if (error) {\n        notification.error(\"Failed to save some of selected items.\");\n      }\n    });\n  }, [dialog, selectedItems]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"select-items-dialog\"\n      width={width}\n      title={dialogTitle}\n      footer={\n        <div className=\"d-flex align-items-center\">\n          <span className=\"flex-fill m-r-5\" style={{ textAlign: \"left\", color: \"rgba(0, 0, 0, 0.5)\" }}>\n            {extraFooterContent}\n          </span>\n          <Button {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n            Cancel\n          </Button>\n          <Button\n            {...dialog.props.okButtonProps}\n            onClick={save}\n            disabled={selectedItems.length === 0 || dialog.props.okButtonProps.disabled}\n            type=\"primary\">\n            Save\n            {showCount && !isEmpty(selectedItems) ? ` (${size(selectedItems)})` : null}\n          </Button>\n        </div>\n      }>\n      <div className=\"d-flex align-items-center m-b-10\">\n        <div className=\"flex-fill\">\n          <Input.Search\n            onChange={event => search(event.target.value)}\n            placeholder={inputPlaceholder}\n            aria-label={inputPlaceholder}\n            autoFocus\n          />\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20\">\n            <h5 className=\"m-0\">{selectedItemsTitle}</h5>\n          </div>\n        )}\n      </div>\n\n      <div className=\"d-flex align-items-stretch\" style={{ minHeight: \"30vh\", maxHeight: \"50vh\" }}>\n        <div className=\"flex-fill scrollbox\">\n          {isLoading && <LoadingState className=\"\" />}\n          {!isLoading && !hasResults && (\n            <BigMessage icon=\"fa-search\" message=\"No items match your search.\" className=\"\" />\n          )}\n          {!isLoading && hasResults && (\n            <ItemsList\n              items={items}\n              renderItem={item => renderItem(item, { isSelected: isItemSelected(item) })}\n              onItemClick={toggleItem}\n            />\n          )}\n        </div>\n        {renderStagedItem && (\n          <div className=\"w-50 m-l-20 scrollbox\">\n            {selectedItems.length > 0 && (\n              <ItemsList\n                items={selectedItems}\n                renderItem={item => renderStagedItem(item, { isSelected: true })}\n                onItemClick={toggleItem}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nSelectItemsDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dialogTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  selectedItemsTitle: PropTypes.string,\n  searchItems: PropTypes.func.isRequired, // (searchTerm: string): Promise<Items[]> if `searchTerm === ''` load all\n  itemKey: PropTypes.func, // (item) => string|number - return key of item (by default `id`)\n  // left list\n  // (item, { isSelected }) => {\n  //   content: node, // item contents\n  //   className: string = '', // additional class for item wrapper\n  //   isDisabled: bool = false, // is item clickable or disabled\n  // }\n  renderItem: PropTypes.func,\n  // right list; args/results save as for `renderItem`. if not specified - `renderItem` will be used\n  renderStagedItem: PropTypes.func,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  extraFooterContent: PropTypes.node,\n  showCount: PropTypes.bool,\n};\n\nSelectItemsDialog.defaultProps = {\n  dialogTitle: \"Add Items\",\n  inputPlaceholder: \"Search...\",\n  selectedItemsTitle: \"Selected items\",\n  itemKey: item => item.id,\n  renderItem: () => \"\",\n  renderStagedItem: null, // hidden by default\n  width: \"80%\",\n  extraFooterContent: null,\n  showCount: false,\n};\n\nexport default wrapDialog(SelectItemsDialog);\n","import { axios } from \"@/services/axios\";\n\nexport const IMG_ROOT = \"static/images/destinations\";\n\nconst Destination = {\n  query: () => axios.get(\"api/destinations\"),\n  get: ({ id }) => axios.get(`api/destinations/${id}`),\n  types: () => axios.get(\"api/destinations/types\"),\n  create: data => axios.post(`api/destinations`, data),\n  save: data => axios.post(`api/destinations/${data.id}`, data),\n  delete: ({ id }) => axios.delete(`api/destinations/${id}`),\n};\n\nexport default Destination;\n","import { axios } from \"@/services/axios\";\n\nconst AlertSubscription = {\n  query: ({ alertId }) => axios.get(`api/alerts/${alertId}/subscriptions`),\n  create: data => axios.post(`api/alerts/${data.alert_id}/subscriptions`, data),\n  delete: data => axios.delete(`api/alerts/${data.alert_id}/subscriptions/${data.id}`),\n};\n\nexport default AlertSubscription;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function ListItemAddon({ isSelected, isStaged, alreadyInGroup, deselectedIcon }) {\n  if (isStaged) {\n    return (\n      <>\n        <i className=\"fa fa-remove\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Remove</span>\n      </>\n    );\n  }\n  if (alreadyInGroup) {\n    return (\n      <Tooltip title=\"Already selected\">\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span tabIndex={0}>\n          <i className=\"fa fa-check\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Already selected</span>\n        </span>\n      </Tooltip>\n    );\n  }\n  return isSelected ? (\n    <>\n      <i className=\"fa fa-check\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Selected</span>\n    </>\n  ) : (\n    <>\n      <i className={`fa ${deselectedIcon}`} aria-hidden=\"true\" />\n      <span className=\"sr-only\">Select</span>\n    </>\n  );\n}\n\nListItemAddon.propTypes = {\n  isSelected: PropTypes.bool,\n  isStaged: PropTypes.bool,\n  alreadyInGroup: PropTypes.bool,\n  deselectedIcon: PropTypes.string,\n};\n\nListItemAddon.defaultProps = {\n  isSelected: false,\n  isStaged: false,\n  alreadyInGroup: false,\n  deselectedIcon: \"fa-angle-double-right\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Alert from \"antd/lib/alert\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function EmailSettingsWarning({ featureName, className, mode, adminOnly }) {\n  const messageDescriptionId = useUniqueId(\"sr-mail-description\");\n\n  if (!clientConfig.mailSettingsMissing) {\n    return null;\n  }\n\n  if (adminOnly && !currentUser.isAdmin) {\n    return null;\n  }\n\n  const message = (\n    <span id={messageDescriptionId}>\n      Your mail server isn&apos;t configured correctly, and is needed for {featureName} to work.{\" \"}\n      <HelpTrigger type=\"MAIL_CONFIG\" className=\"f-inherit\" />\n    </span>\n  );\n\n  if (mode === \"icon\") {\n    return (\n      <Tooltip title={message} placement=\"topRight\" arrowPointAtCenter>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <span className={className} aria-label=\"Mail alert\" aria-describedby={messageDescriptionId} tabIndex={0}>\n          <i className={\"fa fa-exclamation-triangle\"} aria-hidden=\"true\" />\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return <Alert message={message} type=\"error\" className={className} />;\n}\n\nEmailSettingsWarning.propTypes = {\n  featureName: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  mode: PropTypes.oneOf([\"alert\", \"icon\"]),\n  adminOnly: PropTypes.bool,\n};\n\nEmailSettingsWarning.defaultProps = {\n  className: null,\n  mode: \"alert\",\n  adminOnly: false,\n};\n","import { without, find, includes, map, toLower } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@/components/Link\";\nimport Button from \"antd/lib/button\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { Destination as DestinationType, UserProfile as UserType } from \"@/components/proptypes\";\n\nimport DestinationService, { IMG_ROOT } from \"@/services/destination\";\nimport AlertSubscription from \"@/services/alert-subscription\";\nimport { clientConfig, currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\n\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./AlertDestinations.less\";\n\nconst USER_EMAIL_DEST_ID = -1;\n\nfunction normalizeSub(sub) {\n  if (!sub.destination) {\n    sub.destination = {\n      id: USER_EMAIL_DEST_ID,\n      name: sub.user.email,\n      icon: \"DEPRECATED\",\n      type: \"email\",\n    };\n  }\n  return sub;\n}\n\nfunction ListItem({ destination: { name, type }, user, unsubscribe }) {\n  const canUnsubscribe = currentUser.isAdmin || currentUser.id === user.id;\n\n  return (\n    <li className=\"destination-wrapper\">\n      <img src={`${IMG_ROOT}/${type}.png`} className=\"destination-icon\" alt={name} />\n      <span className=\"flex-fill\">{name}</span>\n      {type === \"email\" && (\n        <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n      )}\n      {canUnsubscribe && (\n        <Tooltip title=\"Remove\" mouseEnterDelay={0.5}>\n          <PlainButton className=\"remove-button\" onClick={unsubscribe}>\n            {/* TODO: lacks visual feedback */}\n            <CloseOutlinedIcon />\n          </PlainButton>\n        </Tooltip>\n      )}\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  destination: DestinationType.isRequired,\n  user: UserType.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n};\n\nexport default class AlertDestinations extends React.Component {\n  static propTypes = {\n    alertId: PropTypes.any.isRequired,\n  };\n\n  state = {\n    dests: [],\n    subs: null,\n  };\n\n  componentDidMount() {\n    const { alertId } = this.props;\n    Promise.all([\n      DestinationService.query(), // get all destinations\n      AlertSubscription.query({ alertId }), // get subcriptions per alert\n    ]).then(([dests, subs]) => {\n      subs = subs.map(normalizeSub);\n      this.setState({ dests, subs });\n    });\n  }\n\n  showAddAlertSubDialog = () => {\n    const { dests, subs } = this.state;\n\n    SelectItemsDialog.showModal({\n      width: 570,\n      showCount: true,\n      extraFooterContent: (\n        <>\n          <i className=\"fa fa-info-circle\" aria-hidden=\"true\" /> Create new destinations in{\" \"}\n          <Tooltip title=\"Opens page in a new tab.\">\n            <Link href=\"destinations/new\" target=\"_blank\">\n              Alert Destinations\n            </Link>\n          </Tooltip>\n        </>\n      ),\n      dialogTitle: \"Add Existing Alert Destinations\",\n      inputPlaceholder: \"Search destinations...\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return Promise.resolve(dests.filter(d => includes(toLower(d.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = !!find(subs, s => s.destination.id === item.id);\n\n        return {\n          content: (\n            <div className=\"destination-wrapper\">\n              <img src={`${IMG_ROOT}/${item.type}.png`} className=\"destination-icon\" alt={item.name} />\n              <span className=\"flex-fill\">{item.name}</span>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} deselectedIcon=\"fa-plus\" />\n            </div>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n    }).onClose(items => {\n      const promises = map(items, item => this.subscribe(item));\n      return Promise.all(promises)\n        .then(() => {\n          notification.success(\"Subscribed.\");\n        })\n        .catch(() => {\n          notification.error(\"Failed saving subscription.\");\n          return Promise.reject(null); // keep dialog visible but suppress its default error message\n        });\n    });\n  };\n\n  onUserEmailToggle = sub => {\n    if (sub) {\n      this.unsubscribe(sub);\n    } else {\n      this.subscribe();\n    }\n  };\n\n  subscribe = dest => {\n    const { alertId } = this.props;\n\n    const sub = { alert_id: alertId };\n    if (dest) {\n      sub.destination_id = dest.id;\n    }\n\n    return AlertSubscription.create(sub).then(sub => {\n      const { subs } = this.state;\n      this.setState({\n        subs: [...subs, normalizeSub(sub)],\n      });\n    });\n  };\n\n  unsubscribe = sub => {\n    AlertSubscription.delete(sub)\n      .then(() => {\n        // not showing subscribe notification cause it's redundant here\n        const { subs } = this.state;\n        this.setState({\n          subs: without(subs, sub),\n        });\n      })\n      .catch(() => {\n        notification.error(\"Failed unsubscribing.\");\n      });\n  };\n\n  render() {\n    if (!this.props.alertId) {\n      return null;\n    }\n\n    const { subs } = this.state;\n    const currentUserEmailSub = find(subs, {\n      destination: { id: USER_EMAIL_DEST_ID },\n      user: { id: currentUser.id },\n    });\n    const filteredSubs = without(subs, currentUserEmailSub);\n    const { mailSettingsMissing } = clientConfig;\n\n    return (\n      <div className=\"alert-destinations\" data-test=\"AlertDestinations\">\n        <Tooltip title='Click to add an existing \"Alert Destination\"' mouseEnterDelay={0.5}>\n          <Button\n            data-test=\"ShowAddAlertSubDialog\"\n            type=\"primary\"\n            size=\"small\"\n            className=\"add-button\"\n            onClick={this.showAddAlertSubDialog}>\n            <i className=\"fa fa-plus f-12 m-r-5\" aria-hidden=\"true\" /> Add\n          </Button>\n        </Tooltip>\n        <ul>\n          <li className=\"destination-wrapper\">\n            <i className=\"destination-icon fa fa-envelope\" aria-hidden=\"true\" />\n            <span className=\"flex-fill\">{currentUser.email}</span>\n            <EmailSettingsWarning className=\"destination-warning\" featureName=\"alert emails\" mode=\"icon\" />\n            {!mailSettingsMissing && (\n              <Switch\n                size=\"small\"\n                className=\"toggle-button\"\n                checked={!!currentUserEmailSub}\n                loading={!subs}\n                onChange={() => this.onUserEmailToggle(currentUserEmailSub)}\n                data-test=\"UserEmailToggle\"\n              />\n            )}\n          </li>\n          {filteredSubs.map(s => (\n            <ListItem key={s.id} unsubscribe={() => this.unsubscribe(s)} {...s} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\n\nexport default function HorizontalFormItem({ children, label, className, ...props }) {\n  const labelCol = { span: 4 };\n  const wrapperCol = { span: 16 };\n  if (!label) {\n    wrapperCol.offset = 4;\n  }\n\n  className = cx(\"alert-form-item\", className);\n\n  return (\n    <Form.Item labelCol={labelCol} wrapperCol={wrapperCol} label={label} className={className} {...props}>\n      {children}\n    </Form.Item>\n  );\n}\n\nHorizontalFormItem.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  className: PropTypes.string,\n};\n\nHorizontalFormItem.defaultProps = {\n  children: null,\n  label: null,\n  className: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Link from \"@/components/Link\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport AntAlert from \"antd/lib/alert\";\nimport * as Grid from \"antd/lib/grid\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport AlertDestinations from \"./components/AlertDestinations\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\nimport { STATE_CLASS } from \"../alerts/AlertsList\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nfunction AlertState({ state, lastTriggered }) {\n  return (\n    <div className=\"alert-state\">\n      <span className={`alert-state-indicator label ${STATE_CLASS[state]}`}>Status: {state}</span>\n      {state === \"unknown\" && <div className=\"ant-form-item-explain\">Alert condition has not been evaluated.</div>}\n      {lastTriggered && (\n        <div className=\"ant-form-item-explain\">\n          Last triggered{\" \"}\n          <span className=\"alert-last-triggered\">\n            <TimeAgo date={lastTriggered} />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAlertState.propTypes = {\n  state: PropTypes.string.isRequired,\n  lastTriggered: PropTypes.string,\n};\n\nAlertState.defaultProps = {\n  lastTriggered: null,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AlertView extends React.Component {\n  state = {\n    unmuting: false,\n  };\n\n  unmute = () => {\n    this.setState({ unmuting: true });\n    this.props.unmute().finally(() => {\n      this.setState({ unmuting: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, canEdit, onEdit, menuButton } = this.props;\n    const { query, name, options, rearm } = alert;\n\n    return (\n      <>\n        <Title name={name} alert={alert}>\n          <DynamicComponent name=\"AlertView.HeaderExtra\" alert={alert} />\n          <Tooltip title={canEdit ? \"\" : \"You do not have sufficient permissions to edit this alert\"}>\n            <Button type=\"default\" onClick={canEdit ? onEdit : null} className={cx({ disabled: !canEdit })}>\n              <i className=\"fa fa-edit m-r-5\" aria-hidden=\"true\" />\n              Edit\n            </Button>\n            {menuButton}\n          </Tooltip>\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <Grid.Row type=\"flex\" gutter={16}>\n            <Grid.Col xs={24} md={16} className=\"d-flex\">\n              <Form className=\"flex-fill\">\n                <HorizontalFormItem>\n                  <AlertState state={alert.state} lastTriggered={alert.last_triggered_at} />\n                </HorizontalFormItem>\n                <HorizontalFormItem label=\"Query\">\n                  <Query query={query} queryResult={queryResult} />\n                </HorizontalFormItem>\n                {queryResult && options && (\n                  <>\n                    <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                      <Criteria\n                        columnNames={queryResult.getColumnNames()}\n                        resultValues={queryResult.getData()}\n                        alertOptions={options}\n                      />\n                    </HorizontalFormItem>\n                    <HorizontalFormItem label=\"Notifications\" className=\"form-item-line-height-normal\">\n                      <Rearm value={rearm || 0} />\n                      <br />\n                      Set to {options.custom_subject || options.custom_body ? \"custom\" : \"default\"} notification\n                      template.\n                    </HorizontalFormItem>\n                  </>\n                )}\n              </Form>\n            </Grid.Col>\n            <Grid.Col xs={24} md={8}>\n              {options.muted && (\n                <AntAlert\n                  className=\"m-b-20\"\n                  message={\n                    <>\n                      <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\" /> Notifications are muted\n                    </>\n                  }\n                  description={\n                    <>\n                      Notifications for this alert will not be sent.\n                      <br />\n                      {canEdit && (\n                        <>\n                          To restore notifications click\n                          <Button\n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={this.unmute}\n                            loading={this.state.unmuting}\n                            className=\"m-t-5 m-l-5\">\n                            Unmute\n                          </Button>\n                        </>\n                      )}\n                    </>\n                  }\n                  type=\"warning\"\n                />\n              )}\n              <h4>\n                Destinations{\" \"}\n                <Tooltip title=\"Open Alert Destinations page in a new tab.\">\n                  <Link href=\"destinations\" target=\"_blank\">\n                    <i className=\"fa fa-external-link f-13\" aria-hidden=\"true\" />\n                    <span className=\"sr-only\">(opens in a new tab)</span>\n                  </Link>\n                </Tooltip>\n              </h4>\n              <AlertDestinations alertId={alert.id} />\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertView.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  canEdit: PropTypes.bool.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  menuButton: PropTypes.node.isRequired,\n  unmute: PropTypes.func,\n};\n\nAlertView.defaultProps = {\n  queryResult: null,\n  unmute: null,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { head, isEmpty, isNull, isUndefined } from \"lodash\";\nimport Mustache from \"mustache\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType, Query as QueryType } from \"@/components/proptypes\";\n\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport Switch from \"antd/lib/switch\";\n\nimport \"./NotificationTemplate.less\";\n\nfunction normalizeCustomTemplateData(alert, query, columnNames, resultValues) {\n  const topValue = !isEmpty(resultValues) ? head(resultValues)[alert.options.column] : null;\n\n  return {\n    ALERT_STATUS: \"TRIGGERED\",\n    ALERT_CONDITION: alert.options.op,\n    ALERT_THRESHOLD: alert.options.value,\n    ALERT_NAME: alert.name,\n    ALERT_URL: `${window.location.origin}/alerts/${alert.id}`,\n    QUERY_NAME: query.name,\n    QUERY_URL: `${window.location.origin}/queries/${query.id}`,\n    QUERY_RESULT_VALUE: isNull(topValue) || isUndefined(topValue) ? \"UNKNOWN\" : topValue,\n    QUERY_RESULT_ROWS: resultValues,\n    QUERY_RESULT_COLS: columnNames,\n  };\n}\n\nfunction NotificationTemplate({ alert, query, columnNames, resultValues, subject, setSubject, body, setBody }) {\n  const hasContent = !!(subject || body);\n  const [enabled, setEnabled] = useState(hasContent ? 1 : 0);\n  const [showPreview, setShowPreview] = useState(false);\n\n  const renderData = normalizeCustomTemplateData(alert, query, columnNames, resultValues);\n\n  const render = tmpl => Mustache.render(tmpl || \"\", renderData);\n  const onEnabledChange = value => {\n    if (value || !hasContent) {\n      setEnabled(value);\n      setShowPreview(false);\n    } else {\n      Modal.confirm({\n        title: \"Are you sure?\",\n        content: \"Switching to default template will discard your custom template.\",\n        onOk: () => {\n          setSubject(null);\n          setBody(null);\n          setEnabled(value);\n          setShowPreview(false);\n        },\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    }\n  };\n\n  return (\n    <div className=\"alert-template\">\n      <Select\n        value={enabled}\n        onChange={onEnabledChange}\n        optionLabelProp=\"label\"\n        dropdownMatchSelectWidth={false}\n        style={{ width: \"fit-content\" }}>\n        <Select.Option value={0} label=\"Use default template\">\n          Default template\n        </Select.Option>\n        <Select.Option value={1} label=\"Use custom template\">\n          Custom template\n        </Select.Option>\n      </Select>\n      {!!enabled && (\n        <div className=\"alert-custom-template\" data-test=\"AlertCustomTemplate\">\n          <div className=\"d-flex align-items-center\">\n            <h5 className=\"flex-fill\">Subject / Body</h5>\n            Preview{\" \"}\n            <Switch size=\"small\" className=\"alert-template-preview\" value={showPreview} onChange={setShowPreview} />\n          </div>\n          {/* TODO: consider adding real labels (not clear for sighted users as well) */}\n          <Input\n            value={showPreview ? render(subject) : subject}\n            aria-label=\"Subject\"\n            onChange={e => setSubject(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomSubject\"\n          />\n          <Input.TextArea\n            value={showPreview ? render(body) : body}\n            aria-label=\"Body\"\n            autoSize={{ minRows: 9 }}\n            onChange={e => setBody(e.target.value)}\n            disabled={showPreview}\n            data-test=\"CustomBody\"\n          />\n          <HelpTrigger type=\"ALERT_NOTIF_TEMPLATE_GUIDE\" className=\"f-13\">\n            <i className=\"fa fa-question-circle\" aria-hidden=\"true\" /> Formatting guide{\" \"}\n            <span className=\"sr-only\">(help)</span>\n          </HelpTrigger>\n        </div>\n      )}\n    </div>\n  );\n}\n\nNotificationTemplate.propTypes = {\n  alert: AlertType.isRequired,\n  query: QueryType.isRequired,\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  resultValues: PropTypes.arrayOf(PropTypes.any).isRequired,\n  subject: PropTypes.string,\n  setSubject: PropTypes.func.isRequired,\n  body: PropTypes.string,\n  setBody: PropTypes.func.isRequired,\n};\n\nNotificationTemplate.defaultProps = {\n  subject: \"\",\n  body: \"\",\n};\n\nexport default NotificationTemplate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\n\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertEdit extends React.Component {\n  _isMounted = false;\n\n  state = {\n    saving: false,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      if (this._isMounted) {\n        this.setState({ saving: false });\n      }\n    });\n  };\n\n  cancel = () => {\n    this.props.cancel();\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange, menuButton } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title name={name} alert={alert} onChange={onNameChange} editMode>\n          <DynamicComponent name=\"AlertEdit.HeaderExtra\" alert={alert} />\n          <Button className=\"m-r-5\" onClick={() => this.cancel()}>\n            <i className=\"fa fa-times m-r-5\" aria-hidden=\"true\" />\n            Cancel\n          </Button>\n          <Button type=\"primary\" onClick={() => this.save()}>\n            {saving ? (\n              <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">Saving...</span>\n              </span>\n            ) : (\n              <>\n                <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />\n              </>\n            )}\n            Save Changes\n          </Button>\n          {menuButton}\n        </Title>\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n            </Form>\n            <div>\n              <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n                Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(help)</span>\n              </HelpTrigger>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertEdit.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  menuButton: PropTypes.node.isRequired,\n  save: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  onQuerySelected: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertEdit.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { Alert as AlertType } from \"@/components/proptypes\";\n\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\n\nimport Title from \"./components/Title\";\nimport Criteria from \"./components/Criteria\";\nimport NotificationTemplate from \"./components/NotificationTemplate\";\nimport Rearm from \"./components/Rearm\";\nimport Query from \"./components/Query\";\nimport HorizontalFormItem from \"./components/HorizontalFormItem\";\n\nexport default class AlertNew extends React.Component {\n  state = {\n    saving: false,\n  };\n\n  save = () => {\n    this.setState({ saving: true });\n    this.props.save().catch(() => {\n      this.setState({ saving: false });\n    });\n  };\n\n  render() {\n    const { alert, queryResult, pendingRearm, onNotificationTemplateChange } = this.props;\n    const { onQuerySelected, onNameChange, onRearmChange, onCriteriaChange } = this.props;\n    const { query, name, options } = alert;\n    const { saving } = this.state;\n\n    return (\n      <>\n        <Title alert={alert} name={name} onChange={onNameChange} editMode />\n        <div className=\"bg-white tiled p-20\">\n          <div className=\"d-flex\">\n            <Form className=\"flex-fill\">\n              <div className=\"m-b-30\">\n                Start by selecting the query that you would like to monitor using the search bar.\n                <br />\n                Keep in mind that Alerts do not work with queries that use parameters.\n              </div>\n              <HorizontalFormItem label=\"Query\">\n                <Query query={query} queryResult={queryResult} onChange={onQuerySelected} editMode />\n              </HorizontalFormItem>\n              {queryResult && options && (\n                <>\n                  <HorizontalFormItem label=\"Trigger when\" className=\"alert-criteria\">\n                    <Criteria\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      alertOptions={options}\n                      onChange={onCriteriaChange}\n                      editMode\n                    />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"When triggered, send notification\">\n                    <Rearm value={pendingRearm || 0} onChange={onRearmChange} editMode />\n                  </HorizontalFormItem>\n                  <HorizontalFormItem label=\"Template\">\n                    <NotificationTemplate\n                      alert={alert}\n                      query={query}\n                      columnNames={queryResult.getColumnNames()}\n                      resultValues={queryResult.getData()}\n                      subject={options.custom_subject}\n                      setSubject={subject => onNotificationTemplateChange({ custom_subject: subject })}\n                      body={options.custom_body}\n                      setBody={body => onNotificationTemplateChange({ custom_body: body })}\n                    />\n                  </HorizontalFormItem>\n                </>\n              )}\n              <HorizontalFormItem>\n                <Button type=\"primary\" onClick={this.save} disabled={!query} className=\"btn-create-alert\">\n                  {saving && (\n                    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n                      <i className=\"fa fa-spinner fa-pulse m-r-5\" aria-hidden=\"true\" />\n                      <span className=\"sr-only\">Saving...</span>\n                    </span>\n                  )}\n                  Create Alert\n                </Button>\n              </HorizontalFormItem>\n            </Form>\n            <HelpTrigger className=\"f-13\" type=\"ALERT_SETUP\">\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlertNew.propTypes = {\n  alert: AlertType.isRequired,\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types,\n  pendingRearm: PropTypes.number,\n  onQuerySelected: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  onNameChange: PropTypes.func.isRequired,\n  onRearmChange: PropTypes.func.isRequired,\n  onCriteriaChange: PropTypes.func.isRequired,\n  onNotificationTemplateChange: PropTypes.func.isRequired,\n};\n\nAlertNew.defaultProps = {\n  queryResult: null,\n  pendingRearm: null,\n};\n","import { head, includes, trim, template, values } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nimport { currentUser } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport AlertService from \"@/services/alert\";\nimport { Query as QueryService } from \"@/services/query\";\nimport routes from \"@/services/routes\";\n\nimport MenuButton from \"./components/MenuButton\";\nimport AlertView from \"./AlertView\";\nimport AlertEdit from \"./AlertEdit\";\nimport AlertNew from \"./AlertNew\";\n\nconst MODES = {\n  NEW: 0,\n  VIEW: 1,\n  EDIT: 2,\n};\n\nconst defaultNameBuilder = template(\"<%= query.name %>: <%= options.column %> <%= options.op %> <%= options.value %>\");\n\nexport function getDefaultName(alert) {\n  if (!alert.query) {\n    return \"New Alert\";\n  }\n  return defaultNameBuilder(alert);\n}\n\nclass Alert extends React.Component {\n  static propTypes = {\n    mode: PropTypes.oneOf(values(MODES)),\n    alertId: PropTypes.string,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mode: null,\n    alertId: null,\n    onError: () => {},\n  };\n\n  _isMounted = false;\n\n  state = {\n    alert: null,\n    queryResult: null,\n    pendingRearm: null,\n    canEdit: false,\n    mode: null,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { mode } = this.props;\n    this.setState({ mode });\n\n    if (mode === MODES.NEW) {\n      this.setState({\n        alert: {\n          options: {\n            op: \">\",\n            value: 1,\n            muted: false,\n          },\n        },\n        pendingRearm: 0,\n        canEdit: true,\n      });\n    } else {\n      const { alertId } = this.props;\n      AlertService.get({ id: alertId })\n        .then(alert => {\n          if (this._isMounted) {\n            const canEdit = currentUser.canEdit(alert);\n\n            // force view mode if can't edit\n            if (!canEdit) {\n              this.setState({ mode: MODES.VIEW });\n              notification.warn(\n                \"You cannot edit this alert\",\n                \"You do not have sufficient permissions to edit this alert, and have been redirected to the view-only page.\",\n                { duration: 0 }\n              );\n            }\n\n            this.setState({ alert, canEdit, pendingRearm: alert.rearm });\n            this.onQuerySelected(alert.query);\n          }\n        })\n        .catch(error => {\n          if (this._isMounted) {\n            this.props.onError(error);\n          }\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  save = () => {\n    const { alert, pendingRearm } = this.state;\n\n    alert.name = trim(alert.name) || getDefaultName(alert);\n    alert.rearm = pendingRearm || null;\n\n    return AlertService.save(alert)\n      .then(alert => {\n        notification.success(\"Saved.\");\n        navigateTo(`alerts/${alert.id}`, true);\n        this.setState({ alert, mode: MODES.VIEW });\n      })\n      .catch(() => {\n        notification.error(\"Failed saving alert.\");\n      });\n  };\n\n  onQuerySelected = query => {\n    this.setState(({ alert }) => ({\n      alert: Object.assign(alert, { query }),\n      queryResult: null,\n    }));\n\n    if (query) {\n      // get cached result for column names and values\n      new QueryService(query).getQueryResultPromise().then(queryResult => {\n        if (this._isMounted) {\n          this.setState({ queryResult });\n          let { column } = this.state.alert.options;\n          const columns = queryResult.getColumnNames();\n\n          // default to first column name if none chosen, or irrelevant in current query\n          if (!column || !includes(columns, column)) {\n            column = head(queryResult.getColumnNames());\n          }\n          this.setAlertOptions({ column });\n        }\n      });\n    }\n  };\n\n  onNameChange = name => {\n    const { alert } = this.state;\n    this.setState({\n      alert: Object.assign(alert, { name }),\n    });\n  };\n\n  onRearmChange = pendingRearm => {\n    this.setState({ pendingRearm });\n  };\n\n  setAlertOptions = obj => {\n    const { alert } = this.state;\n    const options = { ...alert.options, ...obj };\n    this.setState({\n      alert: Object.assign(alert, { options }),\n    });\n  };\n\n  delete = () => {\n    const { alert } = this.state;\n    return AlertService.delete(alert)\n      .then(() => {\n        notification.success(\"Alert deleted successfully.\");\n        navigateTo(\"alerts\");\n      })\n      .catch(() => {\n        notification.error(\"Failed deleting alert.\");\n      });\n  };\n\n  mute = () => {\n    const { alert } = this.state;\n    return AlertService.mute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: true });\n        notification.warn(\"Notifications have been muted.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed muting notifications.\");\n      });\n  };\n\n  unmute = () => {\n    const { alert } = this.state;\n    return AlertService.unmute(alert)\n      .then(() => {\n        this.setAlertOptions({ muted: false });\n        notification.success(\"Notifications have been restored.\");\n      })\n      .catch(() => {\n        notification.error(\"Failed restoring notifications.\");\n      });\n  };\n\n  edit = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}/edit`, true);\n    this.setState({ mode: MODES.EDIT });\n  };\n\n  cancel = () => {\n    const { id } = this.state.alert;\n    navigateTo(`alerts/${id}`, true);\n    this.setState({ mode: MODES.VIEW });\n  };\n\n  render() {\n    const { alert } = this.state;\n    if (!alert) {\n      return <LoadingState className=\"m-t-30\" />;\n    }\n\n    const muted = !!alert.options.muted;\n    const { queryResult, mode, canEdit, pendingRearm } = this.state;\n\n    const menuButton = (\n      <MenuButton doDelete={this.delete} muted={muted} mute={this.mute} unmute={this.unmute} canEdit={canEdit} />\n    );\n\n    const commonProps = {\n      alert,\n      queryResult,\n      pendingRearm,\n      save: this.save,\n      menuButton,\n      onQuerySelected: this.onQuerySelected,\n      onRearmChange: this.onRearmChange,\n      onNameChange: this.onNameChange,\n      onCriteriaChange: this.setAlertOptions,\n      onNotificationTemplateChange: this.setAlertOptions,\n    };\n\n    return (\n      <div className=\"alert-page\">\n        <div className=\"container\">\n          {mode === MODES.NEW && <AlertNew {...commonProps} />}\n          {mode === MODES.VIEW && (\n            <AlertView canEdit={canEdit} onEdit={this.edit} muted={muted} unmute={this.unmute} {...commonProps} />\n          )}\n          {mode === MODES.EDIT && <AlertEdit cancel={this.cancel} {...commonProps} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Alerts.New\",\n  routeWithUserSession({\n    path: \"/alerts/new\",\n    title: \"New Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.NEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.View\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.VIEW} />,\n  })\n);\nroutes.register(\n  \"Alerts.Edit\",\n  routeWithUserSession({\n    path: \"/alerts/:alertId/edit\",\n    title: \"Alert\",\n    render: pageProps => <Alert {...pageProps} mode={MODES.EDIT} />,\n  })\n);\n","import { axios } from \"@/services/axios\";\n\nfunction processTags(data) {\n  return data.tags || [];\n}\n\nexport default function getTags(url) {\n  return axios.get(url).then(processTags);\n}\n","import { map, includes, difference } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Badge from \"antd/lib/badge\";\nimport Menu from \"antd/lib/menu\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport getTags from \"@/services/getTags\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./TagsList.less\";\n\ntype Tag = {\n  name: string;\n  count?: number;\n};\n\ntype TagsListProps = {\n  tagsUrl: string;\n  showUnselectAll: boolean;\n  onUpdate?: (selectedTags: string[]) => void;\n};\n\nfunction TagsList({ tagsUrl, showUnselectAll = false, onUpdate }: TagsListProps): JSX.Element | null {\n  const [allTags, setAllTags] = useState<Tag[]>([]);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    getTags(tagsUrl).then(tags => {\n      if (!isCancelled) {\n        setAllTags(tags);\n      }\n    });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [tagsUrl]);\n\n  const toggleTag = useCallback(\n    (event, tag) => {\n      let newSelectedTags;\n      if (event.shiftKey) {\n        // toggle tag\n        if (includes(selectedTags, tag)) {\n          newSelectedTags = difference(selectedTags, [tag]);\n        } else {\n          newSelectedTags = [...selectedTags, tag];\n        }\n      } else {\n        // if the tag is the only selected, deselect it, otherwise select only it\n        if (includes(selectedTags, tag) && selectedTags.length === 1) {\n          newSelectedTags = [];\n        } else {\n          newSelectedTags = [tag];\n        }\n      }\n\n      setSelectedTags(newSelectedTags);\n      if (onUpdate) {\n        onUpdate([...newSelectedTags]);\n      }\n    },\n    [selectedTags, onUpdate]\n  );\n\n  const unselectAll = useCallback(() => {\n    setSelectedTags([]);\n    if (onUpdate) {\n      onUpdate([]);\n    }\n  }, [onUpdate]);\n\n  if (allTags.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"tags-list\">\n      <div className=\"tags-list-title\">\n        <span className=\"tags-list-label\">Tags</span>\n        {showUnselectAll && selectedTags.length > 0 && (\n          <PlainButton type=\"link\" onClick={unselectAll}>\n            <CloseOutlinedIcon />\n            clear selection\n          </PlainButton>\n        )}\n      </div>\n\n      <div className=\"tiled\">\n        <Menu className=\"invert-stripe-position\" mode=\"inline\" selectedKeys={selectedTags}>\n          {map(allTags, tag => (\n            <Menu.Item key={tag.name} className=\"m-0\">\n              <PlainButton\n                className=\"d-flex align-items-center justify-content-between\"\n                onClick={event => toggleTag(event, tag.name)}>\n                <span className=\"max-character col-xs-11\">{tag.name}</span>\n                <Badge count={tag.count} />\n              </PlainButton>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default TagsList;\n","import { isFunction, isString, filter, map } from \"lodash\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"antd/lib/input\";\nimport AntdMenu from \"antd/lib/menu\";\nimport Link from \"@/components/Link\";\nimport TagsList from \"@/components/TagsList\";\n\n/*\n    SearchInput\n */\n\nexport function SearchInput({ placeholder, value, showIcon, onChange, label }) {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const onInputChange = useCallback(\n    event => {\n      const newValue = event.target.value;\n      setCurrentValue(newValue);\n      onChange(newValue);\n    },\n    [onChange]\n  );\n\n  const InputControl = showIcon ? Input.Search : Input;\n  return (\n    <div className=\"m-b-10\">\n      <InputControl\n        className=\"form-control\"\n        placeholder={placeholder}\n        value={currentValue}\n        aria-label={label}\n        onChange={onInputChange}\n      />\n    </div>\n  );\n}\n\nSearchInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  showIcon: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  showIcon: false,\n  label: \"Search\",\n};\n\n/*\n    Menu\n */\n\nexport function Menu({ items, selected }) {\n  items = filter(items, item => (isFunction(item.isAvailable) ? item.isAvailable() : true));\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10 tags-list tiled\">\n      <AntdMenu className=\"invert-stripe-position\" mode=\"inline\" selectable={false} selectedKeys={[selected]}>\n        {map(items, item => (\n          <AntdMenu.Item key={item.key} className=\"m-0\">\n            <Link href={item.href}>\n              {isString(item.icon) && item.icon !== \"\" && (\n                <span className=\"btn-favorite m-r-5\">\n                  <i className={item.icon} aria-hidden=\"true\" />\n                </span>\n              )}\n              {isFunction(item.icon) && (item.icon(item) || null)}\n              {item.title}\n            </Link>\n          </AntdMenu.Item>\n        ))}\n      </AntdMenu>\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      icon: PropTypes.func, // function to render icon\n      isAvailable: PropTypes.func, // return `true` to show item and `false` to hide; if omitted: show item\n    })\n  ),\n  selected: PropTypes.string,\n};\n\nMenu.defaultProps = {\n  items: [],\n  selected: null,\n};\n\n/*\n    MenuIcon\n */\n\nexport function MenuIcon({ icon }) {\n  return (\n    <span className=\"btn-favorite m-r-5\">\n      <i className={icon} aria-hidden=\"true\" />\n    </span>\n  );\n}\n\nMenuIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n};\n\n/*\n    ProfileImage\n */\n\nexport function ProfileImage({ user }) {\n  if (!isString(user.profile_image_url) || user.profile_image_url === \"\") {\n    return null;\n  }\n  return <img src={user.profile_image_url} className=\"profile__image--sidebar m-r-5\" width=\"13\" alt={user.name} />;\n}\n\nProfileImage.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\n/*\n    Tags\n */\n\nexport function Tags({ url, onChange, showUnselectAll }) {\n  if (url === \"\") {\n    return null;\n  }\n  return (\n    <div className=\"m-b-10\">\n      <TagsList tagsUrl={url} onUpdate={onChange} showUnselectAll={showUnselectAll} />\n    </div>\n  );\n}\n\nTags.propTypes = {\n  url: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  showUnselectAll: PropTypes.bool,\n  unselectAllButtonTitle: PropTypes.string,\n};\n","import { filter, includes, intersection } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport { Columns } from \"../components/ItemsTable\";\n\nexport default function useItemsListExtraActions(controller, listColumns, ExtraActionsComponent) {\n  const [actionsState, setActionsState] = useState({ isAvailable: false });\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  // clear selection when page changes\n  useEffect(() => {\n    setSelectedItems([]);\n  }, [controller.pageItems, actionsState.isAvailable]);\n\n  const areAllItemsSelected = useMemo(() => {\n    const allItems = controller.pageItems;\n    if (allItems.length === 0 || selectedItems.length === 0) {\n      return false;\n    }\n    return intersection(selectedItems, allItems).length === allItems.length;\n  }, [selectedItems, controller.pageItems]);\n\n  const toggleAllItems = useCallback(() => {\n    if (areAllItemsSelected) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(controller.pageItems);\n    }\n  }, [areAllItemsSelected, controller.pageItems]);\n\n  const toggleItem = useCallback(\n    item => {\n      if (includes(selectedItems, item)) {\n        setSelectedItems(filter(selectedItems, s => s !== item));\n      } else {\n        setSelectedItems([...selectedItems, item]);\n      }\n    },\n    [selectedItems]\n  );\n\n  const checkboxColumn = useMemo(\n    () =>\n      Columns.custom(\n        (text, item) => <Checkbox checked={includes(selectedItems, item)} onChange={() => toggleItem(item)} />,\n        {\n          title: () => <Checkbox checked={areAllItemsSelected} onChange={toggleAllItems} />,\n          field: \"id\",\n          width: \"1%\",\n        }\n      ),\n    [selectedItems, areAllItemsSelected, toggleAllItems, toggleItem]\n  );\n\n  const Component = useCallback(\n    function ItemsListExtraActionsComponentWrapper(props) {\n      // this check mostly needed to avoid eslint exhaustive deps warning\n      if (!ExtraActionsComponent) {\n        return null;\n      }\n\n      return <ExtraActionsComponent onStateChange={setActionsState} {...props} />;\n    },\n    [ExtraActionsComponent]\n  );\n\n  return useMemo(\n    () => ({\n      areExtraActionsAvailable: actionsState.isAvailable,\n      listColumns: actionsState.isAvailable ? [checkboxColumn, ...listColumns] : listColumns,\n      Component,\n      selectedItems,\n      setSelectedItems,\n    }),\n    [actionsState, listColumns, checkboxColumn, selectedItems, Component]\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./content-with-sidebar.less\";\n\nconst propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  className: null,\n  children: null,\n};\n\n// Sidebar\n\nfunction Sidebar({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-sidebar\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nSidebar.propTypes = propTypes;\nSidebar.defaultProps = defaultProps;\n\n// Content\n\nfunction Content({ className, children, ...props }) {\n  return (\n    <div className={classNames(\"layout-content\", className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nContent.propTypes = propTypes;\nContent.defaultProps = defaultProps;\n\n// Layout\n\nexport default function Layout({ children, className = undefined, ...props }) {\n  return (\n    <div className={classNames(\"layout-with-sidebar\", className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nLayout.propTypes = propTypes;\nLayout.defaultProps = defaultProps;\n\nLayout.Sidebar = Sidebar;\nLayout.Content = Content;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BigMessage from \"@/components/BigMessage\";\nimport { TagsControl } from \"@/components/tags-control/TagsControl\";\n\nexport default function NoTaggedObjectsFound({ objectType, tags }) {\n  return (\n    <BigMessage icon=\"fa-tags\">\n      No {objectType} found tagged with&nbsp;\n      <TagsControl className=\"inline-tags-control\" tags={Array.from(tags)} tagSeparator={\"+\"} />.\n    </BigMessage>\n  );\n}\n\nNoTaggedObjectsFound.propTypes = {\n  objectType: PropTypes.string.isRequired,\n  tags: PropTypes.oneOfType([PropTypes.array, PropTypes.objectOf(Set)]).isRequired,\n};\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport interface DashboardListEmptyStateProps {\n  page: string;\n  searchTerm: string;\n  selectedTags: string[];\n}\n\nexport default function DashboardListEmptyState({ page, searchTerm, selectedTags }: DashboardListEmptyStateProps) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"dashboards\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark dashboards as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_dashboard\") ? (\n        <span>\n          <Button type=\"primary\" size=\"small\" onClick={() => CreateDashboardDialog.showModal()}>\n            Create your first dashboard!\n          </Button>{\" \"}\n          <HelpTrigger className=\"f-14\" type=\"DASHBOARDS\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"DashboardList.EmptyState\">\n          <EmptyState\n            icon=\"zmdi zmdi-view-quilt\"\n            description=\"See the big picture\"\n            illustration=\"dashboard\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"DASHBOARDS\" />}\n            showDashboardStep\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nDashboardListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport CreateDashboardDialog from \"@/components/dashboards/CreateDashboardDialog\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nimport DashboardListEmptyState from \"./components/DashboardListEmptyState\";\n\nimport \"./dashboard-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"dashboards\",\n    title: \"All Dashboards\",\n    icon: () => <Sidebar.MenuIcon icon=\"zmdi zmdi-view-quilt\" />,\n  },\n  {\n    key: \"my\",\n    href: \"dashboards/my\",\n    title: \"My Dashboards\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"dashboards/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={item.url} data-test={`DashboardId${item.id}`}>\n          {item.name}\n        </Link>\n        <DashboardTagsControl\n          className=\"d-block\"\n          tags={item.tags}\n          isDraft={item.is_draft}\n          isArchived={item.is_archived}\n        />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Created At\",\n    field: \"created_at\",\n    width: \"1%\",\n  }),\n];\n\nfunction DashboardListExtraActions(props) {\n  return <DynamicComponent name=\"DashboardList.Actions\" {...props} />;\n}\n\nfunction DashboardList({ controller }) {\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, DashboardListExtraActions);\n\n  return (\n    <div className=\"page-dashboard-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_dashboard\") ? (\n              <Button block type=\"primary\" onClick={() => CreateDashboardDialog.showModal()}>\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Dashboard\n              </Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Dashboards...\"\n              label=\"Search dashboards\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/dashboards/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            <div data-test=\"DashboardLayoutContent\">\n              {controller.isLoaded && controller.isEmpty ? (\n                <DashboardListEmptyState\n                  page={controller.params.currentPage}\n                  searchTerm={controller.searchTerm}\n                  selectedTags={controller.selectedTags}\n                />\n              ) : (\n                <React.Fragment>\n                  <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                    <ExtraActionsComponent selectedItems={selectedItems} />\n                  </div>\n                  <div className=\"bg-white tiled table-responsive\">\n                    <ItemsTable\n                      items={controller.pageItems}\n                      loading={!controller.isLoaded}\n                      columns={tableColumns}\n                      orderByField={controller.orderByField}\n                      orderByReverse={controller.orderByReverse}\n                      toggleSorting={controller.toggleSorting}\n                    />\n                    <Paginator\n                      showPageSizeSelect\n                      totalCount={controller.totalItemsCount}\n                      pageSize={controller.itemsPerPage}\n                      onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                      page={controller.page}\n                      onChange={page => controller.updatePagination({ page })}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nDashboardList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst DashboardListPage = itemsList(\n  DashboardList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Dashboard.query.bind(Dashboard),\n          my: Dashboard.myDashboards.bind(Dashboard),\n          favorites: Dashboard.favorites.bind(Dashboard),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Dashboard(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Dashboards.List\",\n  routeWithUserSession({\n    path: \"/dashboards\",\n    title: \"Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.Favorites\",\n  routeWithUserSession({\n    path: \"/dashboards/favorites\",\n    title: \"Favorite Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Dashboards.My\",\n  routeWithUserSession({\n    path: \"/dashboards/my\",\n    title: \"My Dashboards\",\n    render: pageProps => <DashboardListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import { each, filter, map, toLower, toString, trim, upperFirst, without } from \"lodash\";\nimport Mousetrap from \"mousetrap\";\nimport \"mousetrap/plugins/global-bind/mousetrap-global-bind\";\n\nconst modKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Cmd\" : \"Ctrl\";\nconst altKey = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Option\" : \"Alt\";\n\nexport function humanReadableShortcut(shortcut, limit = Infinity) {\n  const modifiers = {\n    mod: upperFirst(modKey),\n    alt: upperFirst(altKey),\n  };\n\n  shortcut = toLower(toString(shortcut));\n  shortcut = filter(map(shortcut.split(\",\"), trim), s => s !== \"\").slice(0, limit);\n  shortcut = map(shortcut, sc => {\n    sc = filter(map(sc.split(\"+\")), s => s !== \"\");\n    return map(sc, s => modifiers[s] || upperFirst(s)).join(\" + \");\n  }).join(\", \");\n\n  return shortcut !== \"\" ? shortcut : null;\n}\n\nconst handlers = {};\n\nfunction onShortcut(event, shortcut) {\n  event.preventDefault();\n  event.retunValue = false;\n  each(handlers[shortcut], fn => fn());\n}\n\nconst KeyboardShortcuts = {\n  modKey,\n  altKey,\n\n  bind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = [...without(handlers[k], fn), fn];\n        Mousetrap.bindGlobal(k, onShortcut);\n      });\n    });\n  },\n\n  unbind: keymap => {\n    each(keymap, (fn, key) => {\n      const keys = key\n        .toLowerCase()\n        .split(\",\")\n        .map(trim);\n      each(keys, k => {\n        handlers[k] = without(handlers[k], fn);\n        if (handlers[k].length === 0) {\n          handlers[k] = undefined;\n          Mousetrap.unbind(k);\n        }\n      });\n    });\n  },\n};\n\nexport default KeyboardShortcuts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Badge from \"antd/lib/badge\";\nimport Tooltip from \"@/components/Tooltip\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nfunction ParameterApplyButton({ paramCount, onClick }) {\n  // show spinner when count is empty so the fade out is consistent\n  const icon = !paramCount ? (\n    <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n      <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n      <span className=\"sr-only\">Loading...</span>\n    </span>\n  ) : (\n    <i className=\"fa fa-check\" aria-hidden=\"true\" />\n  );\n\n  return (\n    <div className=\"parameter-apply-button\" data-show={!!paramCount} data-test=\"ParameterApplyButton\">\n      <Badge count={paramCount}>\n        <Tooltip title={paramCount ? `${KeyboardShortcuts.modKey} + Enter` : null}>\n          <span>\n            <Button onClick={onClick}>{icon} Apply Changes</Button>\n          </span>\n        </Tooltip>\n      </Badge>\n    </div>\n  );\n}\n\nParameterApplyButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  paramCount: PropTypes.number.isRequired,\n};\n\nexport default ParameterApplyButton;\n","const canvas = document.createElement(\"canvas\");\ncanvas.style.display = \"none\";\ndocument.body.appendChild(canvas);\n\nexport function calculateTextWidth(text: string, container = document.body) {\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    const containerStyle = window.getComputedStyle(container);\n    ctx.font = `${containerStyle.fontSize} ${containerStyle.fontFamily}`;\n    const textMetrics = ctx.measureText(text);\n    let actualWidth = textMetrics.width;\n    if (\"actualBoundingBoxLeft\" in textMetrics) {\n      // only available on evergreen browsers\n      actualWidth = Math.abs(textMetrics.actualBoundingBoxLeft) + Math.abs(textMetrics.actualBoundingBoxRight);\n    }\n    return actualWidth;\n  }\n\n  return null;\n}\n","import React, { useMemo } from \"react\";\nimport { maxBy } from \"lodash\";\nimport AntdSelect, { SelectProps, LabeledValue } from \"antd/lib/select\";\nimport { calculateTextWidth } from \"@/lib/calculateTextWidth\";\n\nconst MIN_LEN_FOR_VIRTUAL_SCROLL = 400;\n\ninterface VirtualScrollLabeledValue extends LabeledValue {\n  label: string;\n}\n\ninterface VirtualScrollSelectProps extends Omit<SelectProps<string>, \"optionFilterProp\" | \"children\"> {\n  options: Array<VirtualScrollLabeledValue>;\n}\nfunction SelectWithVirtualScroll({ options, ...props }: VirtualScrollSelectProps): JSX.Element {\n  const dropdownMatchSelectWidth = useMemo<number | boolean>(() => {\n    if (options && options.length > MIN_LEN_FOR_VIRTUAL_SCROLL) {\n      const largestOpt = maxBy(options, \"label.length\");\n\n      if (largestOpt) {\n        const offset = 40;\n        const optionText = largestOpt.label;\n        const width = calculateTextWidth(optionText);\n        if (width) {\n          return width + offset;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [options]);\n\n  return (\n    <AntdSelect<string>\n      dropdownMatchSelectWidth={dropdownMatchSelectWidth}\n      options={options}\n      allowClear={true}\n      optionFilterProp=\"label\" // as this component expects \"options\" prop\n      {...props}\n    />\n  );\n}\n\nexport default SelectWithVirtualScroll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst DateTimeInput = React.forwardRef(({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n  const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n  const additionalAttributes = {};\n  if (defaultValue && defaultValue.isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (value && value.isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <DatePicker\n      ref={ref}\n      className={className}\n      showTime\n      {...additionalAttributes}\n      format={format}\n      placeholder=\"Select Date and Time\"\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateTimeInput.propTypes = {\n  defaultValue: Moment,\n  value: Moment,\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeInput;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isFunction, get, findIndex } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Typography from \"antd/lib/typography\";\nimport { DynamicDateType } from \"@/services/parameters/DateParameter\";\nimport { DynamicDateRangeType } from \"@/services/parameters/DateRangeParameter\";\n\nimport ArrowLeftOutlinedIcon from \"@ant-design/icons/ArrowLeftOutlined\";\nimport ThunderboltTwoToneIcon from \"@ant-design/icons/ThunderboltTwoTone\";\nimport ThunderboltOutlinedIcon from \"@ant-design/icons/ThunderboltOutlined\";\n\nimport \"./DynamicButton.less\";\n\nconst { Text } = Typography;\n\nfunction DynamicButton({ options, selectedDynamicValue, onSelect, enabled, staticValueLabel }) {\n  const menu = (\n    <Menu\n      className=\"dynamic-menu\"\n      onClick={({ key }) => onSelect(get(options, key, \"static\"))}\n      selectedKeys={[`${findIndex(options, { value: selectedDynamicValue })}`]}\n      data-test=\"DynamicButtonMenu\">\n      {options.map((option, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Menu.Item key={index}>\n          {option.name} {option.label && <em>{isFunction(option.label) ? option.label() : option.label}</em>}\n        </Menu.Item>\n      ))}\n      {enabled && <Menu.Divider />}\n      {enabled && (\n        <Menu.Item>\n          <ArrowLeftOutlinedIcon />\n          <Text type=\"secondary\">{staticValueLabel}</Text>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n\n  const containerRef = useRef(null);\n\n  return (\n    <div ref={containerRef}>\n      <div role=\"presentation\" onClick={e => e.stopPropagation()}>\n        <Dropdown.Button\n          overlay={menu}\n          className=\"dynamic-button\"\n          placement=\"bottomRight\"\n          trigger={[\"click\"]}\n          icon={\n            enabled ? (\n              <ThunderboltTwoToneIcon className=\"dynamic-icon\" />\n            ) : (\n              <ThunderboltOutlinedIcon className=\"dynamic-icon\" />\n            )\n          }\n          getPopupContainer={() => containerRef.current}\n          data-test=\"DynamicButton\"\n        />\n      </div>\n    </div>\n  );\n}\n\nDynamicButton.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object), // eslint-disable-line react/forbid-prop-types\n  selectedDynamicValue: PropTypes.oneOfType([DynamicDateType, DynamicDateRangeType]),\n  onSelect: PropTypes.func,\n  enabled: PropTypes.bool,\n  staticValueLabel: PropTypes.string,\n};\n\nDynamicButton.defaultProps = {\n  options: [],\n  selectedDynamicValue: null,\n  onSelect: () => {},\n  enabled: false,\n  staticValueLabel: \"Back to Static Value\",\n};\n\nexport default DynamicButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes } from \"lodash\";\nimport { isDynamicDate } from \"@/services/parameters/DateParameter\";\nimport DateInput from \"@/components/DateInput\";\nimport DateTimeInput from \"@/components/DateTimeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nclass DynamicDatePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (parameterValue) {\n        onSelect(moment(parameterValue));\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, className, dateOptions, dynamicButtonOptions, onSelect } = this.props;\n    const hasDynamicValue = isDynamicDate(value);\n    const isDateTime = includes(type, \"datetime\");\n\n    const additionalAttributes = {};\n\n    let DateComponent = DateInput;\n    if (isDateTime) {\n      DateComponent = DateTimeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (moment.isMoment(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      const dynamicDate = value;\n      additionalAttributes.placeholder = dynamicDate && dynamicDate.name;\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div className={classNames(\"date-parameter\", className)}>\n        <DateComponent\n          {...dateOptions}\n          ref={this.dateComponentRef}\n          className={classNames(\"redash-datepicker\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getDynamicDateFromString } from \"@/services/parameters/DateParameter\";\nimport DynamicDatePicker from \"@/components/dynamic-parameters/DynamicDatePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"Today/Now\",\n    value: getDynamicDateFromString(\"d_now\"),\n    label: () =>\n      getDynamicDateFromString(\"d_now\")\n        .value()\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateFromString(\"d_yesterday\")\n        .value()\n        .format(\"MMM D\"),\n  },\n];\n\nfunction DateParameter(props) {\n  return (\n    <DynamicDatePicker\n      dynamicButtonOptions={{ options: DYNAMIC_DATE_OPTIONS }}\n      {...props}\n      dateOptions={{ \"aria-label\": \"Parameter date value\" }}\n    />\n  );\n}\n\nDateParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateParameter;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateRangeInput = React.forwardRef(({ defaultValue, value, onSelect, className, ...props }, ref) => {\n  const format = clientConfig.dateFormat || \"YYYY-MM-DD\";\n  const additionalAttributes = {};\n  if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n    additionalAttributes.defaultValue = defaultValue;\n  }\n  if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n    additionalAttributes.value = value;\n  }\n  return (\n    <RangePicker\n      ref={ref}\n      className={className}\n      {...additionalAttributes}\n      format={format}\n      onChange={onSelect}\n      {...props}\n    />\n  );\n});\n\nDateRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateRangeInput;\n","import { isArray } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport { clientConfig } from \"@/services/auth\";\nimport { Moment } from \"@/components/proptypes\";\n\nconst { RangePicker } = DatePicker;\n\nconst DateTimeRangeInput = React.forwardRef(\n  ({ defaultValue, value, withSeconds, onSelect, className, ...props }, ref) => {\n    const format = (clientConfig.dateFormat || \"YYYY-MM-DD\") + (withSeconds ? \" HH:mm:ss\" : \" HH:mm\");\n    const additionalAttributes = {};\n    if (isArray(defaultValue) && defaultValue[0].isValid() && defaultValue[1].isValid()) {\n      additionalAttributes.defaultValue = defaultValue;\n    }\n    if (value === null || (isArray(value) && value[0].isValid() && value[1].isValid())) {\n      additionalAttributes.value = value;\n    }\n    return (\n      <RangePicker\n        ref={ref}\n        className={className}\n        showTime\n        {...additionalAttributes}\n        format={format}\n        onChange={onSelect}\n        {...props}\n      />\n    );\n  }\n);\n\nDateTimeRangeInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(Moment),\n  value: PropTypes.arrayOf(Moment),\n  withSeconds: PropTypes.bool,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n};\n\nDateTimeRangeInput.defaultProps = {\n  defaultValue: null,\n  value: undefined,\n  withSeconds: false,\n  onSelect: () => {},\n  className: \"\",\n};\n\nexport default DateTimeRangeInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { includes, isArray, isObject } from \"lodash\";\nimport { isDynamicDateRange } from \"@/services/parameters/DateRangeParameter\";\nimport DateRangeInput from \"@/components/DateRangeInput\";\nimport DateTimeRangeInput from \"@/components/DateTimeRangeInput\";\nimport DynamicButton from \"@/components/dynamic-parameters/DynamicButton\";\n\nimport \"./DynamicParameters.less\";\n\nfunction isValidDateRangeValue(value) {\n  return isArray(value) && value.length === 2 && moment.isMoment(value[0]) && moment.isMoment(value[1]);\n}\n\nclass DynamicDateRangePicker extends React.Component {\n  static propTypes = {\n    type: PropTypes.oneOf([\"date-range\", \"datetime-range\", \"datetime-range-with-seconds\"]).isRequired,\n    className: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    dynamicButtonOptions: PropTypes.shape({\n      staticValueLabel: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          value: PropTypes.object,\n          label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        })\n      ),\n    }),\n    dateRangeOptions: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  };\n\n  static defaultProps = {\n    type: \"date-range\",\n    className: \"\",\n    value: null,\n    parameter: null,\n    dynamicButtonOptions: {\n      options: [],\n    },\n    onSelect: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dateRangeComponentRef = React.createRef();\n  }\n\n  onDynamicValueSelect = dynamicValue => {\n    const { onSelect, parameter } = this.props;\n    if (dynamicValue === \"static\") {\n      const parameterValue = parameter.getExecutionValue();\n      if (isObject(parameterValue) && parameterValue.start && parameterValue.end) {\n        onSelect([moment(parameterValue.start), moment(parameterValue.end)]);\n      } else {\n        onSelect(null);\n      }\n    } else {\n      onSelect(dynamicValue.value);\n    }\n    // give focus to the DatePicker to get keyboard shortcuts to work\n    this.dateRangeComponentRef.current.focus();\n  };\n\n  render() {\n    const { type, value, onSelect, className, dynamicButtonOptions, dateRangeOptions, parameter, ...rest } = this.props;\n    const isDateTimeRange = includes(type, \"datetime-range\");\n    const hasDynamicValue = isDynamicDateRange(value);\n\n    const additionalAttributes = {};\n\n    let DateRangeComponent = DateRangeInput;\n    if (isDateTimeRange) {\n      DateRangeComponent = DateTimeRangeInput;\n      if (includes(type, \"with-seconds\")) {\n        additionalAttributes.withSeconds = true;\n      }\n    }\n\n    if (isValidDateRangeValue(value) || value === null) {\n      additionalAttributes.value = value;\n    }\n\n    if (hasDynamicValue) {\n      additionalAttributes.placeholder = [value && value.name];\n      additionalAttributes.value = null;\n    }\n\n    return (\n      <div {...rest} className={classNames(\"date-range-parameter\", className)}>\n        <DateRangeComponent\n          {...dateRangeOptions}\n          ref={this.dateRangeComponentRef}\n          className={classNames(\"redash-datepicker date-range-input\", type, { \"dynamic-value\": hasDynamicValue })}\n          onSelect={onSelect}\n          suffixIcon={null}\n          {...additionalAttributes}\n        />\n        <DynamicButton\n          options={dynamicButtonOptions.options}\n          staticValueLabel={dynamicButtonOptions.staticValueLabel}\n          selectedDynamicValue={hasDynamicValue ? value : null}\n          enabled={hasDynamicValue}\n          onSelect={this.onDynamicValueSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DynamicDateRangePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { includes } from \"lodash\";\nimport { getDynamicDateRangeFromString } from \"@/services/parameters/DateRangeParameter\";\nimport DynamicDateRangePicker from \"@/components/dynamic-parameters/DynamicDateRangePicker\";\n\nconst DYNAMIC_DATE_OPTIONS = [\n  {\n    name: \"This week\",\n    value: getDynamicDateRangeFromString(\"d_this_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_this_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"This month\",\n    value: getDynamicDateRangeFromString(\"d_this_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"This year\",\n    value: getDynamicDateRangeFromString(\"d_this_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_this_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last week\",\n    value: getDynamicDateRangeFromString(\"d_last_week\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[0]\n        .format(\"MMM D\") +\n      \" - \" +\n      getDynamicDateRangeFromString(\"d_last_week\")\n        .value()[1]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Last month\",\n    value: getDynamicDateRangeFromString(\"d_last_month\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_month\")\n        .value()[0]\n        .format(\"MMMM\"),\n  },\n  {\n    name: \"Last year\",\n    value: getDynamicDateRangeFromString(\"d_last_year\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_year\")\n        .value()[0]\n        .format(\"YYYY\"),\n  },\n  {\n    name: \"Last 7 days\",\n    value: getDynamicDateRangeFromString(\"d_last_7_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_7_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 14 days\",\n    value: getDynamicDateRangeFromString(\"d_last_14_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_14_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 30 days\",\n    value: getDynamicDateRangeFromString(\"d_last_30_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_30_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 60 days\",\n    value: getDynamicDateRangeFromString(\"d_last_60_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_60_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 90 days\",\n    value: getDynamicDateRangeFromString(\"d_last_90_days\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_last_90_days\")\n        .value()[0]\n        .format(\"MMM D\") + \" - Today\",\n  },\n  {\n    name: \"Last 12 months\",\n    value: getDynamicDateRangeFromString(\"d_last_12_months\"),\n    label: null,\n  },\n];\n\nconst DYNAMIC_DATETIME_OPTIONS = [\n  {\n    name: \"Today\",\n    value: getDynamicDateRangeFromString(\"d_today\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_today\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  {\n    name: \"Yesterday\",\n    value: getDynamicDateRangeFromString(\"d_yesterday\"),\n    label: () =>\n      getDynamicDateRangeFromString(\"d_yesterday\")\n        .value()[0]\n        .format(\"MMM D\"),\n  },\n  ...DYNAMIC_DATE_OPTIONS,\n];\n\nfunction DateRangeParameter(props) {\n  const options = includes(props.type, \"datetime-range\") ? DYNAMIC_DATETIME_OPTIONS : DYNAMIC_DATE_OPTIONS;\n  return <DynamicDateRangePicker {...props} dynamicButtonOptions={{ options }} />;\n}\n\nDateRangeParameter.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  onSelect: PropTypes.func,\n};\n\nDateRangeParameter.defaultProps = {\n  type: \"\",\n  className: \"\",\n  value: null,\n  parameter: null,\n  onSelect: () => {},\n};\n\nexport default DateRangeParameter;\n","import { find, isArray, get, first, map, intersection, isEqual, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\n\nexport default class QueryBasedParameterInput extends React.Component {\n  static propTypes = {\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    mode: PropTypes.oneOf([\"default\", \"multiple\"]),\n    queryId: PropTypes.number,\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: null,\n    mode: \"default\",\n    parameter: null,\n    queryId: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      value: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this._loadOptions(this.props.queryId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.queryId !== prevProps.queryId) {\n      this._loadOptions(this.props.queryId);\n    }\n    if (this.props.value !== prevProps.value) {\n      this.setValue(this.props.value);\n    }\n  }\n\n  setValue(value) {\n    const { options } = this.state;\n    if (this.props.mode === \"multiple\") {\n      value = isArray(value) ? value : [value];\n      const optionValues = map(options, option => option.value);\n      const validValues = intersection(value, optionValues);\n      this.setState({ value: validValues });\n      return validValues;\n    }\n    const found = find(options, option => option.value === this.props.value) !== undefined;\n    value = found ? value : get(first(options), \"value\");\n    this.setState({ value });\n    return value;\n  }\n\n  async _loadOptions(queryId) {\n    if (queryId && queryId !== this.state.queryId) {\n      this.setState({ loading: true });\n      const options = await this.props.parameter.loadDropdownValues();\n\n      // stale queryId check\n      if (this.props.queryId === queryId) {\n        this.setState({ options, loading: false }, () => {\n          const updatedValue = this.setValue(this.props.value);\n          if (!isEqual(updatedValue, this.props.value)) {\n            this.props.onSelect(updatedValue);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { className, mode, onSelect, queryId, value, ...otherProps } = this.props;\n    const { loading, options } = this.state;\n    return (\n      <span>\n        <SelectWithVirtualScroll\n          className={className}\n          disabled={loading}\n          loading={loading}\n          mode={mode}\n          value={this.state.value}\n          onChange={onSelect}\n          options={map(options, ({ value, name }) => ({ label: String(name), value }))}\n          showSearch\n          showArrow\n          notFoundContent={isEmpty(options) ? \"No options available\" : null}\n          {...otherProps}\n        />\n      </span>\n    );\n  }\n}\n","import { isEqual, isEmpty, map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithVirtualScroll from \"@/components/SelectWithVirtualScroll\";\nimport Input from \"antd/lib/input\";\nimport InputNumber from \"antd/lib/input-number\";\nimport DateParameter from \"@/components/dynamic-parameters/DateParameter\";\nimport DateRangeParameter from \"@/components/dynamic-parameters/DateRangeParameter\";\nimport QueryBasedParameterInput from \"./QueryBasedParameterInput\";\n\nimport \"./ParameterValueInput.less\";\n\nconst multipleValuesProps = {\n  maxTagCount: 3,\n  maxTagTextLength: 10,\n  maxTagPlaceholder: num => `+${num.length} more`,\n};\n\nclass ParameterValueInput extends React.Component {\n  static propTypes = {\n    type: PropTypes.string,\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    enumOptions: PropTypes.string,\n    queryId: PropTypes.number,\n    parameter: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onSelect: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: \"text\",\n    value: null,\n    enumOptions: \"\",\n    queryId: null,\n    parameter: null,\n    onSelect: () => {},\n    className: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.parameter.hasPendingValue ? props.parameter.pendingValue : props.value,\n      isDirty: props.parameter.hasPendingValue,\n    };\n  }\n\n  componentDidUpdate = prevProps => {\n    const { value, parameter } = this.props;\n    // if value prop updated, reset dirty state\n    if (prevProps.value !== value || prevProps.parameter !== parameter) {\n      this.setState({\n        value: parameter.hasPendingValue ? parameter.pendingValue : value,\n        isDirty: parameter.hasPendingValue,\n      });\n    }\n  };\n\n  onSelect = value => {\n    const isDirty = !isEqual(value, this.props.value);\n    this.setState({ value, isDirty });\n    this.props.onSelect(value, isDirty);\n  };\n\n  renderDateParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderDateRangeParameter() {\n    const { type, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <DateRangeParameter\n        type={type}\n        className={this.props.className}\n        value={value}\n        parameter={parameter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n\n  renderEnumInput() {\n    const { enumOptions, parameter } = this.props;\n    const { value } = this.state;\n    const enumOptionsArray = enumOptions.split(\"\\n\").filter(v => v !== \"\");\n    // Antd Select doesn't handle null in multiple mode\n    const normalize = val => (parameter.multiValuesOptions && val === null ? [] : val);\n\n    return (\n      <SelectWithVirtualScroll\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        value={normalize(value)}\n        onChange={this.onSelect}\n        options={map(enumOptionsArray, opt => ({ label: String(opt), value: opt }))}\n        showSearch\n        showArrow\n        notFoundContent={isEmpty(enumOptionsArray) ? \"No options available\" : null}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderQueryBasedInput() {\n    const { queryId, parameter } = this.props;\n    const { value } = this.state;\n    return (\n      <QueryBasedParameterInput\n        className={this.props.className}\n        mode={parameter.multiValuesOptions ? \"multiple\" : \"default\"}\n        parameter={parameter}\n        value={value}\n        queryId={queryId}\n        onSelect={this.onSelect}\n        style={{ minWidth: 60 }}\n        {...multipleValuesProps}\n      />\n    );\n  }\n\n  renderNumberInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    const normalize = val => (isNaN(val) ? undefined : val);\n\n    return (\n      <InputNumber\n        className={className}\n        value={normalize(value)}\n        aria-label=\"Parameter number value\"\n        onChange={val => this.onSelect(normalize(val))}\n      />\n    );\n  }\n\n  renderTextInput() {\n    const { className } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Input\n        className={className}\n        value={value}\n        aria-label=\"Parameter text value\"\n        data-test=\"TextParamInput\"\n        onChange={e => this.onSelect(e.target.value)}\n      />\n    );\n  }\n\n  renderInput() {\n    const { type } = this.props;\n    switch (type) {\n      case \"datetime-with-seconds\":\n      case \"datetime-local\":\n      case \"date\":\n        return this.renderDateParameter();\n      case \"datetime-range-with-seconds\":\n      case \"datetime-range\":\n      case \"date-range\":\n        return this.renderDateRangeParameter();\n      case \"enum\":\n        return this.renderEnumInput();\n      case \"query\":\n        return this.renderQueryBasedInput();\n      case \"number\":\n        return this.renderNumberInput();\n      default:\n        return this.renderTextInput();\n    }\n  }\n\n  render() {\n    const { isDirty } = this.state;\n\n    return (\n      <div className=\"parameter-input\" data-dirty={isDirty || null} data-test=\"ParameterValueInput\">\n        {this.renderInput()}\n      </div>\n    );\n  }\n}\n\nexport default ParameterValueInput;\n","import { includes, words, capitalize, clone, isNull } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Divider from \"antd/lib/divider\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst { Option } = Select;\nconst formItemProps = { labelCol: { span: 6 }, wrapperCol: { span: 16 } };\n\nfunction getDefaultTitle(text) {\n  return capitalize(words(text).join(\" \")); // humanize\n}\n\nfunction isTypeDateRange(type) {\n  return /-range/.test(type);\n}\n\nfunction joinExampleList(multiValuesOptions) {\n  const { prefix, suffix } = multiValuesOptions;\n  return [\"value1\", \"value2\", \"value3\"].map(value => `${prefix}${value}${suffix}`).join(\",\");\n}\n\nfunction NameInput({ name, type, onChange, existingNames, setValidation }) {\n  let helpText = \"\";\n  let validateStatus = \"\";\n\n  if (!name) {\n    helpText = \"Choose a keyword for this parameter\";\n    setValidation(false);\n  } else if (includes(existingNames, name)) {\n    helpText = \"Parameter with this name already exists\";\n    setValidation(false);\n    validateStatus = \"error\";\n  } else {\n    if (isTypeDateRange(type)) {\n      helpText = (\n        <React.Fragment>\n          Appears in query as{\" \"}\n          <code style={{ display: \"inline-block\", color: \"inherit\" }}>{`{{${name}.start}} {{${name}.end}}`}</code>\n        </React.Fragment>\n      );\n    }\n    setValidation(true);\n  }\n\n  return (\n    <Form.Item required label=\"Keyword\" help={helpText} validateStatus={validateStatus} {...formItemProps}>\n      <Input onChange={e => onChange(e.target.value)} autoFocus />\n    </Form.Item>\n  );\n}\n\nNameInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  existingNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setValidation: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nfunction EditParameterSettingsDialog(props) {\n  const [param, setParam] = useState(clone(props.parameter));\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [initialQuery, setInitialQuery] = useState();\n\n  const isNew = !props.parameter.name;\n\n  // fetch query by id\n  useEffect(() => {\n    const queryId = props.parameter.queryId;\n    if (queryId) {\n      Query.get({ id: queryId }).then(setInitialQuery);\n    }\n  }, [props.parameter.queryId]);\n\n  function isFulfilled() {\n    // name\n    if (!isNameValid) {\n      return false;\n    }\n\n    // title\n    if (param.title === \"\") {\n      return false;\n    }\n\n    // query\n    if (param.type === \"query\" && !param.queryId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function onConfirm() {\n    // update title to default\n    if (!param.title) {\n      // forced to do this cause param won't update in time for save\n      param.title = getDefaultTitle(param.name);\n      setParam(param);\n    }\n\n    props.dialog.close(param);\n  }\n\n  const paramFormId = useUniqueId(\"paramForm\");\n\n  return (\n    <Modal\n      {...props.dialog.props}\n      title={isNew ? \"Add Parameter\" : param.name}\n      width={600}\n      footer={[\n        <Button key=\"cancel\" onClick={props.dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          htmlType=\"submit\"\n          disabled={!isFulfilled()}\n          type=\"primary\"\n          form={paramFormId}\n          data-test=\"SaveParameterSettings\">\n          {isNew ? \"Add Parameter\" : \"OK\"}\n        </Button>,\n      ]}>\n      <Form layout=\"horizontal\" onFinish={onConfirm} id={paramFormId}>\n        {isNew && (\n          <NameInput\n            name={param.name}\n            onChange={name => setParam({ ...param, name })}\n            setValidation={setIsNameValid}\n            existingNames={props.existingParams}\n            type={param.type}\n          />\n        )}\n        <Form.Item required label=\"Title\" {...formItemProps}>\n          <Input\n            value={isNull(param.title) ? getDefaultTitle(param.name) : param.title}\n            onChange={e => setParam({ ...param, title: e.target.value })}\n            data-test=\"ParameterTitleInput\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Type\" {...formItemProps}>\n          <Select value={param.type} onChange={type => setParam({ ...param, type })} data-test=\"ParameterTypeSelect\">\n            <Option value=\"text\" data-test=\"TextParameterTypeOption\">\n              Text\n            </Option>\n            <Option value=\"number\" data-test=\"NumberParameterTypeOption\">\n              Number\n            </Option>\n            <Option value=\"enum\">Dropdown List</Option>\n            <Option value=\"query\">Query Based Dropdown List</Option>\n            <Option disabled key=\"dv1\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date\" data-test=\"DateParameterTypeOption\">\n              Date\n            </Option>\n            <Option value=\"datetime-local\" data-test=\"DateTimeParameterTypeOption\">\n              Date and Time\n            </Option>\n            <Option value=\"datetime-with-seconds\">Date and Time (with seconds)</Option>\n            <Option disabled key=\"dv2\">\n              <Divider className=\"select-option-divider\" />\n            </Option>\n            <Option value=\"date-range\" data-test=\"DateRangeParameterTypeOption\">\n              Date Range\n            </Option>\n            <Option value=\"datetime-range\">Date and Time Range</Option>\n            <Option value=\"datetime-range-with-seconds\">Date and Time Range (with seconds)</Option>\n          </Select>\n        </Form.Item>\n        {param.type === \"enum\" && (\n          <Form.Item label=\"Values\" help=\"Dropdown list values (newline delimited)\" {...formItemProps}>\n            <Input.TextArea\n              rows={3}\n              value={param.enumOptions}\n              onChange={e => setParam({ ...param, enumOptions: e.target.value })}\n            />\n          </Form.Item>\n        )}\n        {param.type === \"query\" && (\n          <Form.Item label=\"Query\" help=\"Select query to load dropdown values from\" {...formItemProps}>\n            <QuerySelector\n              selectedQuery={initialQuery}\n              onChange={q => setParam({ ...param, queryId: q && q.id })}\n              type=\"select\"\n            />\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && (\n          <Form.Item className=\"m-b-0\" label=\" \" colon={false} {...formItemProps}>\n            <Checkbox\n              defaultChecked={!!param.multiValuesOptions}\n              onChange={e =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: e.target.checked\n                    ? {\n                        prefix: \"\",\n                        suffix: \"\",\n                        separator: \",\",\n                      }\n                    : null,\n                })\n              }\n              data-test=\"AllowMultipleValuesCheckbox\">\n              Allow multiple values\n            </Checkbox>\n          </Form.Item>\n        )}\n        {(param.type === \"enum\" || param.type === \"query\") && param.multiValuesOptions && (\n          <Form.Item\n            label=\"Quotation\"\n            help={\n              <React.Fragment>\n                Placed in query as: <code>{joinExampleList(param.multiValuesOptions)}</code>\n              </React.Fragment>\n            }\n            {...formItemProps}>\n            <Select\n              value={param.multiValuesOptions.prefix}\n              onChange={quoteOption =>\n                setParam({\n                  ...param,\n                  multiValuesOptions: {\n                    ...param.multiValuesOptions,\n                    prefix: quoteOption,\n                    suffix: quoteOption,\n                  },\n                })\n              }\n              data-test=\"QuotationSelect\">\n              <Option value=\"\">None (default)</Option>\n              <Option value=\"'\">Single Quotation Mark</Option>\n              <Option value={'\"'} data-test=\"DoubleQuotationMarkOption\">\n                Double Quotation Mark\n              </Option>\n            </Select>\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n}\n\nEditParameterSettingsDialog.propTypes = {\n  parameter: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  dialog: DialogPropType.isRequired,\n  existingParams: PropTypes.arrayOf(PropTypes.string),\n};\n\nEditParameterSettingsDialog.defaultProps = {\n  existingParams: [],\n};\n\nexport default wrapDialog(EditParameterSettingsDialog);\n","import { size, filter, forEach, extend, isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SortableContainer, SortableElement, DragHandle } from \"@redash/viz/lib/components/sortable\";\nimport location from \"@/services/location\";\nimport { Parameter, createParameter } from \"@/services/parameters\";\nimport ParameterApplyButton from \"@/components/ParameterApplyButton\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EditParameterSettingsDialog from \"./EditParameterSettingsDialog\";\nimport { toHuman } from \"@/lib/utils\";\n\nimport \"./Parameters.less\";\n\nfunction updateUrl(parameters) {\n  const params = extend({}, location.search);\n  parameters.forEach(param => {\n    extend(params, param.toUrlParams());\n  });\n  location.setSearch(params, true);\n}\n\nexport default class Parameters extends React.Component {\n  static propTypes = {\n    parameters: PropTypes.arrayOf(PropTypes.instanceOf(Parameter)),\n    editable: PropTypes.bool,\n    sortable: PropTypes.bool,\n    disableUrlUpdate: PropTypes.bool,\n    onValuesChange: PropTypes.func,\n    onPendingValuesChange: PropTypes.func,\n    onParametersEdit: PropTypes.func,\n    appendSortableToParent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    parameters: [],\n    editable: false,\n    sortable: false,\n    disableUrlUpdate: false,\n    onValuesChange: () => {},\n    onPendingValuesChange: () => {},\n    onParametersEdit: () => {},\n    appendSortableToParent: true,\n  };\n\n  toCamelCase = str => {\n    if (isEmpty(str)) {\n      return \"\";\n    }\n    return str.replace(/\\s+/g, \"\").toLowerCase();\n  };\n\n  constructor(props) {\n    super(props);\n    const { parameters, disableUrlUpdate } = props;\n    this.state = { parameters };\n    if (!disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n    const hideRegex = /hide_filter=([^&]+)/g;\n    const matches = window.location.search.matchAll(hideRegex);\n    this.hideValues = Array.from(matches, match => match[1]);\n  }\n\n  componentDidUpdate = prevProps => {\n    const { parameters, disableUrlUpdate } = this.props;\n    const parametersChanged = prevProps.parameters !== parameters;\n    const disableUrlUpdateChanged = prevProps.disableUrlUpdate !== disableUrlUpdate;\n    if (parametersChanged) {\n      this.setState({ parameters });\n    }\n    if ((parametersChanged || disableUrlUpdateChanged) && !disableUrlUpdate) {\n      updateUrl(parameters);\n    }\n  };\n\n  handleKeyDown = e => {\n    // Cmd/Ctrl/Alt + Enter\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey || e.altKey)) {\n      e.stopPropagation();\n      this.applyChanges();\n    }\n  };\n\n  setPendingValue = (param, value, isDirty) => {\n    const { onPendingValuesChange } = this.props;\n    this.setState(({ parameters }) => {\n      if (isDirty) {\n        param.setPendingValue(value);\n      } else {\n        param.clearPendingValue();\n      }\n      onPendingValuesChange();\n      return { parameters };\n    });\n  };\n\n  moveParameter = ({ oldIndex, newIndex }) => {\n    const { onParametersEdit } = this.props;\n    if (oldIndex !== newIndex) {\n      this.setState(({ parameters }) => {\n        parameters.splice(newIndex, 0, parameters.splice(oldIndex, 1)[0]);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    }\n  };\n\n  applyChanges = () => {\n    const { onValuesChange, disableUrlUpdate } = this.props;\n    this.setState(({ parameters }) => {\n      const parametersWithPendingValues = parameters.filter(p => p.hasPendingValue);\n      forEach(parameters, p => p.applyPendingValue());\n      if (!disableUrlUpdate) {\n        updateUrl(parameters);\n      }\n      onValuesChange(parametersWithPendingValues);\n      return { parameters };\n    });\n  };\n\n  showParameterSettings = (parameter, index) => {\n    const { onParametersEdit } = this.props;\n    EditParameterSettingsDialog.showModal({ parameter }).onClose(updated => {\n      this.setState(({ parameters }) => {\n        const updatedParameter = extend(parameter, updated);\n        parameters[index] = createParameter(updatedParameter, updatedParameter.parentQueryId);\n        onParametersEdit(parameters);\n        return { parameters };\n      });\n    });\n  };\n\n  renderParameter(param, index) {\n    if (this.hideValues.some(value => this.toCamelCase(value) === this.toCamelCase(param.name))) {\n      return null;\n    }\n    const { editable } = this.props;\n    if (param.hidden) {\n      return null;\n    }\n    return (\n      <div key={param.name} className=\"di-block\" data-test={`ParameterName-${param.name}`}>\n        <div className=\"parameter-heading\">\n          <label>{param.title || toHuman(param.name)}</label>\n          {editable && (\n            <PlainButton\n              className=\"btn btn-default btn-xs m-l-5\"\n              aria-label=\"Edit\"\n              onClick={() => this.showParameterSettings(param, index)}\n              data-test={`ParameterSettings-${param.name}`}\n              type=\"button\">\n              <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n            </PlainButton>\n          )}\n        </div>\n\n        <ParameterValueInput\n          type={param.type}\n          value={param.normalizedValue}\n          parameter={param}\n          enumOptions={param.enumOptions}\n          queryId={param.queryId}\n          onSelect={(value, isDirty) => this.setPendingValue(param, value, isDirty)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { parameters } = this.state;\n    const { sortable, appendSortableToParent } = this.props;\n    const dirtyParamCount = size(filter(parameters, \"hasPendingValue\"));\n    return (\n      <SortableContainer\n        disabled={!sortable}\n        axis=\"xy\"\n        useDragHandle\n        lockToContainerEdges\n        helperClass=\"parameter-dragged\"\n        helperContainer={containerEl => (appendSortableToParent ? containerEl : document.body)}\n        updateBeforeSortStart={this.onBeforeSortStart}\n        onSortEnd={this.moveParameter}\n        containerProps={{\n          className: \"parameter-container\",\n          onKeyDown: dirtyParamCount ? this.handleKeyDown : null,\n        }}>\n        {parameters &&\n          parameters.map((param, index) => (\n            <SortableElement key={param.name} index={index}>\n              <div\n                className=\"parameter-block\"\n                data-editable={sortable || null}\n                data-test={`ParameterBlock-${param.name}`}>\n                {sortable && <DragHandle data-test={`DragHandle-${param.name}`} />}\n                {this.renderParameter(param, index)}\n              </div>\n            </SortableElement>\n          ))}\n        <ParameterApplyButton onClick={this.applyChanges} paramCount={dirtyParamCount} />\n      </SortableContainer>\n    );\n  }\n}\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { Moment } from \"@/components/proptypes\";\n\nexport default function Timer({ from }) {\n  const startTime = useMemo(() => moment(from).valueOf(), [from]);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    function update() {\n      const diff = moment.now() - startTime;\n      const format = diff > 1000 * 60 * 60 ? \"HH:mm:ss\" : \"mm:ss\"; // no HH under an hour\n      setValue(moment.utc(diff).format(format));\n    }\n    update();\n\n    const timer = setInterval(update, 1000);\n    return () => clearInterval(timer);\n  }, [startTime]);\n\n  return <span className=\"rd-timer\">{value}</span>;\n}\n\nTimer.propTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date), Moment]),\n};\n\nTimer.defaultProps = {\n  from: null,\n};\n","import React from \"react\";\nimport { VisualizationType, registeredVisualizations } from \"@redash/viz/lib\";\n\nimport \"./VisualizationName.less\";\n\nfunction VisualizationName({ visualization }) {\n  const config = registeredVisualizations[visualization.type];\n  return (\n    <span className=\"visualization-name\">\n      {config && visualization.name !== config.name ? visualization.name : null}\n    </span>\n  );\n}\n\nVisualizationName.propTypes = {\n  visualization: VisualizationType.isRequired,\n};\n\nexport default VisualizationName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport Link from \"@/components/Link\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nimport \"./QueryLink.less\";\n\nfunction QueryLink({ query, visualization, readOnly }) {\n  const getUrl = () => {\n    let hash = null;\n    if (visualization) {\n      if (visualization.type === \"TABLE\") {\n        // link to hard-coded table tab instead of the (hidden) visualization tab\n        hash = \"table\";\n      } else {\n        hash = visualization.id;\n      }\n    }\n\n    return query.getUrl(false, hash);\n  };\n\n  const QueryLinkWrapper = props => (readOnly ? <span {...props} /> : <Link href={getUrl()} {...props} />);\n\n  return (\n    <QueryLinkWrapper className=\"query-link\">\n      <VisualizationName visualization={visualization} /> <span>{query.name}</span>\n    </QueryLinkWrapper>\n  );\n}\n\nQueryLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  readOnly: PropTypes.bool,\n};\n\nQueryLink.defaultProps = {\n  visualization: null,\n  readOnly: false,\n};\n\nexport default QueryLink;\n","import { isArray, indexOf, get, map, includes, every, some, toNumber } from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport { formatColumnValue } from \"@/lib/utils\";\n\nconst ALL_VALUES = \"###Redash::Filters::SelectAll###\";\nconst NONE_VALUES = \"###Redash::Filters::Clear###\";\n\nexport const FilterType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  friendlyName: PropTypes.string.isRequired,\n  multiple: PropTypes.bool,\n  current: PropTypes.oneOfType([PropTypes.any, PropTypes.arrayOf(PropTypes.any)]),\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n});\n\nexport const FiltersType = PropTypes.arrayOf(FilterType);\n\nfunction createFilterChangeHandler(filters, onChange) {\n  return (filter, values) => {\n    if (isArray(values)) {\n      values = map(values, value => filter.values[toNumber(value.key)] || value.key);\n    } else {\n      const _values = filter.values[toNumber(values.key)];\n      values = _values !== undefined ? _values : values.key;\n    }\n\n    if (filter.multiple && includes(values, ALL_VALUES)) {\n      values = [...filter.values];\n    }\n    if (filter.multiple && includes(values, NONE_VALUES)) {\n      values = [];\n    }\n    filters = map(filters, f => (f.name === filter.name ? { ...filter, current: values } : f));\n    onChange(filters);\n  };\n}\n\nexport function filterData(rows, filters = []) {\n  if (!isArray(rows)) {\n    return [];\n  }\n\n  let result = rows;\n\n  if (isArray(filters) && filters.length > 0) {\n    // \"every\" field's value should match \"some\" of corresponding filter's values\n    result = result.filter(row =>\n      every(filters, filter => {\n        const rowValue = row[filter.name];\n        const filterValues = isArray(filter.current) ? filter.current : [filter.current];\n        return some(filterValues, filterValue => {\n          if (moment.isMoment(rowValue)) {\n            return rowValue.isSame(filterValue);\n          }\n          // We compare with either the value or the String representation of the value,\n          // because Select2 casts true/false to \"true\"/\"false\".\n          return filterValue === rowValue || String(rowValue) === filterValue;\n        });\n      })\n    );\n  }\n\n  return result;\n}\n\nfunction Filters({ filters, onChange }) {\n  if (filters.length === 0) {\n    return null;\n  }\n\n  onChange = createFilterChangeHandler(filters, onChange);\n\n  return (\n    <div className=\"filters-wrapper\" data-test=\"Filters\">\n      <div className=\"container bg-white\">\n        <div className=\"row\">\n          {map(filters, filter => {\n            const options = map(filter.values, (value, index) => (\n              <Select.Option key={index}>{formatColumnValue(value, get(filter, \"column.type\"))}</Select.Option>\n            ));\n\n            return (\n              <div\n                key={filter.name}\n                className=\"col-sm-6 p-l-0 filter-container\"\n                data-test={`FilterName-${filter.name}`}>\n                <label>{filter.friendlyName}</label>\n                {options.length === 0 && <Select className=\"w-100\" disabled value=\"No values\" />}\n                {options.length > 0 && (\n                  <Select\n                    labelInValue\n                    className=\"w-100\"\n                    mode={filter.multiple ? \"multiple\" : \"default\"}\n                    value={\n                      isArray(filter.current)\n                        ? map(filter.current, value => ({\n                            key: `${indexOf(filter.values, value)}`,\n                            label: formatColumnValue(value),\n                          }))\n                        : { key: `${indexOf(filter.values, filter.current)}`, label: formatColumnValue(filter.current) }\n                    }\n                    allowClear={filter.multiple}\n                    optionFilterProp=\"children\"\n                    showSearch\n                    maxTagCount={3}\n                    maxTagTextLength={10}\n                    maxTagPlaceholder={num => `+${num.length} more`}\n                    onChange={values => onChange(filter, values)}>\n                    {!filter.multiple && options}\n                    {filter.multiple && [\n                      <Select.Option key={NONE_VALUES} data-test=\"ClearOption\">\n                        <i className=\"fa fa-square-o m-r-5\" aria-hidden=\"true\" />\n                        Clear\n                      </Select.Option>,\n                      <Select.Option key={ALL_VALUES} data-test=\"SelectAllOption\">\n                        <i className=\"fa fa-check-square-o m-r-5\" aria-hidden=\"true\" />\n                        Select All\n                      </Select.Option>,\n                      <Select.OptGroup key=\"Values\" title=\"Values\">\n                        {options}\n                      </Select.OptGroup>,\n                    ]}\n                  </Select>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  filters: FiltersType.isRequired,\n  onChange: PropTypes.func, // (name, value) => void\n};\n\nFilters.defaultProps = {\n  onChange: () => {},\n};\n\nexport default Filters;\n","import { useMemo } from \"react\";\nimport { get, invoke } from \"lodash\";\n\nfunction getQueryResultData(queryResult, queryResultStatus = null) {\n  return {\n    status: queryResultStatus || invoke(queryResult, \"getStatus\") || null,\n    columns: invoke(queryResult, \"getColumns\") || [],\n    rows: invoke(queryResult, \"getData\") || [],\n    filters: invoke(queryResult, \"getFilters\") || [],\n    updatedAt: invoke(queryResult, \"getUpdatedAt\") || null,\n    retrievedAt: get(queryResult, \"query_result.retrieved_at\", null),\n    truncated: invoke(queryResult, \"getTruncated\") || null,\n    log: invoke(queryResult, \"getLog\") || [],\n    error: invoke(queryResult, \"getError\") || null,\n    runtime: invoke(queryResult, \"getRuntime\") || null,\n    metadata: get(queryResult, \"query_result.data.metadata\", {}),\n  };\n}\n\nexport default function useQueryResultData(queryResult) {\n  // make sure it re-executes when queryResult status changes\n  const queryResultStatus = invoke(queryResult, \"getStatus\");\n  return useMemo(() => getQueryResultData(queryResult, queryResultStatus), [queryResult, queryResultStatus]);\n}\n","import { isFunction, noop } from \"lodash\";\nimport { useRef, useCallback } from \"react\";\n\n// This hook wraps a potentially changeable function object and always returns the same\n// function so it's safe to use it with other hooks: wrapper function stays the same,\n// but will always call a latest wrapped function.\n// A quick note regarding `react-hooks/exhaustive-deps`: since wrapper function doesn't\n// change, it's safe to use it as a dependency, it will never trigger other hooks.\nexport default function useImmutableCallback(callback) {\n  const callbackRef = useRef();\n  callbackRef.current = isFunction(callback) ? callback : noop;\n\n  return useCallback((...args) => callbackRef.current(...args), []);\n}\n","import React from \"react\";\nimport { pick } from \"lodash\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport Link from \"@/components/Link\";\nimport { Renderer as VisRenderer, Editor as VisEditor, updateVisualizationsSettings } from \"@redash/viz/lib\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport countriesDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/countries.geo.json\";\nimport usaDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/usa-albers.geo.json\";\nimport subdivJapanDataUrl from \"@redash/viz/lib/visualizations/choropleth/maps/japan.prefectures.geo.json\";\n\nfunction wrapComponentWithSettings(WrappedComponent) {\n  return function VisualizationComponent(props) {\n    updateVisualizationsSettings({\n      HelpTriggerComponent: HelpTrigger,\n      LinkComponent: Link,\n      choroplethAvailableMaps: {\n        countries: {\n          name: \"Countries\",\n          url: countriesDataUrl,\n          fieldNames: {\n            name: \"Short name\",\n            name_long: \"Full name\",\n            abbrev: \"Abbreviated name\",\n            iso_a2: \"ISO code (2 letters)\",\n            iso_a3: \"ISO code (3 letters)\",\n            iso_n3: \"ISO code (3 digits)\",\n          },\n        },\n        usa: {\n          name: \"USA\",\n          url: usaDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            ns_code: \"National Standard ANSI Code (8-character)\",\n            geoid: \"Geographic ID\",\n            usps_abbrev: \"USPS Abbreviation\",\n            fips_code: \"FIPS Code (2-character)\",\n          },\n        },\n        subdiv_japan: {\n          name: \"Japan/Prefectures\",\n          url: subdivJapanDataUrl,\n          fieldNames: {\n            name: \"Name\",\n            name_alt: \"Name (alternative)\",\n            name_local: \"Name (local)\",\n            iso_3166_2: \"ISO-3166-2\",\n            postal: \"Postal Code\",\n            type: \"Type\",\n            type_en: \"Type (EN)\",\n            region: \"Region\",\n            region_code: \"Region Code\",\n          },\n        },\n      },\n      ...pick(clientConfig, [\n        \"dateFormat\",\n        \"dateTimeFormat\",\n        \"integerFormat\",\n        \"floatFormat\",\n        \"booleanValues\",\n        \"tableCellMaxJSONSize\",\n        \"allowCustomJSVisualizations\",\n        \"hidePlotlyModeBar\",\n      ]),\n    });\n\n    return <WrappedComponent {...props} />;\n  };\n}\n\nexport const Renderer = wrapComponentWithSettings(VisRenderer);\nexport const Editor = wrapComponentWithSettings(VisEditor);\n","import { isEqual, map, find, fromPairs } from \"lodash\";\nimport React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport Filters, { FiltersType, filterData } from \"@/components/Filters\";\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport { Renderer } from \"@/components/visualizations/visualizationComponents\";\n\nfunction combineFilters(localFilters, globalFilters) {\n  // tiny optimization - to avoid unnecessary updates\n  if (localFilters.length === 0 || globalFilters.length === 0) {\n    return localFilters;\n  }\n\n  return map(localFilters, localFilter => {\n    const globalFilter = find(globalFilters, f => f.name === localFilter.name);\n    if (globalFilter) {\n      return {\n        ...localFilter,\n        current: globalFilter.current,\n      };\n    }\n    return localFilter;\n  });\n}\n\nfunction areFiltersEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  a = fromPairs(map(a, item => [item.name, item]));\n  b = fromPairs(map(b, item => [item.name, item]));\n\n  return isEqual(a, b);\n}\n\nexport default function VisualizationRenderer(props) {\n  const data = useQueryResultData(props.queryResult);\n  const [filters, setFilters] = useState(() => combineFilters(data.filters, props.filters)); // lazy initialization\n  const filtersRef = useRef();\n  filtersRef.current = filters;\n\n  const handleFiltersChange = useImmutableCallback(newFilters => {\n    if (!areFiltersEqual(newFilters, filters)) {\n      setFilters(newFilters);\n      props.onFiltersChange(newFilters);\n    }\n  });\n\n  // Reset local filters when query results updated\n  useEffect(() => {\n    handleFiltersChange(combineFilters(data.filters, props.filters));\n  }, [data.filters, props.filters, handleFiltersChange]);\n\n  // Update local filters when global filters changed.\n  // For correct behavior need to watch only `props.filters` here,\n  // therefore using ref to access current local filters\n  useEffect(() => {\n    handleFiltersChange(combineFilters(filtersRef.current, props.filters));\n  }, [props.filters, handleFiltersChange]);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const { showFilters, visualization } = props;\n\n  let options = { ...visualization.options };\n\n  // define pagination size based on context for Table visualization\n  if (visualization.type === \"TABLE\") {\n    options.paginationSize = props.context === \"widget\" ? \"small\" : \"default\";\n  }\n\n  return (\n    <Renderer\n      key={`visualization${visualization.id}`}\n      type={visualization.type}\n      options={options}\n      data={filteredData}\n      visualizationName={visualization.name}\n      addonBefore={showFilters && <Filters filters={filters} onChange={handleFiltersChange} />}\n    />\n  );\n}\n\nVisualizationRenderer.propTypes = {\n  visualization: VisualizationType.isRequired,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  showFilters: PropTypes.bool,\n  filters: FiltersType,\n  onFiltersChange: PropTypes.func,\n  context: PropTypes.oneOf([\"query\", \"widget\"]).isRequired,\n};\n\nVisualizationRenderer.defaultProps = {\n  showFilters: true,\n  filters: [],\n  onFiltersChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { FiltersType } from \"@/components/Filters\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\n\nfunction ExpandedWidgetDialog({ dialog, widget, filters }) {\n  return (\n    <Modal\n      {...dialog.props}\n      title={\n        <>\n          <VisualizationName visualization={widget.visualization} /> <span>{widget.getQuery().name}</span>\n        </>\n      }\n      width=\"95%\"\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <VisualizationRenderer\n        visualization={widget.visualization}\n        queryResult={widget.getQueryResult()}\n        filters={filters}\n        context=\"widget\"\n      />\n    </Modal>\n  );\n}\n\nExpandedWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  filters: FiltersType,\n};\n\nExpandedWidgetDialog.defaultProps = {\n  filters: [],\n};\n\nexport default wrapDialog(ExpandedWidgetDialog);\n","/* eslint-disable react/no-multi-comp */\n\nimport { isString, extend, each, has, map, includes, findIndex, find, fromPairs, clone, isEmpty } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Select from \"antd/lib/select\";\nimport Table from \"antd/lib/table\";\nimport Popover from \"antd/lib/popover\";\nimport Button from \"antd/lib/button\";\nimport Tag from \"antd/lib/tag\";\nimport Input from \"antd/lib/input\";\nimport Radio from \"antd/lib/radio\";\nimport Form from \"antd/lib/form\";\nimport Tooltip from \"@/components/Tooltip\";\nimport ParameterValueInput from \"@/components/ParameterValueInput\";\nimport { ParameterMappingType } from \"@/services/widget\";\nimport { Parameter, cloneParameter } from \"@/services/parameters\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nimport QuestionCircleFilledIcon from \"@ant-design/icons/QuestionCircleFilled\";\nimport EditOutlinedIcon from \"@ant-design/icons/EditOutlined\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport CheckOutlinedIcon from \"@ant-design/icons/CheckOutlined\";\n\nimport \"./ParameterMappingInput.less\";\n\nexport const MappingType = {\n  DashboardAddNew: \"dashboard-add-new\",\n  DashboardMapToExisting: \"dashboard-map-to-existing\",\n  WidgetLevel: \"widget-level\",\n  StaticValue: \"static-value\",\n};\n\nexport function parameterMappingsToEditableMappings(mappings, parameters, existingParameterNames = []) {\n  return map(mappings, mapping => {\n    const result = extend({}, mapping);\n    const alreadyExists = includes(existingParameterNames, mapping.mapTo);\n    result.param = find(parameters, p => p.name === mapping.name);\n    switch (mapping.type) {\n      case ParameterMappingType.DashboardLevel:\n        result.type = alreadyExists ? MappingType.DashboardMapToExisting : MappingType.DashboardAddNew;\n        result.value = null;\n        break;\n      case ParameterMappingType.StaticValue:\n        result.type = MappingType.StaticValue;\n        result.param = cloneParameter(result.param);\n        result.param.setValue(result.value);\n        break;\n      case ParameterMappingType.WidgetLevel:\n        result.type = MappingType.WidgetLevel;\n        result.value = null;\n        break;\n      // no default\n    }\n    return result;\n  });\n}\n\nexport function editableMappingsToParameterMappings(mappings) {\n  return fromPairs(\n    map(\n      // convert to map\n      mappings,\n      mapping => {\n        const result = extend({}, mapping);\n        switch (mapping.type) {\n          case MappingType.DashboardAddNew:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.DashboardMapToExisting:\n            result.type = ParameterMappingType.DashboardLevel;\n            result.value = null;\n            break;\n          case MappingType.StaticValue:\n            result.type = ParameterMappingType.StaticValue;\n            result.param = cloneParameter(mapping.param);\n            result.param.setValue(result.value);\n            result.value = result.param.value;\n            break;\n          case MappingType.WidgetLevel:\n            result.type = ParameterMappingType.WidgetLevel;\n            result.value = null;\n            break;\n          // no default\n        }\n        delete result.param;\n        return [result.name, result];\n      }\n    )\n  );\n}\n\nexport function synchronizeWidgetTitles(sourceMappings, widgets) {\n  const affectedWidgets = [];\n\n  each(sourceMappings, sourceMapping => {\n    if (sourceMapping.type === ParameterMappingType.DashboardLevel) {\n      each(widgets, widget => {\n        const widgetMappings = widget.options.parameterMappings;\n        each(widgetMappings, widgetMapping => {\n          // check if mapped to the same dashboard-level parameter\n          if (\n            widgetMapping.type === ParameterMappingType.DashboardLevel &&\n            widgetMapping.mapTo === sourceMapping.mapTo\n          ) {\n            // dirty check - update only when needed\n            if (widgetMapping.title !== sourceMapping.title) {\n              widgetMapping.title = sourceMapping.title;\n              affectedWidgets.push(widget);\n            }\n          }\n        });\n      });\n    }\n  });\n\n  return affectedWidgets;\n}\n\nexport class ParameterMappingInput extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func,\n    inputError: PropTypes.string,\n  };\n\n  static defaultProps = {\n    mapping: {},\n    existingParamNames: [],\n    onChange: () => {},\n    inputError: null,\n  };\n\n  formItemProps = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n    className: \"form-item\",\n  };\n\n  updateSourceType = type => {\n    let {\n      mapping: { mapTo },\n    } = this.props;\n    const { existingParamNames } = this.props;\n\n    // if mapped name doesn't already exists\n    // default to first select option\n    if (type === MappingType.DashboardMapToExisting && !includes(existingParamNames, mapTo)) {\n      mapTo = existingParamNames[0];\n    }\n\n    this.updateParamMapping({ type, mapTo });\n  };\n\n  updateParamMapping = update => {\n    const { onChange, mapping } = this.props;\n    const newMapping = extend({}, mapping, update);\n    if (newMapping.value !== mapping.value) {\n      newMapping.param = cloneParameter(newMapping.param);\n      newMapping.param.setValue(newMapping.value);\n    }\n    if (has(update, \"type\")) {\n      if (update.type === MappingType.StaticValue) {\n        newMapping.value = newMapping.param.value;\n      } else {\n        newMapping.value = null;\n      }\n    }\n    onChange(newMapping);\n  };\n\n  renderMappingTypeSelector() {\n    const noExisting = isEmpty(this.props.existingParamNames);\n    return (\n      <Radio.Group value={this.props.mapping.type} onChange={e => this.updateSourceType(e.target.value)}>\n        <Radio className=\"radio\" value={MappingType.DashboardAddNew} data-test=\"NewDashboardParameterOption\">\n          New dashboard parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.DashboardMapToExisting} disabled={noExisting}>\n          Existing dashboard parameter{\" \"}\n          {noExisting ? (\n            <Tooltip title=\"There are no dashboard parameters corresponding to this data type\">\n              <QuestionCircleFilledIcon />\n            </Tooltip>\n          ) : null}\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.WidgetLevel} data-test=\"WidgetParameterOption\">\n          Widget parameter\n        </Radio>\n        <Radio className=\"radio\" value={MappingType.StaticValue} data-test=\"StaticValueOption\">\n          Static value\n        </Radio>\n      </Radio.Group>\n    );\n  }\n\n  renderDashboardAddNew() {\n    const {\n      mapping: { mapTo },\n    } = this.props;\n    return (\n      <Input\n        value={mapTo}\n        aria-label=\"Parameter name (key)\"\n        onChange={e => this.updateParamMapping({ mapTo: e.target.value })}\n      />\n    );\n  }\n\n  renderDashboardMapToExisting() {\n    const { mapping, existingParamNames } = this.props;\n    const options = map(existingParamNames, paramName => ({ label: paramName, value: paramName }));\n\n    return <Select value={mapping.mapTo} onChange={mapTo => this.updateParamMapping({ mapTo })} options={options} />;\n  }\n\n  renderStaticValue() {\n    const { mapping } = this.props;\n    return (\n      <ParameterValueInput\n        type={mapping.param.type}\n        value={mapping.param.normalizedValue}\n        enumOptions={mapping.param.enumOptions}\n        queryId={mapping.param.queryId}\n        parameter={mapping.param}\n        onSelect={value => this.updateParamMapping({ value })}\n      />\n    );\n  }\n\n  renderInputBlock() {\n    const { mapping } = this.props;\n    switch (mapping.type) {\n      case MappingType.DashboardAddNew:\n        return [\"Key\", \"Enter a new parameter keyword\", this.renderDashboardAddNew()];\n      case MappingType.DashboardMapToExisting:\n        return [\"Key\", \"Select from a list of existing parameters\", this.renderDashboardMapToExisting()];\n      case MappingType.StaticValue:\n        return [\"Value\", null, this.renderStaticValue()];\n      default:\n        return [];\n    }\n  }\n\n  render() {\n    const { inputError } = this.props;\n    const [label, help, input] = this.renderInputBlock();\n\n    return (\n      <Form layout=\"horizontal\">\n        <Form.Item label=\"Source\" {...this.formItemProps}>\n          {this.renderMappingTypeSelector()}\n        </Form.Item>\n        <Form.Item\n          style={{ height: 60, visibility: input ? \"visible\" : \"hidden\" }}\n          label={label}\n          {...this.formItemProps}\n          validateStatus={inputError ? \"error\" : \"\"}\n          help={inputError || help} // empty space so line doesn't collapse\n        >\n          {input}\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass MappingEditor extends React.Component {\n  static propTypes = {\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    existingParamNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      mapping: clone(this.props.mapping),\n      inputError: null,\n    };\n  }\n\n  onVisibleChange = visible => {\n    if (visible) this.show();\n    else this.hide();\n  };\n\n  onChange = mapping => {\n    let inputError = null;\n\n    if (mapping.type === MappingType.DashboardAddNew) {\n      if (isEmpty(mapping.mapTo)) {\n        inputError = \"Keyword must have a value\";\n      } else if (includes(this.props.existingParamNames, mapping.mapTo)) {\n        inputError = \"A parameter with this name already exists\";\n      }\n    }\n\n    this.setState({ mapping, inputError });\n  };\n\n  save = () => {\n    this.props.onChange(this.props.mapping, this.state.mapping);\n    this.hide();\n  };\n\n  show = () => {\n    this.setState({\n      visible: true,\n      mapping: clone(this.props.mapping), // restore original state\n    });\n  };\n\n  hide = () => {\n    this.setState({ visible: false });\n  };\n\n  renderContent() {\n    const { mapping, inputError } = this.state;\n\n    return (\n      <div className=\"parameter-mapping-editor\" data-test=\"EditParamMappingPopover\">\n        <header>\n          Edit Source and Value <HelpTrigger type=\"VALUE_SOURCE_OPTIONS\" />\n        </header>\n        <ParameterMappingInput\n          mapping={mapping}\n          existingParamNames={this.props.existingParamNames}\n          onChange={this.onChange}\n          inputError={inputError}\n        />\n        <footer>\n          <Button onClick={this.hide}>Cancel</Button>\n          <Button onClick={this.save} disabled={!!inputError} type=\"primary\">\n            OK\n          </Button>\n        </footer>\n      </div>\n    );\n  }\n\n  render() {\n    const { visible, mapping } = this.state;\n    return (\n      <Popover\n        placement=\"left\"\n        trigger=\"click\"\n        content={this.renderContent()}\n        visible={visible}\n        onVisibleChange={this.onVisibleChange}>\n        <Button size=\"small\" type=\"dashed\" data-test={`EditParamMappingButton-${mapping.param.name}`}>\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nclass TitleEditor extends React.Component {\n  static propTypes = {\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    mapping: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    onChange: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    existingParams: [],\n  };\n\n  state = {\n    showPopup: false,\n    title: \"\", // will be set on editing\n  };\n\n  onPopupVisibleChange = showPopup => {\n    this.setState({\n      showPopup,\n      title: showPopup ? this.getMappingTitle() : \"\",\n    });\n  };\n\n  onEditingTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  getMappingTitle() {\n    let { mapping } = this.props;\n\n    if (isString(mapping.title) && mapping.title !== \"\") {\n      return mapping.title;\n    }\n\n    // if mapped to dashboard, find source param and return it's title\n    if (mapping.type === MappingType.DashboardMapToExisting) {\n      const source = find(this.props.existingParams, { name: mapping.mapTo });\n      if (source) {\n        mapping = source;\n      }\n    }\n\n    return mapping.title || mapping.param.title;\n  }\n\n  save = () => {\n    const newMapping = extend({}, this.props.mapping, { title: this.state.title });\n    this.props.onChange(newMapping);\n    this.hide();\n  };\n\n  hide = () => {\n    this.setState({ showPopup: false });\n  };\n\n  renderPopover() {\n    const {\n      param: { title: paramTitle },\n    } = this.props.mapping;\n\n    return (\n      <div className=\"parameter-mapping-title-editor\">\n        <Input\n          size=\"small\"\n          value={this.state.title}\n          placeholder={paramTitle}\n          aria-label=\"Edit parameter title\"\n          onChange={this.onEditingTitleChange}\n          onPressEnter={this.save}\n          maxLength={100}\n          autoFocus\n        />\n        <Button size=\"small\" type=\"dashed\" onClick={this.hide}>\n          <CloseOutlinedIcon />\n        </Button>\n        <Button size=\"small\" type=\"dashed\" onClick={this.save}>\n          <CheckOutlinedIcon />\n        </Button>\n      </div>\n    );\n  }\n\n  renderEditButton() {\n    const { mapping } = this.props;\n    if (mapping.type === MappingType.StaticValue) {\n      return (\n        <Tooltip placement=\"right\" title=\"Titles for static values don't appear in widgets\">\n          {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n          <span tabIndex={0}>\n            <i className=\"fa fa-eye-slash\" aria-hidden=\"true\" />\n          </span>\n        </Tooltip>\n      );\n    }\n    return (\n      <Popover\n        placement=\"right\"\n        trigger=\"click\"\n        content={this.renderPopover()}\n        visible={this.state.showPopup}\n        onVisibleChange={this.onPopupVisibleChange}>\n        <Button size=\"small\" type=\"dashed\">\n          <EditOutlinedIcon />\n        </Button>\n      </Popover>\n    );\n  }\n\n  render() {\n    const { mapping } = this.props;\n    // static value are non-editable hence disabled\n    const disabled = mapping.type === MappingType.StaticValue;\n\n    return (\n      <div className={classNames(\"parameter-mapping-title\", { disabled })}>\n        <span className=\"text\">{this.getMappingTitle()}</span>\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n}\n\nexport class ParameterMappingListInput extends React.Component {\n  static propTypes = {\n    mappings: PropTypes.arrayOf(PropTypes.object),\n    existingParams: PropTypes.arrayOf(PropTypes.object),\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    mappings: [],\n    existingParams: [],\n    onChange: () => {},\n  };\n\n  static getStringValue(value) {\n    // null\n    if (!value) {\n      return \"\";\n    }\n\n    // range\n    if (value instanceof Object && \"start\" in value && \"end\" in value) {\n      return `${value.start} ~ ${value.end}`;\n    }\n\n    // just to be safe, array or object\n    if (typeof value === \"object\") {\n      return map(value, v => this.getStringValue(v)).join(\", \");\n    }\n\n    // rest\n    return value.toString();\n  }\n\n  static getDefaultValue(mapping, existingParams) {\n    const { type, mapTo, name } = mapping;\n    let { param } = mapping;\n\n    // if mapped to another param, swap 'em\n    if (type === MappingType.DashboardMapToExisting && mapTo !== name) {\n      const mappedTo = find(existingParams, { name: mapTo });\n      if (mappedTo) {\n        // just being safe\n        param = mappedTo;\n      }\n\n      // static type is different since it's fed param.normalizedValue\n    } else if (type === MappingType.StaticValue) {\n      param = cloneParameter(param).setValue(mapping.value);\n    }\n\n    let value = Parameter.getExecutionValue(param);\n\n    // in case of dynamic value display the name instead of value\n    if (param.hasDynamicValue) {\n      value = param.normalizedValue.name;\n    }\n\n    return this.getStringValue(value);\n  }\n\n  static getSourceTypeLabel({ type, mapTo }) {\n    switch (type) {\n      case MappingType.DashboardAddNew:\n      case MappingType.DashboardMapToExisting:\n        return (\n          <Fragment>\n            Dashboard <Tag className=\"tag\">{mapTo}</Tag>\n          </Fragment>\n        );\n      case MappingType.WidgetLevel:\n        return \"Widget parameter\";\n      case MappingType.StaticValue:\n        return \"Static value\";\n      default:\n        return \"\"; // won't happen (typescript-ftw)\n    }\n  }\n\n  updateParamMapping(oldMapping, newMapping) {\n    const mappings = [...this.props.mappings];\n    const index = findIndex(mappings, oldMapping);\n    if (index >= 0) {\n      // This should be the only possible case, but need to handle `else` too\n      mappings[index] = newMapping;\n    } else {\n      mappings.push(newMapping);\n    }\n    this.props.onChange(mappings);\n  }\n\n  render() {\n    const { existingParams } = this.props; // eslint-disable-line react/prop-types\n    const dataSource = this.props.mappings.map(mapping => ({ mapping }));\n\n    return (\n      <div className=\"parameters-mapping-list\">\n        <Table dataSource={dataSource} size=\"middle\" pagination={false} rowKey={(record, idx) => `row${idx}`}>\n          <Table.Column\n            title=\"Title\"\n            dataIndex=\"mapping\"\n            key=\"title\"\n            render={mapping => (\n              <TitleEditor\n                existingParams={existingParams}\n                mapping={mapping}\n                onChange={newMapping => this.updateParamMapping(mapping, newMapping)}\n              />\n            )}\n          />\n          <Table.Column\n            title=\"Keyword\"\n            dataIndex=\"mapping\"\n            key=\"keyword\"\n            className=\"keyword\"\n            render={mapping => <code>{`{{ ${mapping.name} }}`}</code>}\n          />\n          <Table.Column\n            title=\"Default Value\"\n            dataIndex=\"mapping\"\n            key=\"value\"\n            render={mapping => this.constructor.getDefaultValue(mapping, this.props.existingParams)}\n          />\n          <Table.Column\n            title=\"Value Source\"\n            dataIndex=\"mapping\"\n            key=\"source\"\n            render={mapping => {\n              const existingParamsNames = existingParams\n                .filter(({ type }) => type === mapping.param.type) // exclude mismatching param types\n                .map(({ name }) => name); // keep names only\n\n              return (\n                <Fragment>\n                  {this.constructor.getSourceTypeLabel(mapping)}{\" \"}\n                  <MappingEditor\n                    mapping={mapping}\n                    existingParamNames={existingParamsNames}\n                    onChange={(oldMapping, newMapping) => this.updateParamMapping(oldMapping, newMapping)}\n                  />\n                </Fragment>\n              );\n            }}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n","import { isMatch, map, find, sortBy } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport {\n  MappingType,\n  ParameterMappingListInput,\n  parameterMappingsToEditableMappings,\n  editableMappingsToParameterMappings,\n  synchronizeWidgetTitles,\n} from \"@/components/ParameterMappingInput\";\nimport notification from \"@/services/notification\";\n\nexport function getParamValuesSnapshot(mappings, dashboardParameters) {\n  return map(\n    sortBy(mappings, m => m.name),\n    m => {\n      let param;\n      switch (m.type) {\n        case MappingType.StaticValue:\n          return [m.name, m.value];\n        case MappingType.WidgetLevel:\n          return [m.name, m.param.value];\n        case MappingType.DashboardAddNew:\n        case MappingType.DashboardMapToExisting:\n          param = find(dashboardParameters, p => p.name === m.mapTo);\n          return [m.name, param ? param.value : null];\n        // no default\n      }\n    }\n  );\n}\n\nclass EditParameterMappingsDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dialog: DialogPropType.isRequired,\n  };\n\n  originalParamValuesSnapshot = null;\n\n  constructor(props) {\n    super(props);\n\n    const parameterMappings = parameterMappingsToEditableMappings(\n      props.widget.options.parameterMappings,\n      props.widget.query.getParametersDefs(),\n      map(this.props.dashboard.getParametersDefs(), p => p.name)\n    );\n\n    this.originalParamValuesSnapshot = getParamValuesSnapshot(\n      parameterMappings,\n      this.props.dashboard.getParametersDefs()\n    );\n\n    this.state = {\n      saveInProgress: false,\n      parameterMappings,\n    };\n  }\n\n  saveWidget() {\n    const widget = this.props.widget;\n\n    this.setState({ saveInProgress: true });\n\n    const newMappings = editableMappingsToParameterMappings(this.state.parameterMappings);\n    widget.options.parameterMappings = newMappings;\n\n    const valuesChanged = !isMatch(\n      this.originalParamValuesSnapshot,\n      getParamValuesSnapshot(this.state.parameterMappings, this.props.dashboard.getParametersDefs())\n    );\n\n    const widgetsToSave = [\n      widget,\n      ...synchronizeWidgetTitles(widget.options.parameterMappings, this.props.dashboard.widgets),\n    ];\n\n    Promise.all(map(widgetsToSave, w => w.save()))\n      .then(() => {\n        this.props.dialog.close(valuesChanged);\n      })\n      .catch(() => {\n        notification.error(\"Widget cannot be updated\");\n      })\n      .finally(() => {\n        this.setState({ saveInProgress: false });\n      });\n  }\n\n  updateParamMappings(parameterMappings) {\n    this.setState({ parameterMappings });\n  }\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title=\"Parameters\"\n        onOk={() => this.saveWidget()}\n        okButtonProps={{ loading: this.state.saveInProgress }}\n        width={700}>\n        {this.state.parameterMappings.length > 0 && (\n          <ParameterMappingListInput\n            mappings={this.state.parameterMappings}\n            existingParams={this.props.dashboard.getParametersDefs()}\n            onChange={mappings => this.updateParamMappings(mappings)}\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EditParameterMappingsDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { isEmpty } from \"lodash\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Modal from \"antd/lib/modal\";\nimport Menu from \"antd/lib/menu\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { Moment } from \"@/components/proptypes\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./Widget.less\";\n\nfunction WidgetDropdownButton({ extraOptions, showDeleteOption, onDelete }) {\n  const WidgetMenu = (\n    <Menu data-test=\"WidgetDropdownButtonMenu\">\n      {extraOptions}\n      {showDeleteOption && extraOptions && <Menu.Divider />}\n      {showDeleteOption && <Menu.Item onClick={onDelete}>Remove from Dashboard</Menu.Item>}\n    </Menu>\n  );\n\n  return (\n    <div className=\"widget-menu-regular\">\n      <Dropdown overlay={WidgetMenu} placement=\"bottomRight\" trigger={[\"click\"]}>\n        <PlainButton className=\"action p-l-15 p-r-15\" data-test=\"WidgetDropdownButton\" aria-label=\"More options\">\n          <i className=\"zmdi zmdi-more-vert\" aria-hidden=\"true\" />\n        </PlainButton>\n      </Dropdown>\n    </div>\n  );\n}\n\nWidgetDropdownButton.propTypes = {\n  extraOptions: PropTypes.node,\n  showDeleteOption: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\n\nWidgetDropdownButton.defaultProps = {\n  extraOptions: null,\n  showDeleteOption: false,\n  onDelete: () => {},\n};\n\nfunction WidgetDeleteButton({ onClick }) {\n  return (\n    <div className=\"widget-menu-remove\">\n      <PlainButton\n        className=\"action\"\n        title=\"Remove From Dashboard\"\n        onClick={onClick}\n        data-test=\"WidgetDeleteButton\"\n        aria-label=\"Close\">\n        <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n      </PlainButton>\n    </div>\n  );\n}\n\nWidgetDeleteButton.propTypes = { onClick: PropTypes.func };\nWidgetDeleteButton.defaultProps = { onClick: () => {} };\n\nclass Widget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    children: PropTypes.node,\n    header: PropTypes.node,\n    footer: PropTypes.node,\n    canEdit: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    refreshStartedAt: Moment,\n    menuOptions: PropTypes.node,\n    tileProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    onDelete: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: \"\",\n    children: null,\n    header: null,\n    footer: null,\n    canEdit: false,\n    isPublic: false,\n    refreshStartedAt: null,\n    menuOptions: null,\n    tileProps: {},\n    onDelete: () => {},\n  };\n\n  componentDidMount() {\n    const { widget } = this.props;\n    recordEvent(\"view\", \"widget\", widget.id);\n  }\n\n  deleteWidget = () => {\n    const { widget, onDelete } = this.props;\n\n    Modal.confirm({\n      title: \"Delete Widget\",\n      content: \"Are you sure you want to remove this widget from the dashboard?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: () => widget.delete().then(onDelete),\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  render() {\n    const { className, children, header, footer, canEdit, isPublic, menuOptions, tileProps } = this.props;\n    const showDropdownButton = !isPublic && (canEdit || !isEmpty(menuOptions));\n    return (\n      <div className=\"widget-wrapper\">\n        <div className={cx(\"tile body-container\", className)} {...tileProps}>\n          <div className=\"widget-actions\">\n            {showDropdownButton && (\n              <WidgetDropdownButton\n                extraOptions={menuOptions}\n                showDeleteOption={canEdit}\n                onDelete={this.deleteWidget}\n              />\n            )}\n            {canEdit && <WidgetDeleteButton onClick={this.deleteWidget} />}\n          </div>\n          <div className=\"body-row widget-header\">{header}</div>\n          {children}\n          {footer && <div className=\"body-row tile__bottom-control\">{footer}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compact, isEmpty, invoke, map } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport cx from \"classnames\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { formatDateTime } from \"@/lib/utils\";\nimport Link from \"@/components/Link\";\nimport Parameters from \"@/components/Parameters\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport { Moment } from \"@/components/proptypes\";\nimport QueryLink from \"@/components/QueryLink\";\nimport { FiltersType } from \"@/components/Filters\";\nimport PlainButton from \"@/components/PlainButton\";\nimport ExpandedWidgetDialog from \"@/components/dashboards/ExpandedWidgetDialog\";\nimport EditParameterMappingsDialog from \"@/components/dashboards/EditParameterMappingsDialog\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport Widget from \"./Widget\";\n\nfunction visualizationWidgetMenuOptions({ widget, canEditDashboard, onParametersEdit }) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n  const canEditParameters = canEditDashboard && !isEmpty(invoke(widget, \"query.getParametersDefs\"));\n  const widgetQueryResult = widget.getQueryResult();\n  const isQueryResultEmpty = !widgetQueryResult || !widgetQueryResult.isEmpty || widgetQueryResult.isEmpty();\n\n  const downloadLink = fileType => widgetQueryResult.getLink(widget.getQuery().id, fileType);\n  const downloadName = fileType => widgetQueryResult.getName(widget.getQuery().name, fileType);\n  return compact([\n    <Menu.Item key=\"download_csv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"csv\")} download={downloadName(\"csv\")} target=\"_self\">\n          Download as CSV File\n        </Link>\n      ) : (\n        \"Download as CSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_tsv\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"tsv\")} download={downloadName(\"tsv\")} target=\"_self\">\n          Download as TSV File\n        </Link>\n      ) : (\n        \"Download as TSV File\"\n      )}\n    </Menu.Item>,\n    <Menu.Item key=\"download_excel\" disabled={isQueryResultEmpty}>\n      {!isQueryResultEmpty ? (\n        <Link href={downloadLink(\"xlsx\")} download={downloadName(\"xlsx\")} target=\"_self\">\n          Download as Excel File\n        </Link>\n      ) : (\n        \"Download as Excel File\"\n      )}\n    </Menu.Item>,\n    (canViewQuery || canEditParameters) && <Menu.Divider key=\"divider\" />,\n    canViewQuery && (\n      <Menu.Item key=\"view_query\">\n        <Link href={widget.getQuery().getUrl(true, widget.visualization.id)}>View Query</Link>\n      </Menu.Item>\n    ),\n    canEditParameters && (\n      <Menu.Item key=\"edit_parameters\" onClick={onParametersEdit}>\n        Edit Parameters\n      </Menu.Item>\n    ),\n  ]);\n}\n\nfunction RefreshIndicator({ refreshStartedAt }) {\n  return (\n    <div className=\"refresh-indicator\">\n      <div className=\"refresh-icon\">\n        <i className=\"zmdi zmdi-refresh zmdi-hc-spin\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Refreshing...</span>\n      </div>\n      <Timer from={refreshStartedAt} />\n    </div>\n  );\n}\n\nRefreshIndicator.propTypes = { refreshStartedAt: Moment };\nRefreshIndicator.defaultProps = { refreshStartedAt: null };\n\nfunction VisualizationWidgetHeader({\n  widget,\n  refreshStartedAt,\n  parameters,\n  isEditing,\n  onParametersUpdate,\n  onParametersEdit,\n}) {\n  const canViewQuery = currentUser.hasPermission(\"view_query\");\n\n  return (\n    <>\n      <RefreshIndicator refreshStartedAt={refreshStartedAt} />\n      <div className=\"t-header widget clearfix\">\n        <div className=\"th-title\">\n          <p>\n            <QueryLink query={widget.getQuery()} visualization={widget.visualization} readOnly={!canViewQuery} />\n          </p>\n          {!isEmpty(widget.getQuery().description) && (\n            <HtmlContent className=\"text-muted markdown query--description\">\n              {markdown.toHTML(widget.getQuery().description || \"\")}\n            </HtmlContent>\n          )}\n        </div>\n      </div>\n      {!isEmpty(parameters) && (\n        <div className=\"m-b-10\">\n          <Parameters\n            parameters={parameters}\n            sortable={isEditing}\n            appendSortableToParent={false}\n            onValuesChange={onParametersUpdate}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nVisualizationWidgetHeader.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  refreshStartedAt: Moment,\n  parameters: PropTypes.arrayOf(PropTypes.object),\n  isEditing: PropTypes.bool,\n  onParametersUpdate: PropTypes.func,\n  onParametersEdit: PropTypes.func,\n};\n\nVisualizationWidgetHeader.defaultProps = {\n  refreshStartedAt: null,\n  onParametersUpdate: () => {},\n  onParametersEdit: () => {},\n  isEditing: false,\n  parameters: [],\n};\n\nfunction VisualizationWidgetFooter({ widget, isPublic, onRefresh, onExpand }) {\n  const widgetQueryResult = widget.getQueryResult();\n  const updatedAt = invoke(widgetQueryResult, \"getUpdatedAt\");\n  const [refreshClickButtonId, setRefreshClickButtonId] = useState();\n\n  const refreshWidget = buttonId => {\n    if (!refreshClickButtonId) {\n      setRefreshClickButtonId(buttonId);\n      onRefresh().finally(() => setRefreshClickButtonId(null));\n    }\n  };\n\n  return widgetQueryResult ? (\n    <>\n      <span>\n        {!isPublic && !!widgetQueryResult && (\n          <PlainButton\n            className=\"refresh-button hidden-print btn btn-sm btn-default btn-transparent\"\n            onClick={() => refreshWidget(1)}\n            data-test=\"RefreshButton\">\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 1 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 1 ? \"Refreshing, please wait. \" : \"Press to refresh. \"}\n            </span>{\" \"}\n            <TimeAgo date={updatedAt} />\n          </PlainButton>\n        )}\n        <span className=\"visible-print\">\n          <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n        </span>\n        {isPublic && (\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> <TimeAgo date={updatedAt} />\n          </span>\n        )}\n      </span>\n      <span>\n        {!isPublic && (\n          <PlainButton\n            className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\"\n            onClick={() => refreshWidget(2)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": refreshClickButtonId === 2 })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">\n              {refreshClickButtonId === 2 ? \"Refreshing, please wait.\" : \"Press to refresh.\"}\n            </span>\n          </PlainButton>\n        )}\n        <PlainButton className=\"btn btn-sm btn-default hidden-print btn-transparent btn__refresh\" onClick={onExpand}>\n          <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n        </PlainButton>\n      </span>\n    </>\n  ) : null;\n}\n\nVisualizationWidgetFooter.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isPublic: PropTypes.bool,\n  onRefresh: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n};\n\nVisualizationWidgetFooter.defaultProps = { isPublic: false };\n\nclass VisualizationWidget extends React.Component {\n  static propTypes = {\n    widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    filters: FiltersType,\n    isPublic: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    canEdit: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    onLoad: PropTypes.func,\n    onRefresh: PropTypes.func,\n    onDelete: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    filters: [],\n    isPublic: false,\n    isLoading: false,\n    canEdit: false,\n    isEditing: false,\n    onLoad: () => {},\n    onRefresh: () => {},\n    onDelete: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      localParameters: props.widget.getLocalParameters(),\n      localFilters: props.filters,\n    };\n  }\n\n  componentDidMount() {\n    const { widget, onLoad } = this.props;\n    recordEvent(\"view\", \"query\", widget.visualization.query.id, { dashboard: true });\n    recordEvent(\"view\", \"visualization\", widget.visualization.id, { dashboard: true });\n    onLoad();\n  }\n\n  onLocalFiltersChange = localFilters => {\n    this.setState({ localFilters });\n  };\n\n  expandWidget = () => {\n    ExpandedWidgetDialog.showModal({ widget: this.props.widget, filters: this.state.localFilters });\n  };\n\n  editParameterMappings = () => {\n    const { widget, dashboard, onRefresh, onParameterMappingsChange } = this.props;\n    EditParameterMappingsDialog.showModal({\n      dashboard,\n      widget,\n    }).onClose(valuesChanged => {\n      // refresh widget if any parameter value has been updated\n      if (valuesChanged) {\n        onRefresh();\n      }\n      onParameterMappingsChange();\n      this.setState({ localParameters: widget.getLocalParameters() });\n    });\n  };\n\n  renderVisualization() {\n    const { widget, filters } = this.props;\n    const widgetQueryResult = widget.getQueryResult();\n    const widgetStatus = widgetQueryResult && widgetQueryResult.getStatus();\n    switch (widgetStatus) {\n      case \"failed\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            {widgetQueryResult.getError() && (\n              <div className=\"alert alert-danger m-5\">\n                Error running query: <strong>{widgetQueryResult.getError()}</strong>\n              </div>\n            )}\n          </div>\n        );\n      case \"done\":\n        return (\n          <div className=\"body-row-auto scrollbox\">\n            <VisualizationRenderer\n              visualization={widget.visualization}\n              queryResult={widgetQueryResult}\n              filters={filters}\n              onFiltersChange={this.onLocalFiltersChange}\n              context=\"widget\"\n            />\n          </div>\n        );\n      default:\n        return (\n          <div\n            className=\"body-row-auto spinner-container\"\n            role=\"status\"\n            aria-live=\"polite\"\n            aria-relevant=\"additions removals\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        );\n    }\n  }\n\n  render() {\n    const { widget, isLoading, isPublic, canEdit, isEditing, onRefresh } = this.props;\n    const { localParameters } = this.state;\n    const widgetQueryResult = widget.getQueryResult();\n    const isRefreshing = isLoading && !!(widgetQueryResult && widgetQueryResult.getStatus());\n    const onParametersEdit = parameters => {\n      const paramOrder = map(parameters, \"name\");\n      widget.options.paramOrder = paramOrder;\n      widget.save(\"options\", { paramOrder });\n    };\n\n    return (\n      <Widget\n        {...this.props}\n        className=\"widget-visualization\"\n        menuOptions={visualizationWidgetMenuOptions({\n          widget,\n          canEditDashboard: canEdit,\n          onParametersEdit: this.editParameterMappings,\n        })}\n        header={\n          <VisualizationWidgetHeader\n            widget={widget}\n            refreshStartedAt={isRefreshing ? widget.refreshStartedAt : null}\n            parameters={localParameters}\n            isEditing={isEditing}\n            onParametersUpdate={onRefresh}\n            onParametersEdit={onParametersEdit}\n          />\n        }\n        footer={\n          <VisualizationWidgetFooter\n            widget={widget}\n            isPublic={isPublic}\n            onRefresh={onRefresh}\n            onExpand={this.expandWidget}\n          />\n        }\n        tileProps={{ \"data-refreshing\": isRefreshing }}>\n        {this.renderVisualization()}\n      </Widget>\n    );\n  }\n}\n\nexport default VisualizationWidget;\n","import { toString } from \"lodash\";\nimport { markdown } from \"markdown\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Divider from \"antd/lib/divider\";\nimport Link from \"@/components/Link\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport notification from \"@/services/notification\";\n\nimport \"./TextboxDialog.less\";\n\nfunction TextboxDialog({ dialog, isNew, ...props }) {\n  const [text, setText] = useState(toString(props.text));\n  const [preview, setPreview] = useState(null);\n\n  useEffect(() => {\n    setText(props.text);\n    setPreview(markdown.toHTML(props.text));\n  }, [props.text]);\n\n  const [updatePreview] = useDebouncedCallback(() => {\n    setPreview(markdown.toHTML(text));\n  }, 200);\n\n  const handleInputChange = useCallback(\n    event => {\n      setText(event.target.value);\n      updatePreview();\n    },\n    [updatePreview]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close(text).catch(() => {\n      notification.error(isNew ? \"Widget could not be added\" : \"Widget could not be saved\");\n    });\n  }, [dialog, isNew, text]);\n\n  const confirmDialogDismiss = useCallback(() => {\n    const originalText = props.text;\n    if (text !== originalText) {\n      Modal.confirm({\n        title: \"Quit editing?\",\n        content: \"Changes you made so far will not be saved. Are you sure?\",\n        okText: \"Yes, quit\",\n        okType: \"danger\",\n        onOk: () => dialog.dismiss(),\n        maskClosable: true,\n        autoFocusButton: null,\n        style: { top: 170 },\n      });\n    } else {\n      dialog.dismiss();\n    }\n  }, [dialog, text, props.text]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isNew ? \"Add Textbox\" : \"Edit Textbox\"}\n      onOk={saveWidget}\n      onCancel={confirmDialogDismiss}\n      okText={isNew ? \"Add to Dashboard\" : \"Save\"}\n      width={500}\n      wrapProps={{ \"data-test\": \"TextboxDialog\" }}>\n      <div className=\"textbox-dialog\">\n        <Input.TextArea\n          className=\"resize-vertical\"\n          rows=\"5\"\n          value={text}\n          aria-label=\"Textbox widget content\"\n          onChange={handleInputChange}\n          autoFocus\n          placeholder=\"This is where you write some text\"\n        />\n        <small>\n          Supports basic{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.markdownguide.org/cheat-sheet/#basic-syntax\">\n            <Tooltip title=\"Markdown guide opens in new window\">Markdown</Tooltip>\n          </Link>\n          .\n        </small>\n        {text && (\n          <React.Fragment>\n            <Divider dashed />\n            <strong className=\"preview-title\">Preview:</strong>\n            <HtmlContent className=\"preview markdown\">{preview}</HtmlContent>\n          </React.Fragment>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nTextboxDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  isNew: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nTextboxDialog.defaultProps = {\n  isNew: false,\n  text: \"\",\n};\n\nexport default wrapDialog(TextboxDialog);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { markdown } from \"markdown\";\nimport Menu from \"antd/lib/menu\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport Widget from \"./Widget\";\n\nfunction TextboxWidget(props) {\n  const { widget, canEdit } = props;\n  const [text, setText] = useState(widget.text);\n\n  const editTextBox = () => {\n    TextboxDialog.showModal({\n      text: widget.text,\n    }).onClose(newText => {\n      widget.text = newText;\n      setText(newText);\n      return widget.save();\n    });\n  };\n\n  const TextboxMenuOptions = [\n    <Menu.Item key=\"edit\" onClick={editTextBox}>\n      Edit\n    </Menu.Item>,\n  ];\n\n  if (!widget.width) {\n    return null;\n  }\n\n  return (\n    <Widget {...props} menuOptions={canEdit ? TextboxMenuOptions : null} className=\"widget-text\">\n      <HtmlContent className=\"body-row-auto scrollbox t-body p-15 markdown\">{markdown.toHTML(text || \"\")}</HtmlContent>\n    </Widget>\n  );\n}\n\nTextboxWidget.propTypes = {\n  widget: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  canEdit: PropTypes.bool,\n};\n\nTextboxWidget.defaultProps = {\n  canEdit: false,\n};\n\nexport default TextboxWidget;\n","import React from \"react\";\nimport Widget from \"./Widget\";\n\nfunction RestrictedWidget(props) {\n  return (\n    <Widget {...props} className=\"d-flex justify-content-center align-items-center widget-restricted\">\n      <div className=\"t-body scrollbox\">\n        <div className=\"text-center\">\n          <h1>\n            <span className=\"zmdi zmdi-lock\" />\n          </h1>\n          <p className=\"text-muted\">This widget requires access to a data source you don&apos;t have access to.</p>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\nexport default RestrictedWidget;\n","import { includes, reduce, some } from \"lodash\";\n\n// TODO: Revisit this implementation when migrating widget component to React\n\nconst WIDGET_SELECTOR = '[data-widgetid=\"{0}\"]';\nconst WIDGET_CONTENT_SELECTOR = [\n  \".widget-header\", // header\n  \".visualization-renderer\", // visualization\n  \".scrollbox .alert\", // error state\n  \".spinner-container\", // loading state\n  \".tile__bottom-control\", // footer\n].join(\",\");\nconst INTERVAL = 200;\n\nexport default class AutoHeightController {\n  widgets = {};\n\n  interval = null;\n\n  onHeightChange = null;\n\n  constructor(handler) {\n    this.onHeightChange = handler;\n  }\n\n  update(widgets) {\n    const newWidgetIds = widgets\n      .filter(widget => widget.options.position.autoHeight)\n      .map(widget => widget.id.toString());\n\n    // added\n    newWidgetIds.filter(id => !includes(Object.keys(this.widgets), id)).forEach(this.add);\n\n    // removed\n    Object.keys(this.widgets)\n      .filter(id => !includes(newWidgetIds, id))\n      .forEach(this.remove);\n  }\n\n  add = id => {\n    if (this.isEmpty()) {\n      this.start();\n    }\n\n    const selector = WIDGET_SELECTOR.replace(\"{0}\", id);\n    this.widgets[id] = [\n      function getHeight() {\n        const widgetEl = document.querySelector(selector);\n        if (!widgetEl) {\n          return undefined; // safety\n        }\n\n        // get all content elements\n        const els = widgetEl.querySelectorAll(WIDGET_CONTENT_SELECTOR);\n\n        // calculate accumulated height\n        return reduce(\n          els,\n          (acc, el) => {\n            const height = el ? el.getBoundingClientRect().height : 0;\n            return acc + height;\n          },\n          0\n        );\n      },\n    ];\n  };\n\n  remove = id => {\n    // ignore if not an active autoHeight widget\n    if (!this.exists(id)) {\n      return;\n    }\n\n    // not actually deleting from this.widgets to prevent case of unwanted re-adding\n    this.widgets[id.toString()] = false;\n\n    if (this.isEmpty()) {\n      this.stop();\n    }\n  };\n\n  exists = id => !!this.widgets[id.toString()];\n\n  isEmpty = () => !some(this.widgets);\n\n  checkHeightChanges = () => {\n    Object.keys(this.widgets)\n      .filter(this.exists) // reject already removed items\n      .forEach(id => {\n        const [getHeight, prevHeight] = this.widgets[id];\n        const height = getHeight();\n        if (height && height !== prevHeight) {\n          this.widgets[id][1] = height; // save\n          this.onHeightChange(id, height); // dispatch\n        }\n      });\n  };\n\n  start = () => {\n    this.stop();\n    this.interval = setInterval(this.checkHeightChanges, INTERVAL);\n  };\n\n  stop = () => {\n    clearInterval(this.interval);\n  };\n\n  resume = () => {\n    if (!this.isEmpty()) {\n      this.start();\n    }\n  };\n\n  destroy = () => {\n    this.stop();\n    this.widgets = null;\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { chain, cloneDeep, find } from \"lodash\";\nimport cx from \"classnames\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport { VisualizationWidget, TextboxWidget, RestrictedWidget } from \"@/components/dashboards/dashboard-widget\";\nimport { FiltersType } from \"@/components/Filters\";\nimport cfg from \"@/config/dashboard-grid-options\";\nimport AutoHeightController from \"./AutoHeightController\";\nimport { WidgetTypeEnum } from \"@/services/widget\";\n\nimport \"react-grid-layout/css/styles.css\";\nimport \"./dashboard-grid.less\";\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WidgetType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  options: PropTypes.shape({\n    position: PropTypes.shape({\n      col: PropTypes.number.isRequired,\n      row: PropTypes.number.isRequired,\n      sizeY: PropTypes.number.isRequired,\n      minSizeY: PropTypes.number.isRequired,\n      maxSizeY: PropTypes.number.isRequired,\n      sizeX: PropTypes.number.isRequired,\n      minSizeX: PropTypes.number.isRequired,\n      maxSizeX: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n});\n\nconst SINGLE = \"single-column\";\nconst MULTI = \"multi-column\";\n\nconst DashboardWidget = React.memo(\n  function DashboardWidget({\n    widget,\n    dashboard,\n    onLoadWidget,\n    onRefreshWidget,\n    onRemoveWidget,\n    onParameterMappingsChange,\n    isEditing,\n    canEdit,\n    isPublic,\n    isLoading,\n    filters,\n  }) {\n    const { type } = widget;\n    const onLoad = () => onLoadWidget(widget);\n    const onRefresh = () => onRefreshWidget(widget);\n    const onDelete = () => onRemoveWidget(widget.id);\n\n    if (type === WidgetTypeEnum.VISUALIZATION) {\n      return (\n        <VisualizationWidget\n          widget={widget}\n          dashboard={dashboard}\n          filters={filters}\n          isEditing={isEditing}\n          canEdit={canEdit}\n          isPublic={isPublic}\n          isLoading={isLoading}\n          onLoad={onLoad}\n          onRefresh={onRefresh}\n          onDelete={onDelete}\n          onParameterMappingsChange={onParameterMappingsChange}\n        />\n      );\n    }\n    if (type === WidgetTypeEnum.TEXTBOX) {\n      return <TextboxWidget widget={widget} canEdit={canEdit} isPublic={isPublic} onDelete={onDelete} />;\n    }\n    return <RestrictedWidget widget={widget} />;\n  },\n  (prevProps, nextProps) =>\n    prevProps.widget === nextProps.widget &&\n    prevProps.canEdit === nextProps.canEdit &&\n    prevProps.isPublic === nextProps.isPublic &&\n    prevProps.isLoading === nextProps.isLoading &&\n    prevProps.filters === nextProps.filters &&\n    prevProps.isEditing === nextProps.isEditing\n);\n\nclass DashboardGrid extends React.Component {\n  static propTypes = {\n    isEditing: PropTypes.bool.isRequired,\n    isPublic: PropTypes.bool,\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    widgets: PropTypes.arrayOf(WidgetType).isRequired,\n    filters: FiltersType,\n    onBreakpointChange: PropTypes.func,\n    onLoadWidget: PropTypes.func,\n    onRefreshWidget: PropTypes.func,\n    onRemoveWidget: PropTypes.func,\n    onLayoutChange: PropTypes.func,\n    onParameterMappingsChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isPublic: false,\n    filters: [],\n    onLoadWidget: () => {},\n    onRefreshWidget: () => {},\n    onRemoveWidget: () => {},\n    onLayoutChange: () => {},\n    onBreakpointChange: () => {},\n    onParameterMappingsChange: () => {},\n  };\n\n  static normalizeFrom(widget) {\n    const {\n      id,\n      options: { position: pos },\n    } = widget;\n\n    return {\n      i: id.toString(),\n      x: pos.col,\n      y: pos.row,\n      w: pos.sizeX,\n      h: pos.sizeY,\n      minW: pos.minSizeX,\n      maxW: pos.maxSizeX,\n      minH: pos.minSizeY,\n      maxH: pos.maxSizeY,\n    };\n  }\n\n  mode = null;\n\n  autoHeightCtrl = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layouts: {},\n      disableAnimations: true,\n    };\n\n    // init AutoHeightController\n    this.autoHeightCtrl = new AutoHeightController(this.onWidgetHeightUpdated);\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentDidMount() {\n    this.onBreakpointChange(document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI);\n    // Work-around to disable initial animation on widgets; `measureBeforeMount` doesn't work properly:\n    // it disables animation, but it cannot detect scrollbars.\n    setTimeout(() => {\n      this.setState({ disableAnimations: false });\n    }, 50);\n  }\n\n  componentDidUpdate() {\n    // update, in case widgets added or removed\n    this.autoHeightCtrl.update(this.props.widgets);\n  }\n\n  componentWillUnmount() {\n    this.autoHeightCtrl.destroy();\n  }\n\n  onLayoutChange = (_, layouts) => {\n    // workaround for when dashboard starts at single mode and then multi is empty or carries single col data\n    // fixes test dashboard_spec['shows widgets with full width']\n    // TODO: open react-grid-layout issue\n    if (layouts[MULTI]) {\n      this.setState({ layouts });\n    }\n\n    // workaround for https://github.com/STRML/react-grid-layout/issues/889\n    // remove next line when fix lands\n    this.mode = document.body.offsetWidth <= cfg.mobileBreakPoint ? SINGLE : MULTI;\n    // end workaround\n\n    // don't save single column mode layout\n    if (this.mode === SINGLE) {\n      return;\n    }\n\n    const normalized = chain(layouts[MULTI])\n      .keyBy(\"i\")\n      .mapValues(this.normalizeTo)\n      .value();\n\n    this.props.onLayoutChange(normalized);\n  };\n\n  onBreakpointChange = mode => {\n    this.mode = mode;\n    this.props.onBreakpointChange(mode === SINGLE);\n  };\n\n  // height updated by auto-height\n  onWidgetHeightUpdated = (widgetId, newHeight) => {\n    this.setState(({ layouts }) => {\n      const layout = cloneDeep(layouts[MULTI]); // must clone to allow react-grid-layout to compare prev/next state\n      const item = find(layout, { i: widgetId.toString() });\n      if (item) {\n        // update widget height\n        item.h = Math.ceil((newHeight + cfg.margins) / cfg.rowHeight);\n      }\n\n      return { layouts: { [MULTI]: layout } };\n    });\n  };\n\n  // height updated by manual resize\n  onWidgetResize = (layout, oldItem, newItem) => {\n    if (oldItem.h !== newItem.h) {\n      this.autoHeightCtrl.remove(Number(newItem.i));\n    }\n\n    this.autoHeightCtrl.resume();\n  };\n\n  normalizeTo = layout => ({\n    col: layout.x,\n    row: layout.y,\n    sizeX: layout.w,\n    sizeY: layout.h,\n    autoHeight: this.autoHeightCtrl.exists(layout.i),\n  });\n\n  render() {\n    const {\n      onLoadWidget,\n      onRefreshWidget,\n      onRemoveWidget,\n      onParameterMappingsChange,\n      filters,\n      dashboard,\n      isPublic,\n      isEditing,\n      widgets,\n    } = this.props;\n    const className = cx(\"dashboard-wrapper\", isEditing ? \"editing-mode\" : \"preview-mode\");\n\n    return (\n      <div className={className}>\n        <ResponsiveGridLayout\n          draggableCancel=\"input,.sortable-container\"\n          className={cx(\"layout\", { \"disable-animations\": this.state.disableAnimations })}\n          cols={{ [MULTI]: cfg.columns, [SINGLE]: 1 }}\n          rowHeight={cfg.rowHeight - cfg.margins}\n          margin={[cfg.margins, cfg.margins]}\n          isDraggable={isEditing}\n          isResizable={isEditing}\n          onResizeStart={this.autoHeightCtrl.stop}\n          onResizeStop={this.onWidgetResize}\n          layouts={this.state.layouts}\n          onLayoutChange={this.onLayoutChange}\n          onBreakpointChange={this.onBreakpointChange}\n          breakpoints={{ [MULTI]: cfg.mobileBreakPoint, [SINGLE]: 0 }}>\n          {widgets.map(widget => (\n            <div\n              key={widget.id}\n              data-grid={DashboardGrid.normalizeFrom(widget)}\n              data-widgetid={widget.id}\n              data-test={`WidgetId${widget.id}`}\n              className={cx(\"dashboard-widget-wrapper\", {\n                \"widget-auto-height-enabled\": this.autoHeightCtrl.exists(widget.id),\n              })}>\n              <DashboardWidget\n                dashboard={dashboard}\n                widget={widget}\n                filters={filters}\n                isPublic={isPublic}\n                isLoading={widget.loading}\n                isEditing={isEditing}\n                canEdit={dashboard.canEdit()}\n                onLoadWidget={onLoadWidget}\n                onRefreshWidget={onRefreshWidget}\n                onRemoveWidget={onRemoveWidget}\n                onParameterMappingsChange={onParameterMappingsChange}\n              />\n            </div>\n          ))}\n        </ResponsiveGridLayout>\n      </div>\n    );\n  }\n}\n\nexport default DashboardGrid;\n","const items = new Map();\n\nfunction checkItems() {\n  if (items.size > 0) {\n    items.forEach((item, node) => {\n      const bounds = node.getBoundingClientRect();\n      // convert to int (because these numbers needed for comparisons), but preserve 1 decimal point\n      const width = Math.round(bounds.width * 10);\n      const height = Math.round(bounds.height * 10);\n\n      if (item.width !== width || item.height !== height) {\n        item.width = width;\n        item.height = height;\n        item.callback(node);\n      }\n    });\n\n    setTimeout(checkItems, 100);\n  }\n}\n\nexport default function observe(node, callback) {\n  if (node && !items.has(node)) {\n    const shouldTrigger = items.size === 0;\n    items.set(node, { callback });\n    if (shouldTrigger) {\n      checkItems();\n    }\n    return () => items.delete(node);\n  }\n  return () => {};\n}\n","import { map, includes, groupBy, first, find } from \"lodash\";\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"antd/lib/select\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { MappingType, ParameterMappingListInput } from \"@/components/ParameterMappingInput\";\nimport QuerySelector from \"@/components/QuerySelector\";\nimport notification from \"@/services/notification\";\nimport { Query } from \"@/services/query\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction VisualizationSelect({ query, visualization, onChange }) {\n  const visualizationGroups = useMemo(() => {\n    return query ? groupBy(query.visualizations, \"type\") : {};\n  }, [query]);\n\n  const vizSelectId = useUniqueId(\"visualization-select\");\n\n  const handleChange = useCallback(\n    visualizationId => {\n      const selectedVisualization = query ? find(query.visualizations, { id: visualizationId }) : null;\n      onChange(selectedVisualization || null);\n    },\n    [query, onChange]\n  );\n\n  if (!query) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={vizSelectId}>Choose Visualization</label>\n        <Select\n          id={vizSelectId}\n          className=\"w-100\"\n          value={visualization ? visualization.id : undefined}\n          onChange={handleChange}>\n          {map(visualizationGroups, (visualizations, groupKey) => (\n            <Select.OptGroup key={groupKey} label={groupKey}>\n              {map(visualizations, visualization => (\n                <Select.Option key={`${visualization.id}`} value={visualization.id}>\n                  {visualization.name}\n                </Select.Option>\n              ))}\n            </Select.OptGroup>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n}\n\nVisualizationSelect.propTypes = {\n  query: PropTypes.object,\n  visualization: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nVisualizationSelect.defaultProps = {\n  query: null,\n  visualization: null,\n  onChange: () => {},\n};\n\nfunction AddWidgetDialog({ dialog, dashboard }) {\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [selectedVisualization, setSelectedVisualization] = useState(null);\n  const [parameterMappings, setParameterMappings] = useState([]);\n\n  const selectQuery = useCallback(\n    queryId => {\n      // Clear previously selected query (if any)\n      setSelectedQuery(null);\n      setSelectedVisualization(null);\n      setParameterMappings([]);\n\n      if (queryId) {\n        Query.get({ id: queryId }).then(query => {\n          if (query) {\n            const existingParamNames = map(dashboard.getParametersDefs(), param => param.name);\n            setSelectedQuery(query);\n            setParameterMappings(\n              map(query.getParametersDefs(), param => ({\n                name: param.name,\n                type: includes(existingParamNames, param.name)\n                  ? MappingType.DashboardMapToExisting\n                  : MappingType.DashboardAddNew,\n                mapTo: param.name,\n                value: param.normalizedValue,\n                title: \"\",\n                param,\n              }))\n            );\n            if (query.visualizations.length > 0) {\n              setSelectedVisualization(first(query.visualizations));\n            }\n          }\n        });\n      }\n    },\n    [dashboard]\n  );\n\n  const saveWidget = useCallback(() => {\n    dialog.close({ visualization: selectedVisualization, parameterMappings }).catch(() => {\n      notification.error(\"Widget could not be added\");\n    });\n  }, [dialog, selectedVisualization, parameterMappings]);\n\n  const existingParams = dashboard.getParametersDefs();\n  const parameterMappingsId = useUniqueId(\"parameter-mappings\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add Widget\"\n      onOk={saveWidget}\n      okButtonProps={{\n        ...dialog.props.okButtonProps,\n        disabled: !selectedQuery || dialog.props.okButtonProps.disabled,\n      }}\n      okText=\"Add to Dashboard\"\n      width={700}>\n      <div data-test=\"AddWidgetDialog\">\n        <QuerySelector onChange={query => selectQuery(query ? query.id : null)} />\n\n        {selectedQuery && (\n          <VisualizationSelect\n            query={selectedQuery}\n            visualization={selectedVisualization}\n            onChange={setSelectedVisualization}\n          />\n        )}\n\n        {parameterMappings.length > 0 && [\n          <label key=\"parameters-title\" htmlFor={parameterMappingsId}>\n            Parameters\n          </label>,\n          <ParameterMappingListInput\n            key=\"parameters-list\"\n            id={parameterMappingsId}\n            mappings={parameterMappings}\n            existingParams={existingParams}\n            onChange={setParameterMappings}\n          />,\n        ]}\n      </div>\n    </Modal>\n  );\n}\n\nAddWidgetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  dashboard: PropTypes.object.isRequired,\n};\n\nexport default wrapDialog(AddWidgetDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Link from \"@/components/Link\";\n\n// PreviewCard\n\nexport function PreviewCard({ imageUrl, roundedImage, title, body, children, className, ...props }) {\n  return (\n    <div {...props} className={className + \" w-100 d-flex align-items-center\"}>\n      <img\n        src={imageUrl}\n        width=\"32\"\n        height=\"32\"\n        className={classNames({ \"profile__image--settings\": roundedImage }, \"m-r-5\")}\n        alt=\"Logo/Avatar\"\n      />\n      <div className=\"flex-fill\">\n        <div>{title}</div>\n        {body && <div className=\"text-muted\">{body}</div>}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nPreviewCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  body: PropTypes.node,\n  roundedImage: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nPreviewCard.defaultProps = {\n  body: null,\n  roundedImage: true,\n  className: \"\",\n  children: null,\n};\n\n// UserPreviewCard\n\nexport function UserPreviewCard({ user, withLink, children, ...props }) {\n  const title = withLink ? <Link href={\"users/\" + user.id}>{user.name}</Link> : user.name;\n  return (\n    <PreviewCard {...props} imageUrl={user.profile_image_url} title={title} body={user.email}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nUserPreviewCard.propTypes = {\n  user: PropTypes.shape({\n    profile_image_url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nUserPreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n\n// DataSourcePreviewCard\n\nexport function DataSourcePreviewCard({ dataSource, withLink, children, ...props }) {\n  const imageUrl = `static/images/db-logos/${dataSource.type}.png`;\n  const title = withLink ? <Link href={\"data_sources/\" + dataSource.id}>{dataSource.name}</Link> : dataSource.name;\n  return (\n    <PreviewCard {...props} imageUrl={imageUrl} title={title}>\n      {children}\n    </PreviewCard>\n  );\n}\n\nDataSourcePreviewCard.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  withLink: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nDataSourcePreviewCard.defaultProps = {\n  withLink: false,\n  children: null,\n};\n","import { isString } from \"lodash\";\nimport DOMPurify from \"dompurify\";\n\nDOMPurify.setConfig({\n  ADD_ATTR: [\"target\"],\n});\n\nDOMPurify.addHook(\"afterSanitizeAttributes\", function(node) {\n  // Fix elements with `target` attribute:\n  // - allow only `target=\"_blank\"\n  // - add `rel=\"noopener noreferrer\"` to prevent https://www.owasp.org/index.php/Reverse_Tabnabbing\n\n  const target = node.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    node.setAttribute(\"rel\", \"noopener noreferrer\");\n  } else {\n    node.removeAttribute(\"target\");\n  }\n});\n\nexport { DOMPurify };\n\nexport default DOMPurify.sanitize;\n","import { isString, get, find } from \"lodash\";\nimport sanitize from \"@/services/sanitize\";\nimport { axios } from \"@/services/axios\";\nimport notification from \"@/services/notification\";\nimport { clientConfig } from \"@/services/auth\";\n\nfunction getErrorMessage(error) {\n  return find([get(error, \"response.data.message\"), get(error, \"response.statusText\"), \"Unknown error\"], isString);\n}\n\nfunction disableResource(user) {\n  return `api/users/${user.id}/disable`;\n}\n\nfunction enableUser(user) {\n  const userName = sanitize(user.name);\n\n  return axios\n    .delete(disableResource(user))\n    .then(data => {\n      notification.success(`User ${userName} is now enabled.`);\n      user.is_disabled = false;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot enable user\", getErrorMessage(error));\n    });\n}\n\nfunction disableUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .post(disableResource(user))\n    .then(data => {\n      notification.warning(`User ${userName} is now disabled.`);\n      user.is_disabled = true;\n      user.profile_image_url = data.profile_image_url;\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot disable user\", getErrorMessage(error));\n    });\n}\n\nfunction deleteUser(user) {\n  const userName = sanitize(user.name);\n  return axios\n    .delete(`api/users/${user.id}`)\n    .then(data => {\n      notification.warning(`User ${userName} has been deleted.`);\n      return data;\n    })\n    .catch(error => {\n      notification.error(\"Cannot delete user\", getErrorMessage(error));\n    });\n}\n\nfunction convertUserInfo(user) {\n  return {\n    id: user.id,\n    name: user.name,\n    email: user.email,\n    profileImageUrl: user.profile_image_url,\n    apiKey: user.api_key,\n    groupIds: user.groups,\n    isDisabled: user.is_disabled,\n    isInvitationPending: user.is_invitation_pending,\n  };\n}\n\nfunction regenerateApiKey(user) {\n  return axios\n    .post(`api/users/${user.id}/regenerate_api_key`)\n    .then(data => {\n      notification.success(\"The API Key has been updated.\");\n      return data.api_key;\n    })\n    .catch(error => {\n      notification.error(\"Failed regenerating API Key\", getErrorMessage(error));\n    });\n}\n\nfunction sendPasswordReset(user) {\n  return axios\n    .post(`api/users/${user.id}/reset_password`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.reset_link;\n      }\n      notification.success(\"Password reset email sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to send password reset email\", getErrorMessage(error));\n    });\n}\n\nfunction resendInvitation(user) {\n  return axios\n    .post(`api/users/${user.id}/invite`)\n    .then(data => {\n      if (clientConfig.mailSettingsMissing) {\n        notification.warning(\"The mail server is not configured.\");\n        return data.invite_link;\n      }\n      notification.success(\"Invitation sent.\");\n    })\n    .catch(error => {\n      notification.error(\"Failed to resend invitation\", getErrorMessage(error));\n    });\n}\n\nconst User = {\n  query: params => axios.get(\"api/users\", { params }),\n  get: ({ id }) => axios.get(`api/users/${id}`),\n  create: data => axios.post(`api/users`, data),\n  save: data => axios.post(`api/users/${data.id}`, data),\n  enableUser,\n  disableUser,\n  deleteUser,\n  convertUserInfo,\n  regenerateApiKey,\n  sendPasswordReset,\n  resendInvitation,\n};\n\nexport default User;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport { each, debounce, get, find } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Tag from \"antd/lib/tag\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { toHuman } from \"@/lib/utils\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport PlainButton from \"@/components/PlainButton\";\nimport notification from \"@/services/notification\";\nimport User from \"@/services/user\";\n\nimport \"./index.less\";\n\nconst { Option } = Select;\nconst DEBOUNCE_SEARCH_DURATION = 200;\n\nfunction useGrantees(url) {\n  const loadGrantees = useCallback(\n    () =>\n      axios.get(url).then(data => {\n        const resultGrantees = [];\n        each(data, (grantees, accessType) => {\n          grantees.forEach(grantee => {\n            grantee.accessType = toHuman(accessType);\n            resultGrantees.push(grantee);\n          });\n        });\n        return resultGrantees;\n      }),\n    [url]\n  );\n\n  const addPermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .post(url, { access_type: accessType, user_id: userId })\n        .catch(() => notification.error(\"Could not grant permission to the user\")),\n    [url]\n  );\n\n  const removePermission = useCallback(\n    (userId, accessType = \"modify\") =>\n      axios\n        .delete(url, { data: { access_type: accessType, user_id: userId } })\n        .catch(() => notification.error(\"Could not remove permission from the user\")),\n    [url]\n  );\n\n  return { loadGrantees, addPermission, removePermission };\n}\n\nconst searchUsers = searchTerm =>\n  User.query({ q: searchTerm })\n    .then(({ results }) => results)\n    .catch(() => []);\n\nfunction PermissionsEditorDialogHeader({ context }) {\n  return (\n    <>\n      Manage Permissions\n      <div className=\"modal-header-desc\">\n        {`Editing this ${context} is enabled for the users in this list and for admins. `}\n        <HelpTrigger type=\"MANAGE_PERMISSIONS\" />\n      </div>\n    </>\n  );\n}\n\nPermissionsEditorDialogHeader.propTypes = { context: PropTypes.oneOf([\"query\", \"dashboard\"]) };\nPermissionsEditorDialogHeader.defaultProps = { context: \"query\" };\n\nfunction UserSelect({ onSelect, shouldShowUser }) {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchUsers = useCallback(\n    debounce(\n      search =>\n        searchUsers(search)\n          .then(setUsers)\n          .finally(() => setLoadingUsers(false)),\n      DEBOUNCE_SEARCH_DURATION\n    ),\n    []\n  );\n\n  useEffect(() => {\n    setLoadingUsers(true);\n    debouncedSearchUsers(searchTerm);\n  }, [debouncedSearchUsers, searchTerm]);\n\n  return (\n    <Select\n      className=\"w-100 m-b-10\"\n      placeholder=\"Add users...\"\n      showSearch\n      onSearch={setSearchTerm}\n      suffixIcon={\n        loadingUsers ? (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        ) : (\n          <i className=\"fa fa-search\" aria-hidden=\"true\" />\n        )\n      }\n      filterOption={false}\n      notFoundContent={null}\n      value={undefined}\n      getPopupContainer={trigger => trigger.parentNode}\n      onSelect={onSelect}>\n      {users.filter(shouldShowUser).map(user => (\n        <Option key={user.id} value={user.id}>\n          <UserPreviewCard user={user} />\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nUserSelect.propTypes = {\n  onSelect: PropTypes.func,\n  shouldShowUser: PropTypes.func,\n};\nUserSelect.defaultProps = { onSelect: () => {}, shouldShowUser: () => true };\n\nfunction PermissionsEditorDialog({ dialog, author, context, aclUrl }) {\n  const [loadingGrantees, setLoadingGrantees] = useState(true);\n  const [grantees, setGrantees] = useState([]);\n  const { loadGrantees, addPermission, removePermission } = useGrantees(aclUrl);\n  const loadUsersWithPermissions = useCallback(() => {\n    setLoadingGrantees(true);\n    loadGrantees()\n      .then(setGrantees)\n      .catch(() => notification.error(\"Failed to load grantees list\"))\n      .finally(() => setLoadingGrantees(false));\n  }, [loadGrantees]);\n\n  const userHasPermission = useCallback(\n    user => user.id === author.id || !!get(find(grantees, { id: user.id }), \"accessType\"),\n    [author.id, grantees]\n  );\n\n  useEffect(() => {\n    loadUsersWithPermissions();\n  }, [aclUrl, loadUsersWithPermissions]);\n\n  return (\n    <Modal\n      {...dialog.props}\n      className=\"permissions-editor-dialog\"\n      title={<PermissionsEditorDialogHeader context={context} />}\n      footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n      <UserSelect\n        onSelect={userId => addPermission(userId).then(loadUsersWithPermissions)}\n        shouldShowUser={user => !userHasPermission(user)}\n      />\n      <div className=\"d-flex align-items-center m-t-5\">\n        <h5 className=\"flex-fill\">Users with permissions</h5>\n        {loadingGrantees && (\n          <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n            <span className=\"sr-only\">Loading...</span>\n          </span>\n        )}\n      </div>\n      <div className=\"scrollbox p-5\" style={{ maxHeight: \"40vh\" }}>\n        <List\n          size=\"small\"\n          dataSource={[author, ...grantees]}\n          renderItem={user => (\n            <List.Item>\n              <UserPreviewCard key={user.id} user={user}>\n                {user.id === author.id ? (\n                  <Tag className=\"m-0\">Author</Tag>\n                ) : (\n                  <Tooltip title=\"Remove user permissions\">\n                    <PlainButton\n                      aria-label=\"Remove permissions\"\n                      onClick={() => removePermission(user.id).then(loadUsersWithPermissions)}>\n                      <i className=\"fa fa-remove clickable\" aria-hidden=\"true\" />\n                    </PlainButton>\n                  </Tooltip>\n                )}\n              </UserPreviewCard>\n            </List.Item>\n          )}\n        />\n      </div>\n    </Modal>\n  );\n}\n\nPermissionsEditorDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  author: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  context: PropTypes.oneOf([\"query\", \"dashboard\"]),\n  aclUrl: PropTypes.string.isRequired,\n};\n\nPermissionsEditorDialog.defaultProps = { context: \"query\" };\n\nexport default wrapDialog(PermissionsEditorDialog);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport Tooltip from \"@/components/Tooltip\";\nimport PlainButton from \"./PlainButton\";\n\nexport default class InputWithCopy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { copied: null };\n    this.ref = React.createRef();\n    this.copyFeatureSupported = document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    this.ref.current.select();\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <PlainButton onClick={this.copy}>\n          {/* TODO: lacks visual feedback */}\n          <CopyOutlinedIcon />\n        </PlainButton>\n      </Tooltip>\n    );\n\n    return <Input {...this.props} ref={this.ref} addonAfter={this.copyFeatureSupported && copyButton} />;\n  }\n}\n","import { replace } from \"lodash\";\nimport React from \"react\";\nimport { axios } from \"@/services/axios\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"antd/lib/switch\";\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Alert from \"antd/lib/alert\";\nimport notification from \"@/services/notification\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nconst API_SHARE_URL = \"api/dashboards/{id}/share\";\n\nclass ShareDashboardDialog extends React.Component {\n  static propTypes = {\n    dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    hasOnlySafeQueries: PropTypes.bool.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  formItemProps = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n    style: { marginBottom: 7 },\n  };\n\n  constructor(props) {\n    super(props);\n    const { dashboard } = this.props;\n\n    this.state = {\n      saving: false,\n    };\n\n    this.apiUrl = replace(API_SHARE_URL, \"{id}\", dashboard.id);\n    this.enabled = this.props.hasOnlySafeQueries || dashboard.publicAccessEnabled;\n  }\n\n  static get headerContent() {\n    return (\n      <React.Fragment>\n        Share Dashboard\n        <div className=\"modal-header-desc\">\n          Allow public access to this dashboard with a secret address. <HelpTrigger type=\"SHARE_DASHBOARD\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  enableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .post(this.apiUrl)\n      .then(data => {\n        dashboard.publicAccessEnabled = true;\n        dashboard.public_url = data.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn on sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  disableAccess = () => {\n    const { dashboard } = this.props;\n    this.setState({ saving: true });\n\n    axios\n      .delete(this.apiUrl)\n      .then(() => {\n        dashboard.publicAccessEnabled = false;\n        delete dashboard.public_url;\n      })\n      .catch(() => {\n        notification.error(\"Failed to turn off sharing for this dashboard\");\n      })\n      .finally(() => {\n        this.setState({ saving: false });\n      });\n  };\n\n  onChange = checked => {\n    if (checked) {\n      this.enableAccess();\n    } else {\n      this.disableAccess();\n    }\n  };\n\n  render() {\n    const { dialog, dashboard, hasOnlySafeQueries } = this.props;\n    const headerContent = this.constructor.headerContent;\n    return (\n      <Modal {...dialog.props} title={headerContent} footer={null}>\n        <Form layout=\"horizontal\">\n          {!hasOnlySafeQueries && (\n            <Form.Item>\n              <Alert\n                message=\"For your security, sharing is currently not supported for dashboards containing queries with text parameters. Consider changing the text parameters in your query to a different type.\"\n                type=\"error\"\n              />\n            </Form.Item>\n          )}\n\n          <Form.Item label=\"Allow public access\" {...this.formItemProps}>\n            <Switch\n              checked={dashboard.publicAccessEnabled}\n              onChange={this.onChange}\n              loading={this.state.saving}\n              disabled={!this.enabled}\n              data-test=\"PublicAccessEnabled\"\n            />\n          </Form.Item>\n          {dashboard.public_url && (\n            <>\n              <Form.Item>\n                <Alert\n                  message={\n                    <div>\n                      Custom rule for hiding filter components when sharing links:\n                      <br />\n                      You can hide filter components by appending `&hide_filter={\"{{\"} component_name{\"}}\"}` to the\n                      sharing URL.\n                      <br />\n                      Example: http://{\"{{\"}ip{\"}}\"}:{\"{{\"}port{\"}}\"}/public/dashboards/{\"{{\"}id{\"}}\"}\n                      ?p_country=ghana&p_site=10&hide_filter=country\n                    </div>\n                  }\n                  type=\"warning\"\n                />\n              </Form.Item>\n\n              <Form.Item label=\"Secret address\" {...this.formItemProps}>\n                <InputWithCopy value={dashboard.public_url} data-test=\"SecretAddress\" />\n              </Form.Item>\n            </>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ShareDashboardDialog);\n","import { has } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useFullscreenHandler() {\n  const [fullscreen, setFullscreen] = useState(has(location.search, \"fullscreen\"));\n  useEffect(() => {\n    document.body.classList.toggle(\"headless\", fullscreen);\n    location.setSearch({ fullscreen: fullscreen ? true : null }, true);\n  }, [fullscreen]);\n\n  const toggleFullscreen = () => setFullscreen(!fullscreen);\n  return [fullscreen, toggleFullscreen];\n}\n","import { isNaN, max, min } from \"lodash\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport location from \"@/services/location\";\nimport { policy } from \"@/services/policy\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getLimitedRefreshRate(refreshRate) {\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  return max([30, min(allowedIntervals), refreshRate]);\n}\n\nfunction getRefreshRateFromUrl() {\n  const refreshRate = parseFloat(location.search.refresh);\n  return isNaN(refreshRate) ? null : getLimitedRefreshRate(refreshRate);\n}\n\nexport default function useRefreshRateHandler(refreshDashboard) {\n  const [refreshRate, setRefreshRate] = useState(getRefreshRateFromUrl());\n\n  // `refreshDashboard` may change quite frequently (on every update of `dashboard` instance), but we\n  // have to keep the same timer running, because timer will restart when re-creating, and instead of\n  // running refresh every N seconds - it will run refresh every N seconds after last dashboard update\n  // (which is not right obviously)\n  const doRefreshDashboard = useImmutableCallback(refreshDashboard);\n\n  // URL and timer should be updated only when `refreshRate` changes\n  useEffect(() => {\n    location.setSearch({ refresh: refreshRate || null }, true);\n    if (refreshRate) {\n      const refreshTimer = setInterval(doRefreshDashboard, refreshRate * 1000);\n      return () => clearInterval(refreshTimer);\n    }\n  }, [refreshRate, doRefreshDashboard]);\n\n  return useMemo(() => [refreshRate, rate => setRefreshRate(getLimitedRefreshRate(rate)), () => setRefreshRate(null)], [\n    refreshRate,\n  ]);\n}\n","import { debounce, find, has, isMatch, map, pickBy } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport location from \"@/services/location\";\nimport notification from \"@/services/notification\";\n\nexport const DashboardStatusEnum = {\n  SAVED: \"saved\",\n  SAVING: \"saving\",\n  SAVING_FAILED: \"saving_failed\",\n};\n\nfunction getChangedPositions(widgets, nextPositions = {}) {\n  return pickBy(nextPositions, (nextPos, widgetId) => {\n    const widget = find(widgets, { id: Number(widgetId) });\n    const prevPos = widget.options.position;\n    return !isMatch(prevPos, nextPos);\n  });\n}\n\nexport default function useEditModeHandler(canEditDashboard, widgets) {\n  const [editingLayout, setEditingLayout] = useState(canEditDashboard && has(location.search, \"edit\"));\n  const [dashboardStatus, setDashboardStatus] = useState(DashboardStatusEnum.SAVED);\n  const [recentPositions, setRecentPositions] = useState([]);\n  const [doneBtnClickedWhileSaving, setDoneBtnClickedWhileSaving] = useState(false);\n\n  useEffect(() => {\n    location.setSearch({ edit: editingLayout ? true : null }, true);\n  }, [editingLayout]);\n\n  useEffect(() => {\n    if (doneBtnClickedWhileSaving && dashboardStatus === DashboardStatusEnum.SAVED) {\n      setDoneBtnClickedWhileSaving(false);\n      setEditingLayout(false);\n    }\n  }, [doneBtnClickedWhileSaving, dashboardStatus]);\n\n  const saveDashboardLayout = useCallback(\n    positions => {\n      if (!canEditDashboard) {\n        setDashboardStatus(DashboardStatusEnum.SAVED);\n        return;\n      }\n\n      const changedPositions = getChangedPositions(widgets, positions);\n\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      setRecentPositions(positions);\n      const saveChangedWidgets = map(changedPositions, (position, id) => {\n        // find widget\n        const widget = find(widgets, { id: Number(id) });\n\n        // skip already deleted widget\n        if (!widget) {\n          return Promise.resolve();\n        }\n\n        return widget.save(\"options\", { position });\n      });\n\n      return Promise.all(saveChangedWidgets)\n        .then(() => setDashboardStatus(DashboardStatusEnum.SAVED))\n        .catch(() => {\n          setDashboardStatus(DashboardStatusEnum.SAVING_FAILED);\n          notification.error(\"Error saving changes.\");\n        });\n    },\n    [canEditDashboard, widgets]\n  );\n\n  const saveDashboardLayoutDebounced = useCallback(\n    (...args) => {\n      setDashboardStatus(DashboardStatusEnum.SAVING);\n      return debounce(() => saveDashboardLayout(...args), 2000)();\n    },\n    [saveDashboardLayout]\n  );\n\n  const retrySaveDashboardLayout = useCallback(() => saveDashboardLayout(recentPositions), [\n    recentPositions,\n    saveDashboardLayout,\n  ]);\n\n  const setEditing = useCallback(\n    editing => {\n      if (!editing && dashboardStatus !== DashboardStatusEnum.SAVED) {\n        setDoneBtnClickedWhileSaving(true);\n        return;\n      }\n      setEditingLayout(canEditDashboard && editing);\n    },\n    [dashboardStatus, canEditDashboard]\n  );\n\n  return {\n    editingLayout: canEditDashboard && editingLayout,\n    setEditingLayout: setEditing,\n    saveDashboardLayout: editingLayout ? saveDashboardLayoutDebounced : saveDashboardLayout,\n    retrySaveDashboardLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n  };\n}\n","import { noop, extend, pick } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport url from \"url\";\nimport qs from \"query-string\";\nimport { Dashboard } from \"@/services/dashboard\";\n\nfunction keepCurrentUrlParams(targetUrl) {\n  const currentUrlParams = qs.parse(window.location.search);\n  targetUrl = url.parse(targetUrl);\n  const targetUrlParams = qs.parse(targetUrl.search);\n  return url.format(\n    extend(pick(targetUrl, [\"protocol\", \"auth\", \"host\", \"pathname\"]), {\n      search: qs.stringify(extend(currentUrlParams, targetUrlParams)),\n    })\n  );\n}\n\nexport default function useDuplicateDashboard(dashboard) {\n  const [isDuplicating, setIsDuplicating] = useState(false);\n\n  const duplicateDashboard = useCallback(() => {\n    // To prevent opening the same tab, name must be unique for each browser\n    const tabName = `duplicatedDashboardTab/${Math.random().toString()}`;\n\n    // We should open tab here because this moment is a part of user interaction;\n    // later browser will block such attempts\n    const tab = window.open(\"\", tabName);\n\n    setIsDuplicating(true);\n    Dashboard.fork({ id: dashboard.id })\n      .then(newDashboard => {\n        tab.location = keepCurrentUrlParams(newDashboard.getUrl());\n      })\n      .finally(() => {\n        setIsDuplicating(false);\n      });\n  }, [dashboard.id]);\n\n  return [isDuplicating, isDuplicating ? noop : duplicateDashboard];\n}\n","import { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { isEmpty, includes, compact, map, has, pick, keys, extend, every, get } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport { Dashboard, collectDashboardFilters } from \"@/services/dashboard\";\nimport { currentUser } from \"@/services/auth\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { QueryResultError } from \"@/services/query\";\nimport AddWidgetDialog from \"@/components/dashboards/AddWidgetDialog\";\nimport TextboxDialog from \"@/components/dashboards/TextboxDialog\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\nimport { editableMappingsToParameterMappings, synchronizeWidgetTitles } from \"@/components/ParameterMappingInput\";\nimport ShareDashboardDialog from \"../components/ShareDashboardDialog\";\nimport useFullscreenHandler from \"../../../lib/hooks/useFullscreenHandler\";\nimport useRefreshRateHandler from \"./useRefreshRateHandler\";\nimport useEditModeHandler from \"./useEditModeHandler\";\nimport useDuplicateDashboard from \"./useDuplicateDashboard\";\nimport { policy } from \"@/services/policy\";\n\nexport { DashboardStatusEnum } from \"./useEditModeHandler\";\n\nfunction getAffectedWidgets(widgets, updatedParameters = []) {\n  return !isEmpty(updatedParameters)\n    ? widgets.filter(widget =>\n        Object.values(widget.getParameterMappings())\n          .filter(({ type }) => type === \"dashboard-level\")\n          .some(({ mapTo }) =>\n            includes(\n              updatedParameters.map(p => p.name),\n              mapTo\n            )\n          )\n      )\n    : widgets;\n}\n\nfunction useDashboard(dashboardData) {\n  const [dashboard, setDashboard] = useState(dashboardData);\n  const [filters, setFilters] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [gridDisabled, setGridDisabled] = useState(false);\n  const globalParameters = useMemo(() => dashboard.getParametersDefs(), [dashboard]);\n  const canEditDashboard = !dashboard.is_archived && policy.canEdit(dashboard);\n  const isDashboardOwnerOrAdmin = useMemo(\n    () =>\n      !dashboard.is_archived &&\n      has(dashboard, \"user.id\") &&\n      (currentUser.id === dashboard.user.id || currentUser.isAdmin),\n    [dashboard]\n  );\n  const hasOnlySafeQueries = useMemo(\n    () => every(dashboard.widgets, w => (w.getQuery() ? w.getQuery().is_safe : true)),\n    [dashboard]\n  );\n\n  const [isDuplicating, duplicateDashboard] = useDuplicateDashboard(dashboard);\n\n  const managePermissions = useCallback(() => {\n    const aclUrl = `api/dashboards/${dashboard.id}/acl`;\n    PermissionsEditorDialog.showModal({\n      aclUrl,\n      context: \"dashboard\",\n      author: dashboard.user,\n    });\n  }, [dashboard]);\n\n  const updateDashboard = useCallback(\n    (data, includeVersion = true) => {\n      setDashboard(currentDashboard => extend({}, currentDashboard, data));\n      data = { ...data, id: dashboard.id };\n      if (includeVersion) {\n        data = { ...data, version: dashboard.version };\n      }\n      return Dashboard.save(data)\n        .then(updatedDashboard => {\n          setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, keys(data))));\n          if (has(data, \"name\")) {\n            location.setPath(url.parse(updatedDashboard.url).pathname, true);\n          }\n        })\n        .catch(error => {\n          const status = get(error, \"response.status\");\n          if (status === 403) {\n            notification.error(\"Dashboard update failed\", \"Permission Denied.\");\n          } else if (status === 409) {\n            notification.error(\n              \"It seems like the dashboard has been modified by another user. \",\n              \"Please copy/backup your changes and reload this page.\",\n              { duration: null }\n            );\n          }\n        });\n    },\n    [dashboard]\n  );\n\n  const togglePublished = useCallback(() => {\n    recordEvent(\"toggle_published\", \"dashboard\", dashboard.id);\n    updateDashboard({ is_draft: !dashboard.is_draft }, false);\n  }, [dashboard, updateDashboard]);\n\n  const loadWidget = useCallback((widget, forceRefresh = false) => {\n    widget.getParametersDefs(); // Force widget to read parameters values from URL\n    setDashboard(currentDashboard => extend({}, currentDashboard));\n    return widget\n      .load(forceRefresh)\n      .catch(error => {\n        // QueryResultErrors are expected\n        if (error instanceof QueryResultError) {\n          return;\n        }\n        return Promise.reject(error);\n      })\n      .finally(() => setDashboard(currentDashboard => extend({}, currentDashboard)));\n  }, []);\n\n  const refreshWidget = useCallback(widget => loadWidget(widget, true), [loadWidget]);\n\n  const removeWidget = useCallback(widgetId => {\n    setDashboard(currentDashboard =>\n      extend({}, currentDashboard, {\n        widgets: currentDashboard.widgets.filter(widget => widget.id !== undefined && widget.id !== widgetId),\n      })\n    );\n  }, []);\n\n  const dashboardRef = useRef();\n  dashboardRef.current = dashboard;\n\n  const loadDashboard = useCallback(\n    (forceRefresh = false, updatedParameters = []) => {\n      const affectedWidgets = getAffectedWidgets(dashboardRef.current.widgets, updatedParameters);\n      const loadWidgetPromises = compact(\n        affectedWidgets.map(widget => loadWidget(widget, forceRefresh).catch(error => error))\n      );\n\n      return Promise.all(loadWidgetPromises).then(() => {\n        const queryResults = compact(map(dashboardRef.current.widgets, widget => widget.getQueryResult()));\n        const updatedFilters = collectDashboardFilters(dashboardRef.current, queryResults, location.search);\n        setFilters(updatedFilters);\n      });\n    },\n    [loadWidget]\n  );\n\n  const refreshDashboard = useCallback(\n    updatedParameters => {\n      if (!refreshing) {\n        setRefreshing(true);\n        loadDashboard(true, updatedParameters).finally(() => setRefreshing(false));\n      }\n    },\n    [refreshing, loadDashboard]\n  );\n\n  const archiveDashboard = useCallback(() => {\n    recordEvent(\"archive\", \"dashboard\", dashboard.id);\n    Dashboard.delete(dashboard).then(updatedDashboard =>\n      setDashboard(currentDashboard => extend({}, currentDashboard, pick(updatedDashboard, [\"is_archived\"])))\n    );\n  }, [dashboard]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const showShareDashboardDialog = useCallback(() => {\n    const handleDialogClose = () => setDashboard(currentDashboard => extend({}, currentDashboard));\n\n    ShareDashboardDialog.showModal({\n      dashboard,\n      hasOnlySafeQueries,\n    })\n      .onClose(handleDialogClose)\n      .onDismiss(handleDialogClose);\n  }, [dashboard, hasOnlySafeQueries]);\n\n  const showAddTextboxDialog = useCallback(() => {\n    TextboxDialog.showModal({\n      isNew: true,\n    }).onClose(text =>\n      dashboard.addWidget(text).then(() => setDashboard(currentDashboard => extend({}, currentDashboard)))\n    );\n  }, [dashboard]);\n\n  const showAddWidgetDialog = useCallback(() => {\n    AddWidgetDialog.showModal({\n      dashboard,\n    }).onClose(({ visualization, parameterMappings }) =>\n      dashboard\n        .addWidget(visualization, {\n          parameterMappings: editableMappingsToParameterMappings(parameterMappings),\n        })\n        .then(widget => {\n          const widgetsToSave = [\n            widget,\n            ...synchronizeWidgetTitles(widget.options.parameterMappings, dashboard.widgets),\n          ];\n          return Promise.all(widgetsToSave.map(w => w.save())).then(() =>\n            setDashboard(currentDashboard => extend({}, currentDashboard))\n          );\n        })\n    );\n  }, [dashboard]);\n\n  const [refreshRate, setRefreshRate, disableRefreshRate] = useRefreshRateHandler(refreshDashboard);\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler();\n  const editModeHandler = useEditModeHandler(!gridDisabled && canEditDashboard, dashboard.widgets);\n\n  useEffect(() => {\n    setDashboard(dashboardData);\n    loadDashboard();\n  }, [dashboardData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    document.title = dashboard.name;\n  }, [dashboard.name]);\n\n  // reload dashboard when filter option changes\n  useEffect(() => {\n    loadDashboard();\n  }, [dashboard.dashboard_filters_enabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    dashboard,\n    globalParameters,\n    refreshing,\n    filters,\n    setFilters,\n    loadDashboard,\n    refreshDashboard,\n    updateDashboard,\n    togglePublished,\n    archiveDashboard,\n    loadWidget,\n    refreshWidget,\n    removeWidget,\n    canEditDashboard,\n    isDashboardOwnerOrAdmin,\n    refreshRate,\n    setRefreshRate,\n    disableRefreshRate,\n    ...editModeHandler,\n    gridDisabled,\n    setGridDisabled,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n    showAddTextboxDialog,\n    showAddWidgetDialog,\n    managePermissions,\n    isDuplicating,\n    duplicateDashboard,\n  };\n}\n\nexport default useDashboard;\n","import { trim } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Input from \"antd/lib/input\";\n\nexport default class EditInPlace extends React.Component {\n  static propTypes = {\n    ignoreBlanks: PropTypes.bool,\n    isEditable: PropTypes.bool,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onStopEditing: PropTypes.func,\n    multiline: PropTypes.bool,\n    editorProps: PropTypes.object,\n    defaultEditing: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ignoreBlanks: false,\n    isEditable: true,\n    placeholder: \"\",\n    value: \"\",\n    onStopEditing: () => {},\n    multiline: false,\n    editorProps: {},\n    defaultEditing: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: props.defaultEditing,\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (!this.state.editing && prevState.editing) {\n      this.props.onStopEditing();\n    }\n  }\n\n  startEditing = () => {\n    if (this.props.isEditable) {\n      this.setState({ editing: true });\n    }\n  };\n\n  stopEditing = currentValue => {\n    const newValue = trim(currentValue);\n    const ignorableBlank = this.props.ignoreBlanks && newValue === \"\";\n    if (!ignorableBlank && newValue !== this.props.value) {\n      this.props.onDone(newValue);\n    }\n    this.setState({ editing: false });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      this.stopEditing(event.target.value);\n    } else if (event.keyCode === 27) {\n      this.setState({ editing: false });\n    }\n  };\n\n  renderNormal = () =>\n    this.props.value ? (\n      <span\n        role=\"presentation\"\n        onFocus={this.startEditing}\n        onClick={this.startEditing}\n        className={this.props.isEditable ? \"editable\" : \"\"}>\n        {this.props.value}\n      </span>\n    ) : (\n      <a className=\"clickable\" onClick={this.startEditing}>\n        {this.props.placeholder}\n      </a>\n    );\n\n  renderEdit = () => {\n    const { multiline, value, editorProps } = this.props;\n    const InputComponent = multiline ? Input.TextArea : Input;\n    return (\n      <InputComponent\n        defaultValue={value}\n        aria-label=\"Editing\"\n        onBlur={e => this.stopEditing(e.target.value)}\n        onKeyDown={this.handleKeyDown}\n        autoFocus\n        {...editorProps}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <span className={cx(\"edit-in-place\", { active: this.state.editing }, this.props.className)}>\n        {this.state.editing ? this.renderEdit() : this.renderNormal()}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { map, includes } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { DashboardTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { durationHumanize } from \"@/lib/utils\";\nimport { DashboardStatusEnum } from \"../hooks/useDashboard\";\n\nimport \"./DashboardHeader.less\";\n\nfunction getDashboardTags() {\n  return getTags(\"api/dashboards/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction buttonType(value) {\n  return value ? \"primary\" : \"default\";\n}\n\nfunction DashboardPageTitle({ dashboardConfiguration }) {\n  const { dashboard, canEditDashboard, updateDashboard, editingLayout } = dashboardConfiguration;\n  return (\n    <div className=\"title-with-tags\">\n      <div className=\"page-title\">\n        <FavoritesControl item={dashboard} />\n        <h3>\n          <EditInPlace\n            isEditable={editingLayout}\n            onDone={name => updateDashboard({ name })}\n            value={dashboard.name}\n            ignoreBlanks\n          />\n        </h3>\n        <Tooltip title={dashboard.user.name} placement=\"bottom\">\n          <img src={dashboard.user.profile_image_url} className=\"profile-image\" alt={dashboard.user.name} />\n        </Tooltip>\n      </div>\n      <DashboardTagsControl\n        tags={dashboard.tags}\n        isDraft={dashboard.is_draft}\n        isArchived={dashboard.is_archived}\n        canEdit={canEditDashboard}\n        getAvailableTags={getDashboardTags}\n        onEdit={tags => updateDashboard({ tags })}\n      />\n    </div>\n  );\n}\n\nDashboardPageTitle.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction RefreshButton({ dashboardConfiguration }) {\n  const { refreshRate, setRefreshRate, disableRefreshRate, refreshing, refreshDashboard } = dashboardConfiguration;\n  const allowedIntervals = policy.getDashboardRefreshIntervals();\n  const refreshRateOptions = clientConfig.dashboardRefreshIntervals;\n  const onRefreshRateSelected = ({ key }) => {\n    const parsedRefreshRate = parseFloat(key);\n    if (parsedRefreshRate) {\n      setRefreshRate(parsedRefreshRate);\n      refreshDashboard();\n    } else {\n      disableRefreshRate();\n    }\n  };\n  return (\n    <Button.Group>\n      <Tooltip title={refreshRate ? `Auto Refreshing every ${durationHumanize(refreshRate)}` : null}>\n        <Button type={buttonType(refreshRate)} onClick={() => refreshDashboard()}>\n          <i className={cx(\"zmdi zmdi-refresh m-r-5\", { \"zmdi-hc-spin\": refreshing })} aria-hidden=\"true\" />\n          {refreshRate ? durationHumanize(refreshRate) : \"Refresh\"}\n        </Button>\n      </Tooltip>\n      <Dropdown\n        trigger={[\"click\"]}\n        placement=\"bottomRight\"\n        overlay={\n          <Menu onClick={onRefreshRateSelected} selectedKeys={[`${refreshRate}`]}>\n            {refreshRateOptions.map(option => (\n              <Menu.Item key={`${option}`} disabled={!includes(allowedIntervals, option)}>\n                {durationHumanize(option)}\n              </Menu.Item>\n            ))}\n            {refreshRate && <Menu.Item key={null}>Disable auto refresh</Menu.Item>}\n          </Menu>\n        }>\n        <Button className=\"icon-button hidden-xs\" type={buttonType(refreshRate)}>\n          <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Split button!</span>\n        </Button>\n      </Dropdown>\n    </Button.Group>\n  );\n}\n\nRefreshButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardMoreOptionsButton({ dashboardConfiguration }) {\n  const {\n    dashboard,\n    setEditingLayout,\n    togglePublished,\n    archiveDashboard,\n    managePermissions,\n    gridDisabled,\n    isDashboardOwnerOrAdmin,\n    isDuplicating,\n    duplicateDashboard,\n  } = dashboardConfiguration;\n\n  const archive = () => {\n    Modal.confirm({\n      title: \"Archive Dashboard\",\n      content: `Are you sure you want to archive the \"${dashboard.name}\" dashboard?`,\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: archiveDashboard,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  return (\n    <Dropdown\n      trigger={[\"click\"]}\n      placement=\"bottomRight\"\n      overlay={\n        <Menu data-test=\"DashboardMoreButtonMenu\">\n          <Menu.Item className={cx({ hidden: gridDisabled })}>\n            <PlainButton onClick={() => setEditingLayout(true)}>Edit</PlainButton>\n          </Menu.Item>\n          {!isDuplicating && dashboard.canEdit() && (\n            <Menu.Item>\n              <PlainButton onClick={duplicateDashboard}>\n                Fork <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(opens in a new tab)</span>\n              </PlainButton>\n            </Menu.Item>\n          )}\n          {clientConfig.showPermissionsControl && isDashboardOwnerOrAdmin && (\n            <Menu.Item>\n              <PlainButton onClick={managePermissions}>Manage Permissions</PlainButton>\n            </Menu.Item>\n          )}\n          {!clientConfig.disablePublish && !dashboard.is_draft && (\n            <Menu.Item>\n              <PlainButton onClick={togglePublished}>Unpublish</PlainButton>\n            </Menu.Item>\n          )}\n          <Menu.Item>\n            <PlainButton onClick={archive}>Archive</PlainButton>\n          </Menu.Item>\n        </Menu>\n      }>\n      <Button className=\"icon-button m-l-5\" data-test=\"DashboardMoreButton\" aria-label=\"More actions\">\n        <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n      </Button>\n    </Dropdown>\n  );\n}\n\nDashboardMoreOptionsButton.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    dashboard,\n    togglePublished,\n    canEditDashboard,\n    fullscreen,\n    toggleFullscreen,\n    showShareDashboardDialog,\n    updateDashboard,\n  } = dashboardConfiguration;\n  const showPublishButton = dashboard.is_draft;\n  const showRefreshButton = true;\n  const showFullscreenButton = !dashboard.is_draft;\n  const canShareDashboard = canEditDashboard && !dashboard.is_draft;\n  const showShareButton = !clientConfig.disablePublicUrls && (dashboard.publicAccessEnabled || canShareDashboard);\n  const showMoreOptionsButton = canEditDashboard;\n\n  const unarchiveDashboard = () => {\n    recordEvent(\"unarchive\", \"dashboard\", dashboard.id);\n    updateDashboard({ is_archived: false }, false);\n  };\n  return (\n    <div className=\"dashboard-control\">\n      {dashboard.can_edit && dashboard.is_archived && <Button onClick={unarchiveDashboard}>Unarchive</Button>}\n      {!dashboard.is_archived && (\n        <span className=\"hidden-print\">\n          {showPublishButton && (\n            <Button className=\"m-r-5 hidden-xs\" onClick={togglePublished}>\n              <span className=\"fa fa-paper-plane m-r-5\" /> Publish\n            </Button>\n          )}\n          {showRefreshButton && <RefreshButton dashboardConfiguration={dashboardConfiguration} />}\n          {showFullscreenButton && (\n            <Tooltip className=\"hidden-xs\" title=\"Enable/Disable Fullscreen display\">\n              <Button\n                type={buttonType(fullscreen)}\n                className=\"icon-button m-l-5\"\n                onClick={toggleFullscreen}\n                aria-label=\"Toggle fullscreen display\">\n                <i className=\"zmdi zmdi-fullscreen\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {headerExtra}\n          {showShareButton && (\n            <Tooltip title=\"Dashboard Sharing Options\">\n              <Button\n                className=\"icon-button m-l-5\"\n                type={buttonType(dashboard.publicAccessEnabled)}\n                onClick={showShareDashboardDialog}\n                data-test=\"OpenShareForm\"\n                aria-label=\"Share\">\n                <i className=\"zmdi zmdi-share\" aria-hidden=\"true\" />\n              </Button>\n            </Tooltip>\n          )}\n          {showMoreOptionsButton && <DashboardMoreOptionsButton dashboardConfiguration={dashboardConfiguration} />}\n        </span>\n      )}\n    </div>\n  );\n}\n\nDashboardControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nfunction DashboardEditControl({ dashboardConfiguration, headerExtra }) {\n  const {\n    setEditingLayout,\n    doneBtnClickedWhileSaving,\n    dashboardStatus,\n    retrySaveDashboardLayout,\n  } = dashboardConfiguration;\n  let status;\n  if (dashboardStatus === DashboardStatusEnum.SAVED) {\n    status = <span className=\"save-status\">Saved</span>;\n  } else if (dashboardStatus === DashboardStatusEnum.SAVING) {\n    status = (\n      <span className=\"save-status\" data-saving>\n        Saving\n      </span>\n    );\n  } else {\n    status = (\n      <span className=\"save-status\" data-error>\n        Saving Failed\n      </span>\n    );\n  }\n  return (\n    <div className=\"dashboard-control\">\n      {status}\n      {dashboardStatus === DashboardStatusEnum.SAVING_FAILED ? (\n        <Button type=\"primary\" onClick={retrySaveDashboardLayout}>\n          Retry\n        </Button>\n      ) : (\n        <Button loading={doneBtnClickedWhileSaving} type=\"primary\" onClick={() => setEditingLayout(false)}>\n          {!doneBtnClickedWhileSaving && <i className=\"fa fa-check m-r-5\" aria-hidden=\"true\" />} Done Editing\n        </Button>\n      )}\n      {headerExtra}\n    </div>\n  );\n}\n\nDashboardEditControl.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n\nexport default function DashboardHeader({ dashboardConfiguration, headerExtra }) {\n  const { editingLayout } = dashboardConfiguration;\n  const DashboardControlComponent = editingLayout ? DashboardEditControl : DashboardControl;\n\n  return (\n    <div className=\"dashboard-header\">\n      <DashboardPageTitle dashboardConfiguration={dashboardConfiguration} />\n      <DashboardControlComponent dashboardConfiguration={dashboardConfiguration} headerExtra={headerExtra} />\n    </div>\n  );\n}\n\nDashboardHeader.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  headerExtra: PropTypes.node,\n};\n","import { isEmpty, map } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Parameters from \"@/components/Parameters\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport recordEvent from \"@/services/recordEvent\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport routes from \"@/services/routes\";\nimport location from \"@/services/location\";\nimport url from \"@/services/url\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useDashboard from \"./hooks/useDashboard\";\nimport DashboardHeader from \"./components/DashboardHeader\";\n\nimport \"./DashboardPage.less\";\n\nfunction DashboardSettings({ dashboardConfiguration }) {\n  const { dashboard, updateDashboard } = dashboardConfiguration;\n  return (\n    <div className=\"m-b-10 p-15 bg-white tiled\">\n      <Checkbox\n        checked={!!dashboard.dashboard_filters_enabled}\n        onChange={({ target }) => updateDashboard({ dashboard_filters_enabled: target.checked })}\n        data-test=\"DashboardFiltersCheckbox\">\n        Use Dashboard Level Filters\n      </Checkbox>\n    </div>\n  );\n}\n\nDashboardSettings.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction AddWidgetContainer({ dashboardConfiguration, className, ...props }) {\n  const { showAddTextboxDialog, showAddWidgetDialog } = dashboardConfiguration;\n  return (\n    <div className={cx(\"add-widget-container\", className)} {...props}>\n      <h2>\n        <i className=\"zmdi zmdi-widgets\" aria-hidden=\"true\" />\n        <span className=\"hidden-xs hidden-sm\">\n          Widgets are individual query visualizations or text boxes you can place on your dashboard in various\n          arrangements.\n        </span>\n      </h2>\n      <div>\n        <Button className=\"m-r-15\" onClick={showAddTextboxDialog} data-test=\"AddTextboxButton\">\n          Add Textbox\n        </Button>\n        <Button type=\"primary\" onClick={showAddWidgetDialog} data-test=\"AddWidgetButton\">\n          Add Widget\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nAddWidgetContainer.propTypes = {\n  dashboardConfiguration: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nfunction DashboardComponent(props) {\n  const dashboardConfiguration = useDashboard(props.dashboard);\n  const {\n    dashboard,\n    filters,\n    setFilters,\n    loadDashboard,\n    loadWidget,\n    removeWidget,\n    saveDashboardLayout,\n    globalParameters,\n    updateDashboard,\n    refreshDashboard,\n    refreshWidget,\n    editingLayout,\n    setGridDisabled,\n  } = dashboardConfiguration;\n\n  const [pageContainer, setPageContainer] = useState(null);\n  const [bottomPanelStyles, setBottomPanelStyles] = useState({});\n  const onParametersEdit = parameters => {\n    const paramOrder = map(parameters, \"name\");\n    updateDashboard({ options: { globalParamOrder: paramOrder } });\n  };\n\n  useEffect(() => {\n    if (pageContainer) {\n      const unobserve = resizeObserver(pageContainer, () => {\n        if (editingLayout) {\n          const style = window.getComputedStyle(pageContainer, null);\n          const bounds = pageContainer.getBoundingClientRect();\n          const paddingLeft = parseFloat(style.paddingLeft) || 0;\n          const paddingRight = parseFloat(style.paddingRight) || 0;\n          setBottomPanelStyles({\n            left: Math.round(bounds.left) + paddingRight,\n            width: pageContainer.clientWidth - paddingLeft - paddingRight,\n          });\n        }\n\n        // reflow grid when container changes its size\n        window.dispatchEvent(new Event(\"resize\"));\n      });\n      return unobserve;\n    }\n  }, [pageContainer, editingLayout]);\n\n  return (\n    <div className=\"container\" ref={setPageContainer} data-test={`DashboardId${dashboard.id}Container`}>\n      <DashboardHeader\n        dashboardConfiguration={dashboardConfiguration}\n        headerExtra={\n          <DynamicComponent\n            name=\"Dashboard.HeaderExtra\"\n            dashboard={dashboard}\n            dashboardConfiguration={dashboardConfiguration}\n          />\n        }\n      />\n      {!isEmpty(globalParameters) && (\n        <div className=\"dashboard-parameters m-b-10 p-15 bg-white tiled\" data-test=\"DashboardParameters\">\n          <Parameters\n            parameters={globalParameters}\n            onValuesChange={refreshDashboard}\n            sortable={editingLayout}\n            onParametersEdit={onParametersEdit}\n          />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\" data-test=\"DashboardFilters\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      {editingLayout && <DashboardSettings dashboardConfiguration={dashboardConfiguration} />}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={editingLayout}\n          onLayoutChange={editingLayout ? saveDashboardLayout : () => {}}\n          onBreakpointChange={setGridDisabled}\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n          onRemoveWidget={removeWidget}\n          onParameterMappingsChange={loadDashboard}\n        />\n      </div>\n      {editingLayout && (\n        <AddWidgetContainer dashboardConfiguration={dashboardConfiguration} style={bottomPanelStyles} />\n      )}\n    </div>\n  );\n}\n\nDashboardComponent.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nfunction DashboardPage({ dashboardSlug, dashboardId, onError }) {\n  const [dashboard, setDashboard] = useState(null);\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    Dashboard.get({ id: dashboardId, slug: dashboardSlug })\n      .then(dashboardData => {\n        recordEvent(\"view\", \"dashboard\", dashboardData.id);\n        setDashboard(dashboardData);\n\n        // if loaded by slug, update location url to use the id\n        if (!dashboardId) {\n          location.setPath(url.parse(dashboardData.url).pathname, true);\n        }\n      })\n      .catch(handleError);\n  }, [dashboardId, dashboardSlug, handleError]);\n\n  return <div className=\"dashboard-page\">{dashboard && <DashboardComponent dashboard={dashboard} />}</div>;\n}\n\nDashboardPage.propTypes = {\n  dashboardSlug: PropTypes.string,\n  dashboardId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nDashboardPage.defaultProps = {\n  dashboardSlug: null,\n  dashboardId: null,\n  onError: PropTypes.func,\n};\n\n// route kept for backward compatibility\nroutes.register(\n  \"Dashboards.LegacyViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboard/:dashboardSlug\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n\nroutes.register(\n  \"Dashboards.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/dashboards/:dashboardId([^-]+)(-.*)?\",\n    render: pageProps => <DashboardPage {...pageProps} />,\n  })\n);\n","import React, { useEffect, useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorBoundaryContext } from \"@redash/viz/lib/components/ErrorBoundary\";\nimport { Auth, clientConfig } from \"@/services/auth\";\n\n// This wrapper modifies `route.render` function and instead of passing `currentRoute` passes an object\n// that contains:\n// - `currentRoute.routeParams`\n// - `pageTitle` field which is equal to `currentRoute.title`\n// - `onError` field which is a `handleError` method of nearest error boundary\n// - `apiKey` field\n\nfunction ApiKeySessionWrapper({ apiKey, currentRoute, renderChildren }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const { handleError } = useContext(ErrorBoundaryContext);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Auth.setApiKey(apiKey);\n    Auth.loadConfig()\n      .then(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(true);\n        }\n      })\n      .catch(() => {\n        if (!isCancelled) {\n          setIsAuthenticated(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [apiKey]);\n\n  if (!isAuthenticated || clientConfig.disablePublicUrls) {\n    return null;\n  }\n\n  return (\n    <React.Fragment key={currentRoute.key}>\n      {renderChildren({ ...currentRoute.routeParams, pageTitle: currentRoute.title, onError: handleError, apiKey })}\n    </React.Fragment>\n  );\n}\n\nApiKeySessionWrapper.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n  renderChildren: PropTypes.func,\n};\n\nApiKeySessionWrapper.defaultProps = {\n  renderChildren: () => null,\n};\n\nexport default function routeWithApiKeySession({ render, getApiKey, ...rest }) {\n  return {\n    ...rest,\n    render: currentRoute => (\n      <ApiKeySessionWrapper apiKey={getApiKey(currentRoute)} currentRoute={currentRoute} renderChildren={render} />\n    ),\n  };\n}\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Parameters from \"@/components/Parameters\";\nimport DashboardGrid from \"@/components/dashboards/DashboardGrid\";\nimport Filters from \"@/components/Filters\";\n\nimport { Dashboard } from \"@/services/dashboard\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nimport useDashboard from \"./hooks/useDashboard\";\n\nimport \"./PublicDashboardPage.less\";\n\nfunction PublicDashboard({ dashboard }) {\n  const { globalParameters, filters, setFilters, refreshDashboard, loadWidget, refreshWidget } = useDashboard(\n    dashboard\n  );\n\n  return (\n    <div className=\"container p-t-10 p-b-20\">\n      <PageHeader title={dashboard.name} />\n      {!isEmpty(globalParameters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Parameters parameters={globalParameters} onValuesChange={refreshDashboard} />\n        </div>\n      )}\n      {!isEmpty(filters) && (\n        <div className=\"m-b-10 p-15 bg-white tiled\">\n          <Filters filters={filters} onChange={setFilters} />\n        </div>\n      )}\n      <div id=\"dashboard-container\">\n        <DashboardGrid\n          dashboard={dashboard}\n          widgets={dashboard.widgets}\n          filters={filters}\n          isEditing={false}\n          isPublic\n          onLoadWidget={loadWidget}\n          onRefreshWidget={refreshWidget}\n        />\n      </div>\n    </div>\n  );\n}\n\nPublicDashboard.propTypes = {\n  dashboard: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nclass PublicDashboardPage extends React.Component {\n  static propTypes = {\n    token: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    loading: true,\n    dashboard: null,\n  };\n\n  componentDidMount() {\n    Dashboard.getByToken({ token: this.props.token })\n      .then(dashboard => this.setState({ dashboard, loading: false }))\n      .catch(error => this.props.onError(error));\n  }\n\n  render() {\n    const { loading, dashboard } = this.state;\n    return (\n      <div className=\"public-dashboard-page\">\n        {loading ? (\n          <div className=\"container loading-message\">\n            <BigMessage className=\"\" icon=\"fa-spinner fa-2x fa-pulse\" message=\"Loading...\" />\n          </div>\n        ) : (\n          <PublicDashboard dashboard={dashboard} />\n        )}\n        <div id=\"footer\">\n          <div className=\"text-center\">\n            <Link href=\"https://redash.io\">\n              <img alt=\"Redash Logo\" src={logoUrl} width=\"38\" />\n            </Link>\n          </div>\n          Powered by <Link href=\"https://redash.io/?ref=public-dashboard\">Redash</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nroutes.register(\n  \"Dashboards.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/public/dashboards/:token\",\n    render: pageProps => <PublicDashboardPage {...pageProps} />,\n    getApiKey: currentRoute => currentRoute.routeParams.token,\n  })\n);\n","import React from \"react\";\nimport BigMessage from \"@/components/BigMessage\";\n\n// Default \"list empty\" message for list pages\nexport default function EmptyState(props) {\n  return (\n    <div className=\"text-center\">\n      <BigMessage icon=\"fa-search\" message=\"Sorry, we couldn't find anything.\" {...props} />\n    </div>\n  );\n}\n","import { includes, isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport Input from \"antd/lib/input\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\n\nimport \"./CardsList.less\";\n\nexport interface CardsListItem {\n  title: string;\n  imgSrc: string;\n  href?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nexport interface CardsListProps {\n  items?: CardsListItem[];\n  showSearch?: boolean;\n}\n\ninterface ListItemProps {\n  item: CardsListItem;\n  keySuffix: string;\n}\n\nfunction ListItem({ item, keySuffix }: ListItemProps) {\n  const commonProps = {\n    key: `card${keySuffix}`,\n    className: \"visual-card\",\n    onClick: item.onClick,\n    children: (\n      <>\n        <img alt={item.title} src={item.imgSrc} />\n        <h3>{item.title}</h3>\n      </>\n    ),\n  };\n\n  return item.href ? <Link href={item.href} {...commonProps} /> : <PlainButton type=\"link\" {...commonProps} />;\n}\n\nexport default function CardsList({ items = [], showSearch = false }: CardsListProps) {\n  const [searchText, setSearchText] = useState(\"\");\n  const filteredItems = items.filter(\n    item => isEmpty(searchText) || includes(item.title.toLowerCase(), searchText.toLowerCase())\n  );\n\n  return (\n    <div data-test=\"CardsList\">\n      {showSearch && (\n        <div className=\"row p-10\">\n          <div className=\"col-md-4 col-md-offset-4\">\n            <Input.Search\n              placeholder=\"Search...\"\n              aria-label=\"Search cards\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchText(e.target.value)}\n              autoFocus\n            />\n          </div>\n        </div>\n      )}\n      {isEmpty(filteredItems) ? (\n        <EmptyState className=\"\" />\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-lg-12 d-inline-flex flex-wrap visual-card-list\">\n            {filteredItems.map((item: CardsListItem, index: number) => (\n              <ListItem key={index} item={item} keySuffix={index.toString()} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nCardsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      onClick: PropTypes.func,\n      href: PropTypes.string,\n    })\n  ),\n  showSearch: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport AntCollapse from \"antd/lib/collapse\";\n\nexport default function Collapse({ collapsed, children, className, ...props }) {\n  return (\n    <AntCollapse\n      {...props}\n      activeKey={collapsed ? null : \"content\"}\n      className={cx(className, \"ant-collapse-headerless\")}>\n      <AntCollapse.Panel key=\"content\" header=\"\">\n        {children}\n      </AntCollapse.Panel>\n    </AntCollapse>\n  );\n}\n\nCollapse.propTypes = {\n  collapsed: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n  children: null,\n  className: \"\",\n};\n","import { toHuman } from \"@/lib/utils\";\n\nexport default function getFieldLabel(field) {\n  const { title, name } = field;\n  return title || toHuman(name);\n}\n","import React, { forwardRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"./AceEditorInput.less\";\n\nfunction AceEditorInput(props, ref) {\n  return (\n    <div className=\"ace-editor-input\" data-test={props[\"data-test\"]}>\n      <AceEditor\n        ref={ref}\n        mode=\"sql\"\n        theme=\"textmate\"\n        height=\"100px\"\n        editorProps={{ $blockScrolling: Infinity }}\n        showPrintMargin={false}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport default forwardRef(AceEditorInput);\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function InputField({ form, field, ...otherProps }) {\n  return <Input {...otherProps} />;\n}\n","import React from \"react\";\nimport { get } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport getFieldLabel from \"./getFieldLabel\";\n\nimport {\n  AceEditorField,\n  CheckboxField,\n  ContentField,\n  FileField,\n  InputField,\n  NumberField,\n  SelectField,\n  TextAreaField,\n} from \"./fields\";\n\nexport const FieldType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  type: PropTypes.oneOf([\n    \"ace\",\n    \"text\",\n    \"textarea\",\n    \"email\",\n    \"password\",\n    \"number\",\n    \"checkbox\",\n    \"file\",\n    \"select\",\n    \"content\",\n  ]).isRequired,\n  initialValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  content: PropTypes.node,\n  mode: PropTypes.string,\n  required: PropTypes.bool,\n  extra: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  minLength: PropTypes.number,\n  placeholder: PropTypes.string,\n  contentAfter: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  loading: PropTypes.bool,\n  props: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n});\n\nconst FieldTypeComponent = {\n  checkbox: CheckboxField,\n  file: FileField,\n  select: SelectField,\n  number: NumberField,\n  textarea: TextAreaField,\n  ace: AceEditorField,\n  content: ContentField,\n};\n\nexport default function DynamicFormField({ form, field, ...otherProps }) {\n  const { name, type, readOnly, autoFocus } = field;\n  const fieldLabel = getFieldLabel(field);\n\n  const fieldProps = {\n    ...field.props,\n    className: \"w-100\",\n    name,\n    type,\n    readOnly,\n    autoFocus,\n    placeholder: field.placeholder,\n    \"data-test\": fieldLabel,\n    ...otherProps,\n  };\n\n  const FieldComponent = get(FieldTypeComponent, type, InputField);\n  return <FieldComponent {...fieldProps} form={form} field={field} />;\n}\n\nDynamicFormField.propTypes = { field: FieldType.isRequired };\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport getFieldLabel from \"../getFieldLabel\";\n\nexport default function CheckboxField({ form, field, ...otherProps }) {\n  const fieldLabel = getFieldLabel(field);\n  return <Checkbox {...otherProps}>{fieldLabel}</Checkbox>;\n}\n","import React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Upload from \"antd/lib/upload\";\nimport UploadOutlinedIcon from \"@ant-design/icons/UploadOutlined\";\n\nexport default function FileField({ form, field, ...otherProps }) {\n  const { name, initialValue } = field;\n  const { getFieldValue } = form;\n  const disabled = getFieldValue(name) !== undefined && getFieldValue(name) !== initialValue;\n\n  return (\n    <Upload {...otherProps} beforeUpload={() => false}>\n      <Button disabled={disabled}>\n        <UploadOutlinedIcon /> Click to upload\n      </Button>\n    </Upload>\n  );\n}\n","import React from \"react\";\nimport Select from \"antd/lib/select\";\n\nexport default function SelectField({ form, field, ...otherProps }) {\n  const { readOnly } = field;\n  return (\n    <Select\n      {...otherProps}\n      optionFilterProp=\"children\"\n      loading={field.loading || false}\n      mode={field.mode}\n      getPopupContainer={trigger => trigger.parentNode}>\n      {field.options &&\n        field.options.map(option => (\n          <Select.Option key={`${option.value}`} value={option.value} disabled={readOnly}>\n            {option.name || option.value}\n          </Select.Option>\n        ))}\n    </Select>\n  );\n}\n","import React from \"react\";\nimport InputNumber from \"antd/lib/input-number\";\n\nexport default function NumberField({ form, field, ...otherProps }) {\n  return <InputNumber {...otherProps} />;\n}\n","import React from \"react\";\nimport Input from \"antd/lib/input\";\n\nexport default function TextAreaField({ form, field, ...otherProps }) {\n  return <Input.TextArea {...otherProps} />;\n}\n","import React from \"react\";\nimport AceEditorInput from \"@/components/AceEditorInput\";\n\nexport default function AceEditorField({ form, field, ...otherProps }) {\n  return <AceEditorInput {...otherProps} />;\n}\n","export default function ContentField({ field }) {\n  return field.content;\n}\n","import React from \"react\";\nimport { each, includes, isUndefined, isEmpty, isNil, map, get, some } from \"lodash\";\n\nfunction orderedInputs(properties, order, targetOptions) {\n  const inputs = new Array(order.length);\n  Object.keys(properties).forEach(key => {\n    const position = order.indexOf(key);\n    const input = {\n      name: key,\n      title: properties[key].title,\n      type: properties[key].type,\n      placeholder: isNil(properties[key].default) ? null : properties[key].default.toString(),\n      required: properties[key].required,\n      extra: properties[key].extra,\n      initialValue: targetOptions[key],\n    };\n\n    if (input.type === \"select\") {\n      input.placeholder = \"Select an option\";\n      input.options = properties[key].options;\n    }\n\n    if (position > -1) {\n      inputs[position] = input;\n    } else {\n      inputs.push(input);\n    }\n  });\n  return inputs;\n}\n\nfunction normalizeSchema(configurationSchema) {\n  each(configurationSchema.properties, (prop, name) => {\n    if (name === \"password\" || name === \"passwd\") {\n      prop.type = \"password\";\n    }\n\n    if (name.endsWith(\"File\")) {\n      prop.type = \"file\";\n    }\n\n    if (prop.type === \"boolean\") {\n      prop.type = \"checkbox\";\n    }\n\n    if (prop.type === \"string\") {\n      prop.type = \"text\";\n    }\n\n    if (!isEmpty(prop.enum)) {\n      prop.type = \"select\";\n      prop.options = map(prop.enum, value => ({ value, name: value }));\n    }\n\n    if (!isEmpty(prop.extendedEnum)) {\n      prop.type = \"select\";\n      prop.options = prop.extendedEnum;\n    }\n\n    prop.required = includes(configurationSchema.required, name);\n    prop.extra = includes(configurationSchema.extra_options, name);\n  });\n\n  configurationSchema.order = configurationSchema.order || [];\n}\n\nfunction setDefaultValueToFields(configurationSchema, options = {}) {\n  const properties = configurationSchema.properties;\n  Object.keys(properties).forEach(key => {\n    const property = properties[key];\n    // set default value for checkboxes\n    if (!isUndefined(property.default) && property.type === \"checkbox\") {\n      options[key] = property.default;\n    }\n    // set default or first value when value has predefined options\n    if (property.type === \"select\") {\n      const optionValues = map(property.options, option => option.value);\n      options[key] = includes(optionValues, property.default) ? property.default : optionValues[0];\n    }\n  });\n}\n\nfunction getFields(type = {}, target = { options: {} }) {\n  const configurationSchema = type.configuration_schema;\n  normalizeSchema(configurationSchema);\n  const hasTargetObject = Object.keys(target.options).length > 0;\n  if (!hasTargetObject) {\n    setDefaultValueToFields(configurationSchema, target.options);\n  }\n\n  const isNewTarget = !target.id;\n  const inputs = [\n    {\n      name: \"name\",\n      title: \"Name\",\n      type: \"text\",\n      required: true,\n      initialValue: target.name,\n      contentAfter: React.createElement(\"hr\"),\n      placeholder: `My ${type.name}`,\n      autoFocus: isNewTarget,\n    },\n    ...orderedInputs(configurationSchema.properties, configurationSchema.order, target.options),\n  ];\n\n  return inputs;\n}\n\nfunction updateTargetWithValues(target, values) {\n  target.name = values.name;\n  Object.keys(values).forEach(key => {\n    if (key !== \"name\") {\n      target.options[key] = values[key];\n    }\n  });\n}\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.substr(reader.result.indexOf(\",\") + 1));\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction hasFilledExtraField(type, target) {\n  const extraOptions = get(type, \"configuration_schema.extra_options\", []);\n  return some(extraOptions, optionName => {\n    const defaultOptionValue = get(type, [\"configuration_schema\", \"properties\", optionName, \"default\"]);\n    const targetOptionValue = get(target, [\"options\", optionName]);\n    return !isNil(targetOptionValue) && targetOptionValue !== defaultOptionValue;\n  });\n}\n\nexport default {\n  getFields,\n  updateTargetWithValues,\n  getBase64,\n  hasFilledExtraField,\n};\n","import React, { useState, useReducer, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport { includes, isFunction, filter, find, difference, isEmpty, mapValues } from \"lodash\";\nimport notification from \"@/services/notification\";\nimport Collapse from \"@/components/Collapse\";\nimport DynamicFormField, { FieldType } from \"./DynamicFormField\";\nimport getFieldLabel from \"./getFieldLabel\";\nimport helper from \"./dynamicFormHelper\";\n\nimport \"./DynamicForm.less\";\n\nconst ActionType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  pullRight: PropTypes.bool,\n  disabledWhenDirty: PropTypes.bool,\n});\n\nconst AntdFormType = PropTypes.shape({\n  validateFieldsAndScroll: PropTypes.func,\n});\n\nconst fieldRules = ({ type, required, minLength }) => {\n  const requiredRule = required;\n  const minLengthRule = minLength && includes([\"text\", \"email\", \"password\"], type);\n  const emailTypeRule = type === \"email\";\n\n  return [\n    requiredRule && { required, message: \"This field is required.\" },\n    minLengthRule && { min: minLength, message: \"This field is too short.\" },\n    emailTypeRule && { type: \"email\", message: \"This field must be a valid email.\" },\n  ].filter(rule => rule);\n};\n\nfunction normalizeEmptyValuesToNull(fields, values) {\n  return mapValues(values, (value, key) => {\n    const { initialValue } = find(fields, { name: key }) || {};\n    if ((initialValue === null || initialValue === undefined || initialValue === \"\") && value === \"\") {\n      return null;\n    }\n    return value;\n  });\n}\n\nfunction DynamicFormFields({ fields, feedbackIcons, form }) {\n  return fields.map(field => {\n    const { name, type, initialValue, contentAfter } = field;\n    const fieldLabel = getFieldLabel(field);\n\n    const formItemProps = {\n      name,\n      className: \"m-b-10\",\n      hasFeedback: type !== \"checkbox\" && type !== \"file\" && feedbackIcons,\n      label: type === \"checkbox\" ? \"\" : fieldLabel,\n      rules: fieldRules(field),\n      valuePropName: type === \"checkbox\" ? \"checked\" : \"value\",\n      initialValue,\n    };\n\n    if (type === \"file\") {\n      formItemProps.valuePropName = \"data-value\";\n      formItemProps.getValueFromEvent = e => {\n        if (e && e.fileList[0]) {\n          helper.getBase64(e.file).then(value => {\n            form.setFieldsValue({ [name]: value });\n          });\n        }\n        return undefined;\n      };\n    }\n\n    return (\n      <React.Fragment key={name}>\n        <Form.Item {...formItemProps}>\n          <DynamicFormField field={field} form={form} />\n        </Form.Item>\n        {isFunction(contentAfter) ? contentAfter(form.getFieldValue(name)) : contentAfter}\n      </React.Fragment>\n    );\n  });\n}\n\nDynamicFormFields.propTypes = {\n  fields: PropTypes.arrayOf(FieldType),\n  feedbackIcons: PropTypes.bool,\n  form: AntdFormType.isRequired,\n};\n\nDynamicFormFields.defaultProps = {\n  fields: [],\n  feedbackIcons: false,\n};\n\nconst reducerForActionSet = (state, action) => {\n  if (action.inProgress) {\n    state.add(action.actionName);\n  } else {\n    state.delete(action.actionName);\n  }\n  return new Set(state);\n};\n\nfunction DynamicFormActions({ actions, isFormDirty }) {\n  const [inProgressActions, setActionInProgress] = useReducer(reducerForActionSet, new Set());\n\n  const handleAction = useCallback(action => {\n    const actionName = action.name;\n    if (isFunction(action.callback)) {\n      setActionInProgress({ actionName, inProgress: true });\n      action.callback(() => {\n        setActionInProgress({ actionName, inProgress: false });\n      });\n    }\n  }, []);\n  return actions.map(action => (\n    <Button\n      key={action.name}\n      htmlType=\"button\"\n      className={cx(\"m-t-10\", { \"pull-right\": action.pullRight })}\n      type={action.type}\n      disabled={isFormDirty && action.disableWhenDirty}\n      loading={inProgressActions.has(action.name)}\n      onClick={() => handleAction(action)}>\n      {action.name}\n    </Button>\n  ));\n}\n\nDynamicFormActions.propTypes = {\n  actions: PropTypes.arrayOf(ActionType),\n  isFormDirty: PropTypes.bool,\n};\n\nDynamicFormActions.defaultProps = {\n  actions: [],\n  isFormDirty: false,\n};\n\nexport default function DynamicForm({\n  id,\n  fields,\n  actions,\n  feedbackIcons,\n  hideSubmitButton,\n  defaultShowExtraFields,\n  saveText,\n  onSubmit,\n}) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isTouched, setIsTouched] = useState(false);\n  const [showExtraFields, setShowExtraFields] = useState(defaultShowExtraFields);\n  const [form] = Form.useForm();\n  const extraFields = filter(fields, { extra: true });\n  const regularFields = difference(fields, extraFields);\n\n  const handleFinish = useCallback(\n    values => {\n      setIsSubmitting(true);\n      values = normalizeEmptyValuesToNull(fields, values);\n      onSubmit(\n        values,\n        msg => {\n          setIsSubmitting(false);\n          setIsTouched(false); // reset form touched state\n          notification.success(msg);\n        },\n        msg => {\n          setIsSubmitting(false);\n          notification.error(msg);\n        }\n      );\n    },\n    [fields, onSubmit]\n  );\n\n  const handleFinishFailed = useCallback(\n    ({ errorFields }) => {\n      form.scrollToField(errorFields[0].name);\n    },\n    [form]\n  );\n\n  return (\n    <Form\n      form={form}\n      onFieldsChange={() => {\n        setIsTouched(true);\n      }}\n      id={id}\n      className=\"dynamic-form\"\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      onFinishFailed={handleFinishFailed}>\n      <DynamicFormFields fields={regularFields} feedbackIcons={feedbackIcons} form={form} />\n      {!isEmpty(extraFields) && (\n        <div className=\"extra-options\">\n          <Button\n            type=\"dashed\"\n            block\n            className=\"extra-options-button\"\n            onClick={() => setShowExtraFields(currentShowExtraFields => !currentShowExtraFields)}>\n            Additional Settings\n            <i\n              className={cx(\"fa m-l-5\", { \"fa-caret-up\": showExtraFields, \"fa-caret-down\": !showExtraFields })}\n              aria-hidden=\"true\"\n            />\n          </Button>\n          <Collapse collapsed={!showExtraFields} className=\"extra-options-content\">\n            <DynamicFormFields fields={extraFields} feedbackIcons={feedbackIcons} form={form} />\n          </Collapse>\n        </div>\n      )}\n      {!hideSubmitButton && (\n        <Button className=\"w-100 m-t-20\" type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n          {saveText}\n        </Button>\n      )}\n      <DynamicFormActions actions={actions} isFormDirty={isTouched} />\n    </Form>\n  );\n}\n\nDynamicForm.propTypes = {\n  id: PropTypes.string,\n  fields: PropTypes.arrayOf(FieldType),\n  actions: PropTypes.arrayOf(ActionType),\n  feedbackIcons: PropTypes.bool,\n  hideSubmitButton: PropTypes.bool,\n  defaultShowExtraFields: PropTypes.bool,\n  saveText: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nDynamicForm.defaultProps = {\n  id: null,\n  fields: [],\n  actions: [],\n  feedbackIcons: false,\n  hideSubmitButton: false,\n  defaultShowExtraFields: false,\n  saveText: \"Save\",\n  onSubmit: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isEmpty, toUpper, includes, get, uniqueId } from \"lodash\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Steps from \"antd/lib/steps\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Link from \"@/components/Link\";\nimport { PreviewCard } from \"@/components/PreviewCard\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\n\nconst { Step } = Steps;\nconst { Search } = Input;\n\nconst StepEnum = {\n  SELECT_TYPE: 0,\n  CONFIGURE_IT: 1,\n  DONE: 2,\n};\n\nclass CreateSourceDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    types: PropTypes.arrayOf(PropTypes.object),\n    sourceType: PropTypes.string.isRequired,\n    imageFolder: PropTypes.string.isRequired,\n    helpTriggerPrefix: PropTypes.string,\n    onCreate: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    types: [],\n    helpTriggerPrefix: null,\n  };\n\n  state = {\n    searchText: \"\",\n    selectedType: null,\n    savingSource: false,\n    currentStep: StepEnum.SELECT_TYPE,\n  };\n\n  formId = uniqueId(\"sourceForm\");\n\n  selectType = selectedType => {\n    this.setState({ selectedType, currentStep: StepEnum.CONFIGURE_IT });\n  };\n\n  resetType = () => {\n    if (this.state.currentStep === StepEnum.CONFIGURE_IT) {\n      this.setState({ searchText: \"\", selectedType: null, currentStep: StepEnum.SELECT_TYPE });\n    }\n  };\n\n  createSource = (values, successCallback, errorCallback) => {\n    const { selectedType, savingSource } = this.state;\n    if (!savingSource) {\n      this.setState({ savingSource: true, currentStep: StepEnum.DONE });\n      this.props\n        .onCreate(selectedType, values)\n        .then(data => {\n          successCallback(\"Saved.\");\n          this.props.dialog.close({ success: true, data });\n        })\n        .catch(error => {\n          this.setState({ savingSource: false, currentStep: StepEnum.CONFIGURE_IT });\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    }\n  };\n\n  renderTypeSelector() {\n    const { types } = this.props;\n    const { searchText } = this.state;\n    const filteredTypes = types.filter(\n      type => isEmpty(searchText) || includes(type.name.toLowerCase(), searchText.toLowerCase())\n    );\n    return (\n      <div className=\"m-t-10\">\n        <Search\n          placeholder=\"Search...\"\n          aria-label=\"Search\"\n          onChange={e => this.setState({ searchText: e.target.value })}\n          autoFocus\n          data-test=\"SearchSource\"\n        />\n        <div className=\"scrollbox p-5 m-t-10\" style={{ minHeight: \"30vh\", maxHeight: \"40vh\" }}>\n          {isEmpty(filteredTypes) ? (\n            <EmptyState className=\"\" />\n          ) : (\n            <List size=\"small\" dataSource={filteredTypes} renderItem={item => this.renderItem(item)} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderForm() {\n    const { imageFolder, helpTriggerPrefix } = this.props;\n    const { selectedType } = this.state;\n    const fields = helper.getFields(selectedType);\n    const helpTriggerType = `${helpTriggerPrefix}${toUpper(selectedType.type)}`;\n    return (\n      <div>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <img className=\"p-5\" src={`${imageFolder}/${selectedType.type}.png`} alt={selectedType.name} width=\"48\" />\n          <h4 className=\"m-0\">{selectedType.name}</h4>\n        </div>\n        <div className=\"text-right\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <DynamicForm id={this.formId} fields={fields} onSubmit={this.createSource} feedbackIcons hideSubmitButton />\n        {selectedType.type === \"databricks\" && (\n          <small>\n            By using the Databricks Data Source you agree to the Databricks JDBC/ODBC{\" \"}\n            <Link href=\"https://databricks.com/spark/odbc-driver-download\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Driver Download Terms and Conditions\n            </Link>\n            .\n          </small>\n        )}\n      </div>\n    );\n  }\n\n  renderItem(item) {\n    const { imageFolder } = this.props;\n    return (\n      <List.Item className=\"p-l-10 p-r-10 clickable\" onClick={() => this.selectType(item)}>\n        <PreviewCard\n          title={item.name}\n          imageUrl={`${imageFolder}/${item.type}.png`}\n          roundedImage={false}\n          data-test=\"PreviewItem\"\n          data-test-type={item.type}>\n          <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n        </PreviewCard>\n      </List.Item>\n    );\n  }\n\n  render() {\n    const { currentStep, savingSource } = this.state;\n    const { dialog, sourceType } = this.props;\n    return (\n      <Modal\n        {...dialog.props}\n        title={`Create a New ${sourceType}`}\n        footer={\n          currentStep === StepEnum.SELECT_TYPE\n            ? [\n                <Button key=\"cancel\" onClick={() => dialog.dismiss()} data-test=\"CreateSourceCancelButton\">\n                  Cancel\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" disabled>\n                  Create\n                </Button>,\n              ]\n            : [\n                <Button key=\"previous\" onClick={this.resetType}>\n                  Previous\n                </Button>,\n                <Button\n                  key=\"submit\"\n                  htmlType=\"submit\"\n                  form={this.formId}\n                  type=\"primary\"\n                  loading={savingSource}\n                  data-test=\"CreateSourceSaveButton\">\n                  Create\n                </Button>,\n              ]\n        }>\n        <div data-test=\"CreateSourceDialog\">\n          <Steps className=\"hidden-xs m-b-10\" size=\"small\" current={currentStep} progressDot>\n            {currentStep === StepEnum.CONFIGURE_IT ? (\n              <Step title={<a>Type Selection</a>} className=\"clickable\" onClick={this.resetType} />\n            ) : (\n              <Step title=\"Type Selection\" />\n            )}\n            <Step title=\"Configuration\" />\n            <Step title=\"Done\" />\n          </Steps>\n          {currentStep === StepEnum.SELECT_TYPE && this.renderTypeSelector()}\n          {currentStep !== StepEnum.SELECT_TYPE && this.renderForm()}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateSourceDialog);\n","import React from \"react\";\nimport Menu from \"antd/lib/menu\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Link from \"@/components/Link\";\nimport location from \"@/services/location\";\nimport settingsMenu from \"@/services/settingsMenu\";\n\nfunction wrapSettingsTab(id, options, WrappedComponent) {\n  settingsMenu.add(id, options);\n\n  return function SettingsTab(props) {\n    const activeItem = settingsMenu.getActiveItem(location.path);\n    return (\n      <div className=\"settings-screen\">\n        <div className=\"container\">\n          <PageHeader title=\"Settings\" />\n          <div className=\"bg-white tiled\">\n            <Menu selectedKeys={[activeItem && activeItem.title]} selectable={false} mode=\"horizontal\">\n              {settingsMenu.getAvailableItems().map(item => (\n                <Menu.Item key={item.title}>\n                  <Link href={item.path} data-test=\"SettingsScreenItem\">\n                    {item.title}\n                  </Link>\n                </Menu.Item>\n              ))}\n            </Menu>\n            <div className=\"p-15\">\n              <div>\n                <WrappedComponent {...props} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default wrapSettingsTab;\n","import { has, map, isObject } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nexport const SCHEMA_NOT_SUPPORTED = 1;\nexport const SCHEMA_LOAD_ERROR = 2;\nexport const IMG_ROOT = \"static/images/db-logos\";\n\nfunction mapSchemaColumnsToObject(columns) {\n  return map(columns, column => (isObject(column) ? column : { name: column }));\n}\n\nconst DataSource = {\n  query: () => axios.get(\"api/data_sources\"),\n  get: ({ id }) => axios.get(`api/data_sources/${id}`),\n  types: () => axios.get(\"api/data_sources/types\"),\n  create: data => axios.post(`api/data_sources`, data),\n  save: data => axios.post(`api/data_sources/${data.id}`, data),\n  test: data => axios.post(`api/data_sources/${data.id}/test`),\n  delete: ({ id }) => axios.delete(`api/data_sources/${id}`),\n  fetchSchema: (data, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n\n    return axios\n      .get(`api/data_sources/${data.id}/schema`, { params })\n      .then(data => {\n        if (has(data, \"job\")) {\n          return fetchDataFromJob(data.job.id).catch(error =>\n            error.code === SCHEMA_NOT_SUPPORTED ? [] : Promise.reject(new Error(data.job.error))\n          );\n        }\n        return has(data, \"schema\") ? data.schema : Promise.reject();\n      })\n      .then(tables => map(tables, table => ({ ...table, columns: mapSchemaColumnsToObject(table.columns) })));\n  },\n};\n\nexport default DataSource;\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport { policy } from \"@/services/policy\";\nimport recordEvent from \"@/services/recordEvent\";\nimport routes from \"@/services/routes\";\n\nexport function DataSourcesListComponent({ dataSources, onClickCreate }) {\n  const items = dataSources.map(dataSource => ({\n    title: dataSource.name,\n    imgSrc: `${IMG_ROOT}/${dataSource.type}.png`,\n    href: `data_sources/${dataSource.id}`,\n  }));\n\n  return isEmpty(dataSources) ? (\n    <div className=\"text-center\">\n      There are no data sources yet.\n      {policy.isCreateDataSourceEnabled() && (\n        <div className=\"m-t-5\">\n          <PlainButton type=\"link\" onClick={onClickCreate} data-test=\"CreateDataSourceLink\">\n            Click here\n          </PlainButton>{\" \"}\n          to add one.\n        </div>\n      )}\n    </div>\n  ) : (\n    <CardsList items={items} />\n  );\n}\n\nregisterComponent(\"DataSourcesListComponent\", DataSourcesListComponent);\n\nclass DataSourcesList extends React.Component {\n  static propTypes = {\n    isNewDataSourcePage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDataSourcePage: false,\n    onError: () => {},\n  };\n\n  state = {\n    dataSourceTypes: [],\n    dataSources: [],\n    loading: true,\n  };\n\n  newDataSourceDialog = null;\n\n  componentDidMount() {\n    Promise.all([DataSource.query(), DataSource.types()])\n      .then(values =>\n        this.setState(\n          {\n            dataSources: values[0],\n            dataSourceTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDataSourcePage) {\n              if (policy.canCreateDataSource()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"data_sources\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  componentWillUnmount() {\n    if (this.newDataSourceDialog) {\n      this.newDataSourceDialog.dismiss();\n    }\n  }\n\n  createDataSource = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return DataSource.create(target).then(dataSource => {\n      this.setState({ loading: true });\n      DataSource.query().then(dataSources => this.setState({ dataSources, loading: false }));\n      return dataSource;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    recordEvent(\"view\", \"page\", \"data_sources/new\");\n    this.newDataSourceDialog = CreateSourceDialog.showModal({\n      types: reject(this.state.dataSourceTypes, \"deprecated\"),\n      sourceType: \"Data Source\",\n      imageFolder: IMG_ROOT,\n      helpTriggerPrefix: \"DS_\",\n      onCreate: this.createDataSource,\n    });\n\n    this.newDataSourceDialog\n      .onClose((result = {}) => {\n        this.newDataSourceDialog = null;\n        if (result.success) {\n          navigateTo(`data_sources/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        this.newDataSourceDialog = null;\n        navigateTo(\"data_sources\", true);\n      });\n  };\n\n  render() {\n    const newDataSourceProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDataSourceEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDataSourceEnabled(),\n      \"data-test\": \"CreateDataSourceButton\",\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDataSourceProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Data Source\n          </Button>\n          <DynamicComponent name=\"DataSourcesListExtra\" />\n        </div>\n        {this.state.loading ? (\n          <LoadingState className=\"\" />\n        ) : (\n          <DynamicComponent\n            name=\"DataSourcesListComponent\"\n            dataSources={this.state.dataSources}\n            onClickCreate={this.showCreateSourceDialog}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst DataSourcesListPage = wrapSettingsTab(\n  \"DataSources.List\",\n  {\n    permission: \"admin\",\n    title: \"Data Sources\",\n    path: \"data_sources\",\n    order: 1,\n  },\n  DataSourcesList\n);\n\nroutes.register(\n  \"DataSources.List\",\n  routeWithUserSession({\n    path: \"/data_sources\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"DataSources.New\",\n  routeWithUserSession({\n    path: \"/data_sources/new\",\n    title: \"Data Sources\",\n    render: pageProps => <DataSourcesListPage {...pageProps} isNewDataSourcePage />,\n  })\n);\n","import { get, find, toUpper } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport HelpTrigger, { TYPES as HELP_TRIGGER_TYPES } from \"@/components/HelpTrigger\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport DataSource, { IMG_ROOT } from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDataSource extends React.Component {\n  static propTypes = {\n    dataSourceId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    dataSource: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    DataSource.get({ id: this.props.dataSourceId })\n      .then(dataSource => {\n        const { type } = dataSource;\n        this.setState({ dataSource });\n        DataSource.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDataSource = (values, successCallback, errorCallback) => {\n    const { dataSource } = this.state;\n    helper.updateTargetWithValues(dataSource, values);\n    DataSource.save(dataSource)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDataSource = callback => {\n    const { dataSource } = this.state;\n\n    const doDelete = () => {\n      DataSource.delete(dataSource)\n        .then(() => {\n          notification.success(\"Data source deleted successfully.\");\n          navigateTo(\"data_sources\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Data Source\",\n      content: \"Are you sure you want to delete this data source?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  testConnection = callback => {\n    const { dataSource } = this.state;\n    DataSource.test({ id: dataSource.id })\n      .then(httpResponse => {\n        if (httpResponse.ok) {\n          notification.success(\"Success\");\n        } else {\n          notification.error(\"Connection Test Failed:\", httpResponse.message, { duration: 10 });\n        }\n        callback();\n      })\n      .catch(() => {\n        notification.error(\n          \"Connection Test Failed:\",\n          \"Unknown error occurred while performing connection test. Please try again later.\",\n          { duration: 10 }\n        );\n        callback();\n      });\n  };\n\n  renderForm() {\n    const { dataSource, type } = this.state;\n    const fields = helper.getFields(type, dataSource);\n    const helpTriggerType = `DS_${toUpper(type.type)}`;\n    const formProps = {\n      fields,\n      type,\n      actions: [\n        { name: \"Delete\", type: \"danger\", callback: this.deleteDataSource },\n        { name: \"Test Connection\", pullRight: true, callback: this.testConnection, disableWhenDirty: true },\n      ],\n      onSubmit: this.saveDataSource,\n      feedbackIcons: true,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, dataSource),\n    };\n\n    return (\n      <div className=\"row\" data-test=\"DataSource\">\n        <div className=\"text-right m-r-10\">\n          {HELP_TRIGGER_TYPES[helpTriggerType] && (\n            <HelpTrigger className=\"f-13\" type={helpTriggerType}>\n              Setup Instructions <i className=\"fa fa-question-circle\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">(help)</span>\n            </HelpTrigger>\n          )}\n        </div>\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDataSourcePage = wrapSettingsTab(\"DataSources.Edit\", null, EditDataSource);\n\nroutes.register(\n  \"DataSources.Edit\",\n  routeWithUserSession({\n    path: \"/data_sources/:dataSourceId\",\n    title: \"Data Sources\",\n    render: pageProps => <EditDataSourcePage {...pageProps} />,\n  })\n);\n","import { isEmpty, reject } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport CardsList from \"@/components/cards-list/CardsList\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport CreateSourceDialog from \"@/components/CreateSourceDialog\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport { policy } from \"@/services/policy\";\nimport routes from \"@/services/routes\";\n\nclass DestinationsList extends React.Component {\n  static propTypes = {\n    isNewDestinationPage: PropTypes.bool,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isNewDestinationPage: false,\n    onError: () => {},\n  };\n\n  state = {\n    destinationTypes: [],\n    destinations: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    Promise.all([Destination.query(), Destination.types()])\n      .then(values =>\n        this.setState(\n          {\n            destinations: values[0],\n            destinationTypes: values[1],\n            loading: false,\n          },\n          () => {\n            // all resources are loaded in state\n            if (this.props.isNewDestinationPage) {\n              if (policy.canCreateDestination()) {\n                this.showCreateSourceDialog();\n              } else {\n                navigateTo(\"destinations\", true);\n              }\n            }\n          }\n        )\n      )\n      .catch(error => this.props.onError(error));\n  }\n\n  createDestination = (selectedType, values) => {\n    const target = { options: {}, type: selectedType.type };\n    helper.updateTargetWithValues(target, values);\n\n    return Destination.create(target).then(destination => {\n      this.setState({ loading: true });\n      Destination.query().then(destinations => this.setState({ destinations, loading: false }));\n      return destination;\n    });\n  };\n\n  showCreateSourceDialog = () => {\n    CreateSourceDialog.showModal({\n      types: reject(this.state.destinationTypes, \"deprecated\"),\n      sourceType: \"Alert Destination\",\n      imageFolder: IMG_ROOT,\n      onCreate: this.createDestination,\n    })\n      .onClose((result = {}) => {\n        if (result.success) {\n          navigateTo(`destinations/${result.data.id}`);\n        }\n      })\n      .onDismiss(() => {\n        navigateTo(\"destinations\", true);\n      });\n  };\n\n  renderDestinations() {\n    const { destinations } = this.state;\n    const items = destinations.map(destination => ({\n      title: destination.name,\n      imgSrc: `${IMG_ROOT}/${destination.type}.png`,\n      href: `destinations/${destination.id}`,\n    }));\n\n    return isEmpty(destinations) ? (\n      <div className=\"text-center\">\n        There are no alert destinations yet.\n        {policy.isCreateDestinationEnabled() && (\n          <div className=\"m-t-5\">\n            <PlainButton type=\"link\" onClick={this.showCreateSourceDialog}>\n              Click here\n            </PlainButton>{\" \"}\n            to add one.\n          </div>\n        )}\n      </div>\n    ) : (\n      <CardsList items={items} />\n    );\n  }\n\n  render() {\n    const newDestinationProps = {\n      type: \"primary\",\n      onClick: policy.isCreateDestinationEnabled() ? this.showCreateSourceDialog : null,\n      disabled: !policy.isCreateDestinationEnabled(),\n    };\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button {...newDestinationProps}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Alert Destination\n          </Button>\n        </div>\n        {this.state.loading ? <LoadingState className=\"\" /> : this.renderDestinations()}\n      </div>\n    );\n  }\n}\n\nconst DestinationsListPage = wrapSettingsTab(\n  \"AlertDestinations.List\",\n  {\n    permission: \"admin\",\n    title: \"Alert Destinations\",\n    path: \"destinations\",\n    order: 4,\n  },\n  DestinationsList\n);\n\nroutes.register(\n  \"AlertDestinations.List\",\n  routeWithUserSession({\n    path: \"/destinations\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"AlertDestinations.New\",\n  routeWithUserSession({\n    path: \"/destinations/new\",\n    title: \"Alert Destinations\",\n    render: pageProps => <DestinationsListPage {...pageProps} isNewDestinationPage />,\n  })\n);\n","import { get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport helper from \"@/components/dynamic-form/dynamicFormHelper\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Destination, { IMG_ROOT } from \"@/services/destination\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nclass EditDestination extends React.Component {\n  static propTypes = {\n    destinationId: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onError: () => {},\n  };\n\n  state = {\n    destination: null,\n    type: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    Destination.get({ id: this.props.destinationId })\n      .then(destination => {\n        const { type } = destination;\n        this.setState({ destination });\n        Destination.types().then(types => this.setState({ type: find(types, { type }), loading: false }));\n      })\n      .catch(error => this.props.onError(error));\n  }\n\n  saveDestination = (values, successCallback, errorCallback) => {\n    const { destination } = this.state;\n    helper.updateTargetWithValues(destination, values);\n    Destination.save(destination)\n      .then(() => successCallback(\"Saved.\"))\n      .catch(error => {\n        const message = get(error, \"response.data.message\", \"Failed saving.\");\n        errorCallback(message);\n      });\n  };\n\n  deleteDestination = callback => {\n    const { destination } = this.state;\n\n    const doDelete = () => {\n      Destination.delete(destination)\n        .then(() => {\n          notification.success(\"Alert destination deleted successfully.\");\n          navigateTo(\"destinations\");\n        })\n        .catch(() => {\n          callback();\n        });\n    };\n\n    Modal.confirm({\n      title: \"Delete Alert Destination\",\n      content: \"Are you sure you want to delete this alert destination?\",\n      okText: \"Delete\",\n      okType: \"danger\",\n      onOk: doDelete,\n      onCancel: callback,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  };\n\n  renderForm() {\n    const { destination, type } = this.state;\n    const fields = helper.getFields(type, destination);\n    const formProps = {\n      fields,\n      type,\n      actions: [{ name: \"Delete\", type: \"danger\", callback: this.deleteDestination }],\n      onSubmit: this.saveDestination,\n      defaultShowExtraFields: helper.hasFilledExtraField(type, destination),\n      feedbackIcons: true,\n    };\n\n    return (\n      <div className=\"row\" data-test=\"Destination\">\n        <div className=\"text-center m-b-10\">\n          <img className=\"p-5\" src={`${IMG_ROOT}/${type.type}.png`} alt={type.name} width=\"64\" />\n          <h3 className=\"m-0\">{type.name}</h3>\n        </div>\n        <div className=\"col-md-4 col-md-offset-4 m-b-10\">\n          <DynamicForm {...formProps} />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.loading ? <LoadingState className=\"\" /> : this.renderForm();\n  }\n}\n\nconst EditDestinationPage = wrapSettingsTab(\"AlertDestinations.Edit\", null, EditDestination);\n\nroutes.register(\n  \"AlertDestinations.Edit\",\n  routeWithUserSession({\n    path: \"/destinations/:destinationId\",\n    title: \"Alert Destinations\",\n    render: pageProps => <EditDestinationPage {...pageProps} />,\n  })\n);\n","import React from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\n\nclass CreateGroupDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n  };\n\n  state = {\n    name: \"\",\n  };\n\n  save = () => {\n    this.props.dialog.close({\n      name: this.state.name,\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    return (\n      <Modal {...dialog.props} title=\"Create a New Group\" okText=\"Create\" onOk={() => this.save()}>\n        <Input\n          className=\"form-control\"\n          defaultValue={this.state.name}\n          onChange={event => this.setState({ name: event.target.value })}\n          onPressEnter={() => this.save()}\n          placeholder=\"Group Name\"\n          aria-label=\"Group name\"\n          autoFocus\n        />\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(CreateGroupDialog);\n","import { axios } from \"@/services/axios\";\n\nconst Group = {\n  query: () => axios.get(\"api/groups\"),\n  get: ({ id }) => axios.get(`api/groups/${id}`),\n  create: data => axios.post(`api/groups`, data),\n  save: data => axios.post(`api/groups/${data.id}`, data),\n  delete: data => axios.delete(`api/groups/${data.id}`),\n  members: ({ id }) => axios.get(`api/groups/${id}/members`),\n  addMember: ({ id }, data) => axios.post(`api/groups/${id}/members`, data),\n  removeMember: ({ id, userId }) => axios.delete(`api/groups/${id}/members/${userId}`),\n  dataSources: ({ id }) => axios.get(`api/groups/${id}/data_sources`),\n  addDataSource: ({ id }, data) => axios.post(`api/groups/${id}/data_sources`, data),\n  removeDataSource: ({ id, dataSourceId }) => axios.delete(`api/groups/${id}/data_sources/${dataSourceId}`),\n  updateDataSource: ({ id, dataSourceId }, data) => axios.post(`api/groups/${id}/data_sources/${dataSourceId}`, data),\n};\n\nexport default Group;\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Tooltip from \"@/components/Tooltip\";\nimport notification from \"@/services/notification\";\nimport Group from \"@/services/group\";\n\nfunction deleteGroup(event, group, onGroupDeleted) {\n  Modal.confirm({\n    title: \"Delete Group\",\n    content: \"Are you sure you want to delete this group?\",\n    okText: \"Yes\",\n    okType: \"danger\",\n    cancelText: \"No\",\n    onOk: () => {\n      Group.delete(group).then(() => {\n        notification.success(\"Group deleted successfully.\");\n        onGroupDeleted();\n      });\n    },\n  });\n}\n\nexport default function DeleteGroupButton({ group, title, onClick, children, ...props }) {\n  if (!group) {\n    return null;\n  }\n  const button = (\n    <Button {...props} type=\"danger\" onClick={event => deleteGroup(event, group, onClick)}>\n      {children}\n    </Button>\n  );\n\n  if (isString(title) && title !== \"\") {\n    return (\n      <Tooltip placement=\"top\" title={title} mouseLeaveDelay={0}>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n}\n\nDeleteGroupButton.propTypes = {\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nDeleteGroupButton.defaultProps = {\n  group: null,\n  title: null,\n  onClick: () => {},\n  children: null,\n};\n","import React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport CreateGroupDialog from \"@/components/groups/CreateGroupDialog\";\nimport DeleteGroupButton from \"@/components/groups/DeleteGroupButton\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport Group from \"@/services/group\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\n\nclass GroupsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom(\n      (text, group) => (\n        <div>\n          <Link href={\"groups/\" + group.id}>{group.name}</Link>\n          {group.type === \"builtin\" && <span className=\"label label-default m-l-10\">built-in</span>}\n        </div>\n      ),\n      {\n        field: \"name\",\n        width: null,\n      }\n    ),\n    Columns.custom(\n      (text, group) => (\n        <Button.Group>\n          <Link.Button href={`groups/${group.id}`}>Members</Link.Button>\n          {currentUser.isAdmin && <Link.Button href={`groups/${group.id}/data_sources`}>Data Sources</Link.Button>}\n        </Button.Group>\n      ),\n      {\n        width: \"1%\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom(\n      (text, group) => {\n        const canRemove = group.type !== \"builtin\";\n        return (\n          <DeleteGroupButton\n            className=\"w-100\"\n            disabled={!canRemove}\n            group={group}\n            title={canRemove ? null : \"Cannot delete built-in group\"}\n            onClick={() => this.onGroupDeleted()}>\n            Delete\n          </DeleteGroupButton>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"text-nowrap p-l-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  createGroup = () => {\n    CreateGroupDialog.showModal().onClose(group =>\n      Group.create(group).then(newGroup => navigateTo(`groups/${newGroup.id}`))\n    );\n  };\n\n  onGroupDeleted = () => {\n    this.props.controller.updatePagination({ page: 1 });\n    this.props.controller.update();\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div data-test=\"GroupList\">\n        {currentUser.isAdmin && (\n          <div className=\"m-b-15\">\n            <Button type=\"primary\" onClick={this.createGroup}>\n              <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n              New Group\n            </Button>\n          </div>\n        )}\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              showHeader={false}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst GroupsListPage = wrapSettingsTab(\n  \"Groups.List\",\n  {\n    permission: \"list_users\",\n    title: \"Groups\",\n    path: \"groups\",\n    order: 3,\n  },\n  itemsList(\n    GroupsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return Group.query.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"Groups.List\",\n  routeWithUserSession({\n    path: \"/groups\",\n    title: \"Groups\",\n    render: pageProps => <GroupsListPage {...pageProps} currentPage=\"groups\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\n\nfunction updateGroupName(group, name, onChange) {\n  group.name = name;\n  Group.save(group);\n  onChange();\n}\n\nexport default function GroupName({ group, onChange, ...props }) {\n  if (!group) {\n    return null;\n  }\n\n  const canEdit = currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <h3 {...props}>\n      <EditInPlace\n        className=\"edit-in-place\"\n        isEditable={canEdit}\n        ignoreBlanks\n        onDone={name => updateGroupName(group, name, onChange)}\n        value={group.name}\n      />\n    </h3>\n  );\n}\n\nGroupName.propTypes = {\n  group: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }),\n  onChange: PropTypes.func,\n};\n\nGroupName.defaultProps = {\n  group: null,\n  onChange: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Divider from \"antd/lib/divider\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport { ControllerType } from \"@/components/items-list/ItemsList\";\nimport DeleteGroupButton from \"./DeleteGroupButton\";\n\nimport { currentUser } from \"@/services/auth\";\n\nexport default function DetailsPageSidebar({\n  controller,\n  group,\n  items,\n  canAddMembers,\n  onAddMembersClick,\n  canAddDataSources,\n  onAddDataSourcesClick,\n  onGroupDeleted,\n}) {\n  const canRemove = group && currentUser.isAdmin && group.type !== \"builtin\";\n\n  return (\n    <React.Fragment>\n      <Sidebar.Menu items={items} selected={controller.params.currentPage} />\n      {canAddMembers && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddMembersClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Members\n        </Button>\n      )}\n      {canAddDataSources && (\n        <Button className=\"w-100 m-t-5\" type=\"primary\" onClick={onAddDataSourcesClick}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          Add Data Sources\n        </Button>\n      )}\n      {canRemove && (\n        <React.Fragment>\n          <Divider dashed className=\"m-t-10 m-b-10\" />\n          <DeleteGroupButton className=\"w-100\" group={group} onClick={onGroupDeleted}>\n            Delete Group\n          </DeleteGroupButton>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nDetailsPageSidebar.propTypes = {\n  controller: ControllerType.isRequired,\n  group: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  items: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n\n  canAddMembers: PropTypes.bool,\n  onAddMembersClick: PropTypes.func,\n\n  canAddDataSources: PropTypes.bool,\n  onAddDataSourcesClick: PropTypes.func,\n\n  onGroupDeleted: PropTypes.func,\n};\n\nDetailsPageSidebar.defaultProps = {\n  group: null,\n\n  canAddMembers: false,\n  onAddMembersClick: null,\n\n  canAddDataSources: false,\n  onAddDataSourcesClick: null,\n\n  onGroupDeleted: null,\n};\n","import { filter, map, includes, toLower } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport DownOutlinedIcon from \"@ant-design/icons/DownOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { DataSourcePreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport DataSource from \"@/services/data-source\";\nimport routes from \"@/services/routes\";\n\nclass GroupDataSources extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, datasource) => <DataSourcePreviewCard dataSource={datasource} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, datasource) => {\n        const menu = (\n          <Menu\n            selectedKeys={[datasource.view_only ? \"viewonly\" : \"full\"]}\n            onClick={item => this.setDataSourcePermissions(datasource, item.key)}>\n            <Menu.Item key=\"full\">Full Access</Menu.Item>\n            <Menu.Item key=\"viewonly\">View Only</Menu.Item>\n          </Menu>\n        );\n\n        return (\n          <Dropdown trigger={[\"click\"]} overlay={menu}>\n            <Button className=\"w-100\" aria-label=\"Permissions\">\n              {datasource.view_only ? \"View Only\" : \"Full Access\"}\n              <DownOutlinedIcon aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        );\n      },\n      {\n        width: \"1%\",\n        className: \"p-r-0\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n    Columns.custom(\n      (text, datasource) => (\n        <Button className=\"w-100\" type=\"danger\" onClick={() => this.removeGroupDataSource(datasource)}>\n          Remove\n        </Button>\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupDataSource = datasource => {\n    Group.removeDataSource({ id: this.groupId, dataSourceId: datasource.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove data source from group.\");\n      });\n  };\n\n  setDataSourcePermissions = (datasource, permission) => {\n    const viewOnly = permission !== \"full\";\n\n    Group.updateDataSource({ id: this.groupId, dataSourceId: datasource.id }, { view_only: viewOnly })\n      .then(() => {\n        datasource.view_only = viewOnly;\n        this.forceUpdate();\n      })\n      .catch(() => {\n        notification.error(\"Failed change data source permissions.\");\n      });\n  };\n\n  addDataSources = () => {\n    const allDataSources = DataSource.query();\n    const alreadyAddedDataSources = map(this.props.controller.allItems, ds => ds.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Data Sources\",\n      inputPlaceholder: \"Search data sources...\",\n      selectedItemsTitle: \"New Data Sources\",\n      searchItems: searchTerm => {\n        searchTerm = toLower(searchTerm);\n        return allDataSources.then(items => filter(items, ds => includes(toLower(ds.name), searchTerm)));\n      },\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedDataSources, item.id);\n        return {\n          content: (\n            <DataSourcePreviewCard dataSource={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </DataSourcePreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <DataSourcePreviewCard dataSource={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </DataSourcePreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, ds => Group.addDataSource({ id: this.groupId }, { data_source_id: ds.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddDataSources={currentUser.isAdmin}\n              onAddDataSourcesClick={this.addDataSources}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no data sources in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addDataSources}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Data Sources\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupDataSourcesPage = wrapSettingsTab(\n  \"Groups.DataSources\",\n  null,\n  itemsList(\n    GroupDataSources,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.dataSources.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.DataSources\",\n  routeWithUserSession({\n    path: \"/groups/:groupId/data_sources\",\n    title: \"Group Data Sources\",\n    render: pageProps => <GroupDataSourcesPage {...pageProps} currentPage=\"datasources\" />,\n  })\n);\n","import { includes, map } from \"lodash\";\nimport React from \"react\";\nimport Button from \"antd/lib/button\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport SelectItemsDialog from \"@/components/SelectItemsDialog\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\n\nimport GroupName from \"@/components/groups/GroupName\";\nimport ListItemAddon from \"@/components/groups/ListItemAddon\";\nimport Sidebar from \"@/components/groups/DetailsPageSidebar\";\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport notification from \"@/services/notification\";\nimport { currentUser } from \"@/services/auth\";\nimport Group from \"@/services/group\";\nimport User from \"@/services/user\";\nimport routes from \"@/services/routes\";\n\nclass GroupMembers extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  groupId = parseInt(this.props.controller.params.groupId, 10);\n\n  group = null;\n\n  sidebarMenu = [\n    {\n      key: \"users\",\n      href: `groups/${this.groupId}`,\n      title: \"Members\",\n    },\n    {\n      key: \"datasources\",\n      href: `groups/${this.groupId}/data_sources`,\n      title: \"Data Sources\",\n      isAvailable: () => currentUser.isAdmin,\n    },\n  ];\n\n  listColumns = [\n    Columns.custom((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom(\n      (text, user) => {\n        if (!this.group) {\n          return null;\n        }\n\n        // cannot remove self from built-in groups\n        if (this.group.type === \"builtin\" && currentUser.id === user.id) {\n          return null;\n        }\n        return (\n          <Button className=\"w-100\" type=\"danger\" onClick={event => this.removeGroupMember(event, user)}>\n            Remove\n          </Button>\n        );\n      },\n      {\n        width: \"1%\",\n        isAvailable: () => currentUser.isAdmin,\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    Group.get({ id: this.groupId })\n      .then(group => {\n        this.group = group;\n        this.forceUpdate();\n      })\n      .catch(error => {\n        this.props.controller.handleError(error);\n      });\n  }\n\n  removeGroupMember = (event, user) =>\n    Group.removeMember({ id: this.groupId, userId: user.id })\n      .then(() => {\n        this.props.controller.updatePagination({ page: 1 });\n        this.props.controller.update();\n      })\n      .catch(() => {\n        notification.error(\"Failed to remove member from group.\");\n      });\n\n  addMembers = () => {\n    const alreadyAddedUsers = map(this.props.controller.allItems, u => u.id);\n    SelectItemsDialog.showModal({\n      dialogTitle: \"Add Members\",\n      inputPlaceholder: \"Search users...\",\n      selectedItemsTitle: \"New Members\",\n      searchItems: searchTerm => User.query({ q: searchTerm }).then(({ results }) => results),\n      renderItem: (item, { isSelected }) => {\n        const alreadyInGroup = includes(alreadyAddedUsers, item.id);\n        return {\n          content: (\n            <UserPreviewCard user={item}>\n              <ListItemAddon isSelected={isSelected} alreadyInGroup={alreadyInGroup} />\n            </UserPreviewCard>\n          ),\n          isDisabled: alreadyInGroup,\n          className: isSelected || alreadyInGroup ? \"selected\" : \"\",\n        };\n      },\n      renderStagedItem: (item, { isSelected }) => ({\n        content: (\n          <UserPreviewCard user={item}>\n            <ListItemAddon isSelected={isSelected} isStaged />\n          </UserPreviewCard>\n        ),\n      }),\n    }).onClose(items => {\n      const promises = map(items, u => Group.addMember({ id: this.groupId }, { user_id: u.id }));\n      return Promise.all(promises).then(() => this.props.controller.update());\n    });\n  };\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <div data-test=\"Group\">\n        <GroupName className=\"d-block m-t-0 m-b-15\" group={this.group} onChange={() => this.forceUpdate()} />\n        <Layout>\n          <Layout.Sidebar>\n            <Sidebar\n              controller={controller}\n              group={this.group}\n              items={this.sidebarMenu}\n              canAddMembers={currentUser.isAdmin}\n              onAddMembersClick={this.addMembers}\n              onGroupDeleted={() => navigateTo(\"groups\")}\n            />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && (\n              <div className=\"text-center\">\n                <p>There are no members in this group yet.</p>\n                {currentUser.isAdmin && (\n                  <Button type=\"primary\" onClick={this.addMembers}>\n                    <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                    Add Members\n                  </Button>\n                )}\n              </div>\n            )}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  showHeader={false}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst GroupMembersPage = wrapSettingsTab(\n  \"Groups.Members\",\n  null,\n  itemsList(\n    GroupMembers,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest(unused, { params: { groupId } }) {\n          return { id: groupId };\n        },\n        getResource() {\n          return Group.members.bind(Group);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"name\" })\n  )\n);\n\nroutes.register(\n  \"Groups.Members\",\n  routeWithUserSession({\n    path: \"/groups/:groupId\",\n    title: \"Group Members\",\n    render: pageProps => <GroupMembersPage {...pageProps} currentPage=\"users\" />,\n  })\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\nimport BigMessage from \"@/components/BigMessage\";\nimport NoTaggedObjectsFound from \"@/components/NoTaggedObjectsFound\";\nimport EmptyState, { EmptyStateHelpMessage } from \"@/components/empty-state/EmptyState\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\n\nexport default function QueriesListEmptyState({ page, searchTerm, selectedTags }) {\n  if (searchTerm !== \"\") {\n    return <BigMessage message=\"Sorry, we couldn't find anything.\" icon=\"fa-search\" />;\n  }\n  if (selectedTags.length > 0) {\n    return <NoTaggedObjectsFound objectType=\"queries\" tags={selectedTags} />;\n  }\n  switch (page) {\n    case \"favorites\":\n      return <BigMessage message=\"Mark queries as Favorite to list them here.\" icon=\"fa-star\" />;\n    case \"archive\":\n      return <BigMessage message=\"Archived queries will be listed here.\" icon=\"fa-archive\" />;\n    case \"my\":\n      const my_msg = currentUser.hasPermission(\"create_query\") ? (\n        <span>\n          <Link.Button href=\"queries/new\" type=\"primary\" size=\"small\">\n            Create your first query!\n          </Link.Button>{\" \"}\n          <HelpTrigger className=\"f-13\" type=\"QUERIES\" showTooltip={false}>\n            Need help?\n          </HelpTrigger>\n        </span>\n      ) : (\n        <span>Sorry, we couldn't find anything.</span>\n      );\n      return <BigMessage icon=\"fa-search\">{my_msg}</BigMessage>;\n    default:\n      return (\n        <DynamicComponent name=\"QueriesList.EmptyState\">\n          <EmptyState\n            icon=\"fa fa-code\"\n            illustration=\"query\"\n            description=\"Getting the data from your datasources.\"\n            helpMessage={<EmptyStateHelpMessage helpTriggerType=\"QUERIES\" />}\n          />\n        </DynamicComponent>\n      );\n  }\n}\n\nQueriesListEmptyState.propTypes = {\n  page: PropTypes.string.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  selectedTags: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n","import React, { useEffect, useRef } from \"react\";\nimport cx from \"classnames\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport PageHeader from \"@/components/PageHeader\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport useItemsListExtraActions from \"@/components/items-list/hooks/useItemsListExtraActions\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\n\nimport { Query } from \"@/services/query\";\nimport { currentUser } from \"@/services/auth\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport QueriesListEmptyState from \"./QueriesListEmptyState\";\n\nimport \"./queries-list.css\";\n\nconst sidebarMenu = [\n  {\n    key: \"all\",\n    href: \"queries\",\n    title: \"All Queries\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-code\" />,\n  },\n  {\n    key: \"my\",\n    href: \"queries/my\",\n    title: \"My Queries\",\n    icon: () => <Sidebar.ProfileImage user={currentUser} />,\n  },\n  {\n    key: \"favorites\",\n    href: \"queries/favorites\",\n    title: \"Favorites\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-star\" />,\n  },\n  {\n    key: \"archive\",\n    href: \"queries/archive\",\n    title: \"Archived\",\n    icon: () => <Sidebar.MenuIcon icon=\"fa fa-archive\" />,\n  },\n];\n\nconst listColumns = [\n  Columns.favorites({ className: \"p-r-0\" }),\n  Columns.custom.sortable(\n    (text, item) => (\n      <React.Fragment>\n        <Link className=\"table-main-title\" href={\"queries/\" + item.id}>\n          {item.name}\n        </Link>\n        <QueryTagsControl className=\"d-block\" tags={item.tags} isDraft={item.is_draft} isArchived={item.is_archived} />\n      </React.Fragment>\n    ),\n    {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }\n  ),\n  Columns.custom((text, item) => item.user.name, { title: \"Created By\", width: \"1%\" }),\n  Columns.dateTime.sortable({ title: \"Created At\", field: \"created_at\", width: \"1%\" }),\n  Columns.dateTime.sortable({\n    title: \"Last Executed At\",\n    field: \"retrieved_at\",\n    orderByField: \"executed_at\",\n    width: \"1%\",\n  }),\n  Columns.custom.sortable((text, item) => <SchedulePhrase schedule={item.schedule} isNew={item.isNew()} />, {\n    title: \"Refresh Schedule\",\n    field: \"schedule\",\n    width: \"1%\",\n  }),\n];\n\nfunction QueriesListExtraActions(props) {\n  return <DynamicComponent name=\"QueriesList.Actions\" {...props} />;\n}\n\nfunction QueriesList({ controller }) {\n  const controllerRef = useRef();\n  controllerRef.current = controller;\n\n  useEffect(() => {\n    const unlistenLocationChanges = location.listen((unused, action) => {\n      const searchTerm = location.search.q || \"\";\n      if (action === \"PUSH\" && searchTerm !== controllerRef.current.searchTerm) {\n        controllerRef.current.updateSearch(searchTerm);\n      }\n    });\n\n    return () => {\n      unlistenLocationChanges();\n    };\n  }, []);\n\n  const {\n    areExtraActionsAvailable,\n    listColumns: tableColumns,\n    Component: ExtraActionsComponent,\n    selectedItems,\n  } = useItemsListExtraActions(controller, listColumns, QueriesListExtraActions);\n\n  return (\n    <div className=\"page-queries-list\">\n      <div className=\"container\">\n        <PageHeader\n          title={controller.params.pageTitle}\n          actions={\n            currentUser.hasPermission(\"create_query\") ? (\n              <Link.Button block type=\"primary\" href=\"queries/new\">\n                <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n                New Query\n              </Link.Button>\n            ) : null\n          }\n        />\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              placeholder=\"Search Queries...\"\n              label=\"Search queries\"\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n            />\n            <Sidebar.Menu items={sidebarMenu} selected={controller.params.currentPage} />\n            <Sidebar.Tags url=\"api/queries/tags\" onChange={controller.updateSelectedTags} showUnselectAll />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {controller.isLoaded && controller.isEmpty ? (\n              <QueriesListEmptyState\n                page={controller.params.currentPage}\n                searchTerm={controller.searchTerm}\n                selectedTags={controller.selectedTags}\n              />\n            ) : (\n              <React.Fragment>\n                <div className={cx({ \"m-b-10\": areExtraActionsAvailable })}>\n                  <ExtraActionsComponent selectedItems={selectedItems} />\n                </div>\n                <div className=\"bg-white tiled table-responsive\">\n                  <ItemsTable\n                    items={controller.pageItems}\n                    loading={!controller.isLoaded}\n                    columns={tableColumns}\n                    orderByField={controller.orderByField}\n                    orderByReverse={controller.orderByReverse}\n                    toggleSorting={controller.toggleSorting}\n                  />\n                  <Paginator\n                    showPageSizeSelect\n                    totalCount={controller.totalItemsCount}\n                    pageSize={controller.itemsPerPage}\n                    onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                    page={controller.page}\n                    onChange={page => controller.updatePagination({ page })}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </Layout.Content>\n        </Layout>\n      </div>\n    </div>\n  );\n}\n\nQueriesList.propTypes = {\n  controller: ControllerType.isRequired,\n};\n\nconst QueriesListPage = itemsList(\n  QueriesList,\n  () =>\n    new ResourceItemsSource({\n      getResource({ params: { currentPage } }) {\n        return {\n          all: Query.query.bind(Query),\n          my: Query.myQueries.bind(Query),\n          favorites: Query.favorites.bind(Query),\n          archive: Query.archive.bind(Query),\n        }[currentPage];\n      },\n      getItemProcessor() {\n        return item => new Query(item);\n      },\n    }),\n  () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n);\n\nroutes.register(\n  \"Queries.List\",\n  routeWithUserSession({\n    path: \"/queries\",\n    title: \"Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"all\" />,\n  })\n);\nroutes.register(\n  \"Queries.Favorites\",\n  routeWithUserSession({\n    path: \"/queries/favorites\",\n    title: \"Favorite Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"favorites\" />,\n  })\n);\nroutes.register(\n  \"Queries.Archived\",\n  routeWithUserSession({\n    path: \"/queries/archive\",\n    title: \"Archived Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"archive\" />,\n  })\n);\nroutes.register(\n  \"Queries.My\",\n  routeWithUserSession({\n    path: \"/queries/my\",\n    title: \"My Queries\",\n    render: pageProps => <QueriesListPage {...pageProps} currentPage=\"my\" />,\n  })\n);\n","import d3 from \"d3\";\nimport React, { useRef, useMemo, useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Resizable as ReactResizable } from \"react-resizable\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\n\nimport \"./index.less\";\n\nexport default function Resizable({ toggleShortcut, direction, sizeAttribute, children }) {\n  const [size, setSize] = useState(0);\n  const elementRef = useRef();\n  const wasUsingTouchEventsRef = useRef(false);\n  const wasResizedRef = useRef(false);\n\n  const sizeProp = direction === \"horizontal\" ? \"width\" : \"height\";\n  sizeAttribute = sizeAttribute || sizeProp;\n\n  const getElementSize = useCallback(() => {\n    if (!elementRef.current) {\n      return 0;\n    }\n    return Math.floor(elementRef.current.getBoundingClientRect()[sizeProp]);\n  }, [sizeProp]);\n\n  const savedSize = useRef(null);\n  const toggle = useCallback(() => {\n    if (!elementRef.current) {\n      return;\n    }\n\n    const element = d3.select(elementRef.current);\n    let targetSize;\n    if (savedSize.current === null) {\n      targetSize = \"0px\";\n      savedSize.current = `${getElementSize()}px`;\n    } else {\n      targetSize = savedSize.current;\n      savedSize.current = null;\n    }\n\n    element\n      .style(sizeAttribute, savedSize.current || \"0px\")\n      .transition()\n      .duration(200)\n      .ease(\"swing\")\n      .style(sizeAttribute, targetSize);\n\n    // update state to new element's size\n    setSize(parseInt(targetSize) || 0);\n  }, [getElementSize, sizeAttribute]);\n\n  const resizeHandle = useMemo(\n    () => (\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n      <span\n        className={`react-resizable-handle react-resizable-handle-${direction}`}\n        role=\"separator\"\n        onClick={() => {\n          // TODO: add key controls\n          // On desktops resize uses `mousedown`/`mousemove`/`mouseup` events, and there is a conflict\n          // with this `click` handler: after user releases mouse - this handler will be executed.\n          // So we use `wasResized` flag to check if there was actual resize or user just pressed and released\n          // left mouse button (see also resize event handlers where ths flag is set).\n          // On mobile devices `touchstart`/`touchend` events wll be used, so it's safe to just execute this handler.\n          // To detect which set of events was actually used during particular resize operation, we pass\n          // `onMouseDown` handler to draggable core and check event type there (see also that handler's code).\n          if (wasUsingTouchEventsRef.current || !wasResizedRef.current) {\n            toggle();\n          }\n          wasUsingTouchEventsRef.current = false;\n          wasResizedRef.current = false;\n        }}\n      />\n    ),\n    [direction, toggle]\n  );\n\n  useEffect(() => {\n    if (toggleShortcut) {\n      const shortcuts = {\n        [toggleShortcut]: toggle,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [toggleShortcut, toggle]);\n\n  const resizeEventHandlers = useMemo(\n    () => ({\n      onResizeStart: () => {\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `draggableCore::onMouseDown` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n      onResize: (unused, data) => {\n        // update element directly for better UI responsiveness\n        d3.select(elementRef.current).style(sizeAttribute, `${data.size[sizeProp]}px`);\n        setSize(data.size[sizeProp]);\n        wasResizedRef.current = true;\n      },\n      onResizeStop: () => {\n        if (wasResizedRef.current) {\n          savedSize.current = null;\n        }\n      },\n    }),\n    [sizeProp, getElementSize, sizeAttribute]\n  );\n\n  const draggableCoreOptions = useMemo(\n    () => ({\n      onMouseDown: e => {\n        // In some cases this handler is executed twice during the same resize operation - first time\n        // with `touchstart` event and second time with `mousedown` (probably emulated by browser).\n        // Therefore we set the flag only when we receive `touchstart` because in ths case it's definitely\n        // mobile browser (desktop browsers will also send `mousedown` but never `touchstart`).\n        if (e.type === \"touchstart\") {\n          wasUsingTouchEventsRef.current = true;\n        }\n\n        // use element's size as initial value (it will also check constraints set in CSS)\n        // updated here and in `onResizeStart` handler to ensure that right value will be used\n        setSize(getElementSize());\n      },\n    }),\n    [getElementSize]\n  );\n\n  if (!children) {\n    return null;\n  }\n\n  children = React.createElement(children.type, { ...children.props, ref: elementRef });\n\n  return (\n    <ReactResizable\n      className=\"resizable-component\"\n      axis={direction === \"horizontal\" ? \"x\" : \"y\"}\n      resizeHandles={[direction === \"horizontal\" ? \"e\" : \"s\"]}\n      handle={resizeHandle}\n      width={direction === \"horizontal\" ? size : 0}\n      height={direction === \"vertical\" ? size : 0}\n      minConstraints={[0, 0]}\n      {...resizeEventHandlers}\n      draggableOpts={draggableCoreOptions}>\n      {children}\n    </ReactResizable>\n  );\n}\n\nResizable.propTypes = {\n  direction: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\n  sizeAttribute: PropTypes.string,\n  toggleShortcut: PropTypes.string,\n  children: PropTypes.element,\n};\n\nResizable.defaultProps = {\n  direction: \"horizontal\",\n  sizeAttribute: null, // \"width\"/\"height\" - depending on `direction`\n  toggleShortcut: null,\n  children: null,\n};\n","import { trim } from \"lodash\";\nimport sqlFormatter from \"sql-formatter\";\n\ninterface QueryFormatterMap {\n  [syntax: string]: (queryText: string) => string;\n}\n\nconst QueryFormatters: QueryFormatterMap = {\n  sql: queryText => sqlFormatter.format(trim(queryText)),\n  json: queryText => JSON.stringify(JSON.parse(queryText), null, 4),\n};\n\nexport function isFormatQueryAvailable(syntax: string) {\n  return syntax in QueryFormatters;\n}\n\nexport function formatQuery(queryText: string, syntax: string) {\n  if (!isFormatQueryAvailable(syntax)) {\n    return queryText;\n  }\n  const formatter = QueryFormatters[syntax];\n  return formatter(queryText);\n}\n","import { isNil, isEmpty } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\n\nexport default function useQueryFlags(query, dataSource = null) {\n  dataSource = dataSource || { view_only: true };\n\n  return useMemo(\n    () => ({\n      // state flags\n      isNew: isNil(query.id),\n      isDraft: query.is_draft,\n      isArchived: query.is_archived,\n\n      // permissions flags\n      canCreate: currentUser.hasPermission(\"create_query\"),\n      canView: currentUser.hasPermission(\"view_query\"),\n      canEdit: currentUser.hasPermission(\"edit_query\") && policy.canEdit(query),\n      canViewSource: currentUser.hasPermission(\"view_source\"),\n      canExecute:\n        !isEmpty(query.query) &&\n        policy.canRun(query) &&\n        (query.is_safe || (currentUser.hasPermission(\"execute_query\") && !dataSource.view_only)),\n      canFork: currentUser.hasPermission(\"edit_query\") && !dataSource.view_only,\n      canSchedule: currentUser.hasPermission(\"schedule_query\"),\n    }),\n    [query, dataSource.view_only]\n  );\n}\n","import { extend } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction confirmArchive() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Archive Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">Are you sure you want to archive this query?</div>\n          <div>All alerts and dashboard widgets created with its visualizations will be deleted.</div>\n        </React.Fragment>\n      ),\n      okText: \"Archive\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doArchiveQuery(query) {\n  return Query.delete({ id: query.id })\n    .then(() => {\n      return extend(query.clone(), { is_archived: true, schedule: null });\n    })\n    .catch(error => {\n      notification.error(\"Query could not be archived.\");\n      return Promise.reject(error);\n    });\n}\n\nexport default function useArchiveQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    confirmArchive()\n      .then(() => doArchiveQuery(query))\n      .then(handleChange);\n  }, [query, handleChange]);\n}\n","import { isNil, isObject, extend, keys, map, omit, pick, uniq, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"antd/lib/modal\";\nimport { Query } from \"@/services/query\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { policy } from \"@/services/policy\";\n\nclass SaveQueryError extends Error {\n  constructor(message, detailedMessage = null) {\n    super(message);\n    this.detailedMessage = detailedMessage;\n  }\n}\n\nclass SaveQueryConflictError extends SaveQueryError {\n  constructor() {\n    super(\n      \"Changes not saved\",\n      <React.Fragment>\n        <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n        <div>Please copy/backup your changes and reload this page.</div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction confirmOverwrite() {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title: \"Overwrite Query\",\n      content: (\n        <React.Fragment>\n          <div className=\"m-b-5\">It seems like the query has been modified by another user.</div>\n          <div>Are you sure you want to overwrite the query with your version?</div>\n        </React.Fragment>\n      ),\n      okText: \"Overwrite\",\n      okType: \"danger\",\n      onOk: () => {\n        resolve();\n      },\n      onCancel: () => {\n        reject();\n      },\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  });\n}\n\nfunction doSaveQuery(data, { canOverwrite = false } = {}) {\n  // omit parameter properties that don't need to be stored\n  if (isObject(data.options) && data.options.parameters) {\n    data.options = {\n      ...data.options,\n      parameters: map(data.options.parameters, p => p.toSaveableObject()),\n    };\n  }\n\n  return Query.save(data).catch(error => {\n    if (get(error, \"response.status\") === 409) {\n      if (canOverwrite) {\n        return confirmOverwrite()\n          .then(() => Query.save(omit(data, [\"version\"])))\n          .catch(() => Promise.reject(new SaveQueryConflictError()));\n      }\n      return Promise.reject(new SaveQueryConflictError());\n    }\n    return Promise.reject(new SaveQueryError(\"Query could not be saved\"));\n  });\n}\n\nexport default function useUpdateQuery(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (data = null, { successMessage = \"Query saved\" } = {}) => {\n      if (isObject(data)) {\n        // Don't save new query with partial data\n        if (query.isNew()) {\n          handleChange(extend(query.clone(), data));\n          return;\n        }\n        data = { ...data, id: query.id, version: query.version };\n      } else {\n        data = pick(query, [\n          \"id\",\n          \"version\",\n          \"schedule\",\n          \"query\",\n          \"description\",\n          \"name\",\n          \"data_source_id\",\n          \"options\",\n          \"latest_query_data_id\",\n          \"is_draft\",\n          \"tags\",\n        ]);\n      }\n\n      return doSaveQuery(data, { canOverwrite: policy.canEdit(query) })\n        .then(updatedQuery => {\n          if (!isNil(successMessage)) {\n            notification.success(successMessage);\n          }\n          handleChange(\n            extend(\n              query.clone(),\n              // if server returned completely new object (currently possible only when saving new query) -\n              // update all fields; otherwise pick only changed fields\n              updatedQuery.id !== query.id ? updatedQuery : pick(updatedQuery, uniq([\"id\", \"version\", ...keys(data)]))\n            )\n          );\n        })\n        .catch(error => {\n          const notificationOptions = {};\n          if (error instanceof SaveQueryConflictError) {\n            notificationOptions.duration = null;\n          }\n          notification.error(error.message, error.detailedMessage, notificationOptions);\n        });\n    },\n    [query, handleChange]\n  );\n}\n","import { noop, extend, pick } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport url from \"url\";\nimport qs from \"query-string\";\nimport { Query } from \"@/services/query\";\n\nfunction keepCurrentUrlParams(targetUrl) {\n  const currentUrlParams = qs.parse(window.location.search);\n  targetUrl = url.parse(targetUrl);\n  const targetUrlParams = qs.parse(targetUrl.search);\n  return url.format(\n    extend(pick(targetUrl, [\"protocol\", \"auth\", \"host\", \"pathname\", \"hash\"]), {\n      search: qs.stringify(extend(currentUrlParams, targetUrlParams)),\n    })\n  );\n}\n\nexport default function useDuplicateQuery(query) {\n  const [isDuplicating, setIsDuplicating] = useState(false);\n\n  const duplicateQuery = useCallback(() => {\n    // To prevent opening the same tab, name must be unique for each browser\n    const tabName = `duplicatedQueryTab/${Math.random().toString()}`;\n\n    // We should open tab here because this moment is a part of user interaction;\n    // later browser will block such attempts\n    const tab = window.open(\"\", tabName);\n\n    setIsDuplicating(true);\n    Query.fork({ id: query.id })\n      .then(newQuery => {\n        tab.location = keepCurrentUrlParams(newQuery.getUrl(true));\n      })\n      .finally(() => {\n        setIsDuplicating(false);\n      });\n  }, [query.id]);\n\n  return [isDuplicating, isDuplicating ? noop : duplicateQuery];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"@/components/Tooltip\";\nimport CopyOutlinedIcon from \"@ant-design/icons/CopyOutlined\";\nimport \"./CodeBlock.less\";\n\nexport default class CodeBlock extends React.Component {\n  static propTypes = {\n    copyable: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    copyable: false,\n    children: null,\n  };\n\n  state = { copied: null };\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.copyFeatureEnabled = props.copyable && document.queryCommandSupported(\"copy\");\n    this.resetCopyState = null;\n  }\n\n  componentWillUnmount() {\n    if (this.resetCopyState) {\n      clearTimeout(this.resetCopyState);\n    }\n  }\n\n  copy = () => {\n    // select text\n    window.getSelection().selectAllChildren(this.ref.current);\n\n    // copy\n    try {\n      const success = document.execCommand(\"copy\");\n      if (!success) {\n        throw new Error();\n      }\n      this.setState({ copied: \"Copied!\" });\n    } catch (err) {\n      this.setState({\n        copied: \"Copy failed\",\n      });\n    }\n\n    // reset selection\n    window.getSelection().removeAllRanges();\n\n    // reset tooltip\n    this.resetCopyState = setTimeout(() => this.setState({ copied: null }), 2000);\n  };\n\n  render() {\n    const { copyable, children, ...props } = this.props;\n\n    const copyButton = (\n      <Tooltip title={this.state.copied || \"Copy\"}>\n        <Button icon={<CopyOutlinedIcon />} type=\"dashed\" size=\"small\" onClick={this.copy} />\n      </Tooltip>\n    );\n\n    return (\n      <div className=\"code-block\">\n        <code {...props} ref={this.ref}>\n          {children}\n        </code>\n        {this.copyFeatureEnabled && copyButton}\n      </div>\n    );\n  }\n}\n","import { extend } from \"lodash\";\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport CodeBlock from \"@/components/CodeBlock\";\nimport { axios } from \"@/services/axios\";\nimport { clientConfig } from \"@/services/auth\";\nimport notification from \"@/services/notification\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nimport \"./index.less\";\nimport { policy } from \"@/services/policy\";\n\nfunction ApiKeyDialog({ dialog, ...props }) {\n  const [query, setQuery] = useState(props.query);\n  const [updatingApiKey, setUpdatingApiKey] = useState(false);\n\n  const regenerateQueryApiKey = useCallback(() => {\n    setUpdatingApiKey(true);\n    axios\n      .post(`api/queries/${query.id}/regenerate_api_key`)\n      .then(data => {\n        setUpdatingApiKey(false);\n        setQuery(extend(query.clone(), { api_key: data.api_key }));\n      })\n      .catch(() => {\n        setUpdatingApiKey(false);\n        notification.error(\"Failed to update API key\");\n      });\n  }, [query]);\n\n  const { csvUrl, jsonUrl } = useMemo(\n    () => ({\n      csvUrl: `${clientConfig.basePath}api/queries/${query.id}/results.csv?api_key=${query.api_key}`,\n      jsonUrl: `${clientConfig.basePath}api/queries/${query.id}/results.json?api_key=${query.api_key}`,\n    }),\n    [query.id, query.api_key]\n  );\n\n  const csvResultsLabelId = useUniqueId(\"csv-results-label\");\n  const jsonResultsLabelId = useUniqueId(\"json-results-label\");\n\n  return (\n    <Modal {...dialog.props} width={600} footer={<Button onClick={() => dialog.close(query)}>Close</Button>}>\n      <div className=\"query-api-key-dialog-wrapper\">\n        <h5>API Key</h5>\n        <div className=\"m-b-20\">\n          <Input.Group compact>\n            <Input readOnly value={query.api_key} aria-label=\"Query API Key\" />\n            {policy.canEdit(query) && (\n              <Button disabled={updatingApiKey} loading={updatingApiKey} onClick={regenerateQueryApiKey}>\n                Regenerate\n              </Button>\n            )}\n          </Input.Group>\n        </div>\n\n        <h5>Example API Calls:</h5>\n        <div className=\"m-b-10\">\n          <span id={csvResultsLabelId}>Results in CSV format:</span>\n          <CodeBlock aria-labelledby={csvResultsLabelId} copyable>\n            {csvUrl}\n          </CodeBlock>\n        </div>\n        <div>\n          <span id={jsonResultsLabelId}>Results in JSON format:</span>\n          <CodeBlock aria-labelledby={jsonResultsLabelId} copyable>\n            {jsonUrl}\n          </CodeBlock>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nApiKeyDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    api_key: PropTypes.string,\n    can_edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default wrapDialog(ApiKeyDialog);\n","import { extend, map, filter, reduce } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\nimport useMedia from \"use-media\";\nimport Link from \"@/components/Link\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport FavoritesControl from \"@/components/FavoritesControl\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport getTags from \"@/services/getTags\";\nimport { clientConfig } from \"@/services/auth\";\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport useArchiveQuery from \"../hooks/useArchiveQuery\";\nimport usePublishQuery from \"../hooks/usePublishQuery\";\nimport useUnpublishQuery from \"../hooks/useUnpublishQuery\";\nimport useUpdateQueryTags from \"../hooks/useUpdateQueryTags\";\nimport useRenameQuery from \"../hooks/useRenameQuery\";\nimport useDuplicateQuery from \"../hooks/useDuplicateQuery\";\nimport useApiKeyDialog from \"../hooks/useApiKeyDialog\";\nimport usePermissionsEditorDialog from \"../hooks/usePermissionsEditorDialog\";\n\nimport \"./QueryPageHeader.less\";\n\nfunction getQueryTags() {\n  return getTags(\"api/queries/tags\").then(tags => map(tags, t => t.name));\n}\n\nfunction createMenu(menu) {\n  const handlers = {};\n\n  const groups = map(menu, group =>\n    filter(\n      map(group, (props, key) => {\n        props = extend({ isAvailable: true, isEnabled: true, onClick: () => {} }, props);\n        if (props.isAvailable) {\n          handlers[key] = props.onClick;\n          return (\n            <Menu.Item key={key} disabled={!props.isEnabled}>\n              {props.title}\n            </Menu.Item>\n          );\n        }\n        return null;\n      })\n    )\n  );\n\n  return (\n    <Menu onClick={({ key }) => handlers[key]()}>\n      {reduce(\n        filter(groups, group => group.length > 0),\n        (result, items, key) => {\n          const divider = result.length > 0 ? <Menu.Divider key={`divider${key}`} /> : null;\n          return [...result, divider, ...items];\n        },\n        []\n      )}\n    </Menu>\n  );\n}\n\nexport default function QueryPageHeader({\n  query,\n  dataSource,\n  sourceMode,\n  selectedVisualization,\n  headerExtra,\n  tagsExtra,\n  onChange,\n}) {\n  const isDesktop = useMedia({ minWidth: 768 });\n  const queryFlags = useQueryFlags(query, dataSource);\n  const updateName = useRenameQuery(query, onChange);\n  const updateTags = useUpdateQueryTags(query, onChange);\n  const archiveQuery = useArchiveQuery(query, onChange);\n  const publishQuery = usePublishQuery(query, onChange);\n  const unpublishQuery = useUnpublishQuery(query, onChange);\n  const [isDuplicating, duplicateQuery] = useDuplicateQuery(query);\n  const openApiKeyDialog = useApiKeyDialog(query, onChange);\n  const openPermissionsEditorDialog = usePermissionsEditorDialog(query);\n\n  const moreActionsMenu = useMemo(\n    () =>\n      createMenu([\n        {\n          fork: {\n            isEnabled: !queryFlags.isNew && queryFlags.canFork && !isDuplicating,\n            title: (\n              <React.Fragment>\n                Fork <i className=\"fa fa-external-link m-l-5\" aria-hidden=\"true\" />\n                <span className=\"sr-only\">(opens in a new tab)</span>\n              </React.Fragment>\n            ),\n            onClick: duplicateQuery,\n          },\n        },\n        {\n          archive: {\n            isAvailable: !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived,\n            title: \"Archive\",\n            onClick: archiveQuery,\n          },\n          managePermissions: {\n            isAvailable:\n              !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isArchived && clientConfig.showPermissionsControl,\n            title: \"Manage Permissions\",\n            onClick: openPermissionsEditorDialog,\n          },\n          publish: {\n            isAvailable:\n              !isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit,\n            title: \"Publish\",\n            onClick: publishQuery,\n          },\n          unpublish: {\n            isAvailable: !clientConfig.disablePublish && !queryFlags.isNew && queryFlags.canEdit && !queryFlags.isDraft,\n            title: \"Unpublish\",\n            onClick: unpublishQuery,\n          },\n        },\n        {\n          showAPIKey: {\n            isAvailable: !clientConfig.disablePublicUrls && !queryFlags.isNew,\n            title: \"Show API Key\",\n            onClick: openApiKeyDialog,\n          },\n        },\n      ]),\n    [\n      queryFlags.isNew,\n      queryFlags.canFork,\n      queryFlags.canEdit,\n      queryFlags.isArchived,\n      queryFlags.isDraft,\n      isDuplicating,\n      duplicateQuery,\n      archiveQuery,\n      openPermissionsEditorDialog,\n      isDesktop,\n      publishQuery,\n      unpublishQuery,\n      openApiKeyDialog,\n    ]\n  );\n\n  return (\n    <div className=\"query-page-header\">\n      <div className=\"title-with-tags\">\n        <div className=\"page-title\">\n          <div className=\"d-flex align-items-center\">\n            {!queryFlags.isNew && <FavoritesControl item={query} />}\n            <h3>\n              <EditInPlace isEditable={queryFlags.canEdit} onDone={updateName} ignoreBlanks value={query.name} />\n            </h3>\n          </div>\n        </div>\n        <div className=\"query-tags\">\n          <QueryTagsControl\n            tags={query.tags}\n            isDraft={queryFlags.isDraft}\n            isArchived={queryFlags.isArchived}\n            canEdit={queryFlags.canEdit}\n            getAvailableTags={getQueryTags}\n            onEdit={updateTags}\n            tagsExtra={tagsExtra}\n          />\n        </div>\n      </div>\n      <div className=\"header-actions\">\n        {headerExtra}\n        {isDesktop && queryFlags.isDraft && !queryFlags.isArchived && !queryFlags.isNew && queryFlags.canEdit && (\n          <Button className=\"m-r-5\" onClick={publishQuery}>\n            <i className=\"fa fa-paper-plane m-r-5\" aria-hidden=\"true\" /> Publish\n          </Button>\n        )}\n\n        {!queryFlags.isNew && queryFlags.canViewSource && (\n          <span>\n            {!sourceMode && (\n              <Link.Button className=\"m-r-5\" href={query.getUrl(true, selectedVisualization)}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Edit Source</span>\n              </Link.Button>\n            )}\n            {sourceMode && (\n              <Link.Button\n                className=\"m-r-5\"\n                href={query.getUrl(false, selectedVisualization)}\n                data-test=\"QueryPageShowResultOnly\">\n                <i className=\"fa fa-table\" aria-hidden=\"true\" />\n                <span className=\"m-l-5\">Show Results Only</span>\n              </Link.Button>\n            )}\n          </span>\n        )}\n\n        {!queryFlags.isNew && (\n          <Dropdown overlay={moreActionsMenu} trigger={[\"click\"]}>\n            <Button data-test=\"QueryPageHeaderMoreButton\" aria-label=\"More actions\">\n              <EllipsisOutlinedIcon rotate={90} aria-hidden=\"true\" />\n            </Button>\n          </Dropdown>\n        )}\n      </div>\n    </div>\n  );\n}\n\nQueryPageHeader.propTypes = {\n  query: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    name: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  dataSource: PropTypes.object,\n  sourceMode: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  headerExtra: PropTypes.node,\n  tagsExtra: PropTypes.node,\n  onChange: PropTypes.func,\n};\n\nQueryPageHeader.defaultProps = {\n  dataSource: null,\n  sourceMode: false,\n  selectedVisualization: null,\n  headerExtra: null,\n  tagsExtra: null,\n  onChange: () => {},\n};\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function useRenameQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    name => {\n      recordEvent(\"edit_name\", \"query\", query.id);\n      const changes = { name };\n      const options = {};\n\n      if (query.is_draft && clientConfig.autoPublishNamedQueries && name !== \"New Query\") {\n        changes.is_draft = false;\n        options.successMessage = \"Query saved and published\";\n      }\n\n      updateQuery(changes, options);\n    },\n    [query.id, query.is_draft, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryTags(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    tags => {\n      recordEvent(\"edit_tags\", \"query\", query.id);\n      updateQuery({ tags });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function usePublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: false });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUnpublishQuery(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    recordEvent(\"toggle_published\", \"query\", query.id);\n    updateQuery({ is_draft: true });\n  }, [query.id, updateQuery]);\n}\n","import { useCallback } from \"react\";\nimport ApiKeyDialog from \"@/components/queries/ApiKeyDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useApiKeyDialog(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(() => {\n    ApiKeyDialog.showModal({ query }).onClose(handleChange);\n  }, [query, handleChange]);\n}\n","import { useCallback } from \"react\";\nimport PermissionsEditorDialog from \"@/components/PermissionsEditorDialog\";\n\nexport default function usePermissionsEditorDialog(query) {\n  return useCallback(() => {\n    PermissionsEditorDialog.showModal({\n      aclUrl: `api/queries/${query.id}/acl`,\n      context: \"query\",\n      author: query.user,\n    });\n  }, [query.id, query.user]);\n}\n","import { isFunction, has } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport SchedulePhrase from \"@/components/queries/SchedulePhrase\";\nimport { IMG_ROOT } from \"@/services/data-source\";\n\nimport \"./QueryMetadata.less\";\n\nexport default function QueryMetadata({ query, dataSource, layout, onEditSchedule }) {\n  return (\n    <div className={`query-metadata query-metadata-${layout}`}>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.user.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.user.is_disabled })}>\n            {query.user.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            created{\" \"}\n            <strong>\n              <TimeAgo date={query.created_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-item\">\n        <img className=\"profile__image_thumb\" src={query.last_modified_by.profile_image_url} alt=\"Avatar\" />\n        <div className=\"query-metadata-property\">\n          <strong className={cx(\"query-metadata-label\", { \"text-muted\": query.last_modified_by.is_disabled })}>\n            {query.last_modified_by.name}\n          </strong>\n          <span className=\"query-metadata-value\">\n            updated{\" \"}\n            <strong>\n              <TimeAgo date={query.updated_at} />\n            </strong>\n          </span>\n        </div>\n      </div>\n      <div className=\"query-metadata-space\" />\n      {has(dataSource, \"name\") && has(dataSource, \"type\") && (\n        <div className=\"query-metadata-item\">\n          Data Source:\n          <img src={`${IMG_ROOT}/${dataSource.type}.png`} width=\"20\" alt={dataSource.type} />\n          <div className=\"query-metadata-property\">\n            <div className=\"query-metadata-label\">{dataSource.name}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"query-metadata-item\">\n        <div className=\"query-metadata-property\">\n          <span className=\"query-metadata-label\">\n            <span className=\"zmdi zmdi-refresh m-r-5\" />\n            Refresh Schedule\n          </span>\n          <span className=\"query-metadata-value\">\n            <SchedulePhrase\n              isLink={isFunction(onEditSchedule)}\n              isNew={query.isNew()}\n              schedule={query.schedule}\n              onClick={onEditSchedule}\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryMetadata.propTypes = {\n  layout: PropTypes.oneOf([\"table\", \"horizontal\"]),\n  query: PropTypes.shape({\n    created_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    updated_at: PropTypes.oneOfType([PropTypes.string, Moment]).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    last_modified_by: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image_url: PropTypes.string.isRequired,\n      is_disabled: PropTypes.bool,\n    }).isRequired,\n    schedule: PropTypes.object,\n  }).isRequired,\n  dataSource: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onEditSchedule: PropTypes.func,\n};\n\nQueryMetadata.defaultProps = {\n  layout: \"table\",\n  dataSource: null,\n  onEditSchedule: null,\n};\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { find, orderBy } from \"lodash\";\nimport useMedia from \"use-media\";\nimport Tabs from \"antd/lib/tabs\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport \"./QueryVisualizationTabs.less\";\n\nconst { TabPane } = Tabs;\n\nfunction EmptyState({ title, message, refreshButton }) {\n  return (\n    <div className=\"query-results-empty-state\">\n      <div className=\"empty-state-content\">\n        <div>\n          <img src=\"static/images/illustrations/no-query-results.svg\" alt=\"No Query Results Illustration\" />\n        </div>\n        <h3>{title}</h3>\n        <div className=\"m-b-20\">{message}</div>\n        {refreshButton}\n      </div>\n    </div>\n  );\n}\n\nEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  refreshButton: PropTypes.node,\n};\n\nEmptyState.defaultProps = {\n  refreshButton: null,\n};\n\nfunction TabWithDeleteButton({ visualizationName, canDelete, onDelete, ...props }) {\n  const handleDelete = useCallback(\n    e => {\n      e.stopPropagation();\n      Modal.confirm({\n        title: \"Delete Visualization\",\n        content: \"Are you sure you want to delete this visualization?\",\n        okText: \"Delete\",\n        okType: \"danger\",\n        onOk: onDelete,\n        maskClosable: true,\n        autoFocusButton: null,\n      });\n    },\n    [onDelete]\n  );\n\n  return (\n    <span {...props}>\n      {visualizationName}\n      {canDelete && (\n        <PlainButton className=\"delete-visualization-button\" onClick={handleDelete} aria-label=\"Close\" title=\"Close\">\n          <i className=\"zmdi zmdi-close\" aria-hidden=\"true\" />\n        </PlainButton>\n      )}\n    </span>\n  );\n}\n\nTabWithDeleteButton.propTypes = {\n  visualizationName: PropTypes.string.isRequired,\n  canDelete: PropTypes.bool,\n  onDelete: PropTypes.func,\n};\nTabWithDeleteButton.defaultProps = { canDelete: false, onDelete: () => {} };\n\nconst defaultVisualizations = [\n  {\n    type: \"TABLE\",\n    name: \"Table\",\n    id: null,\n    options: {},\n  },\n];\n\nexport default function QueryVisualizationTabs({\n  queryResult,\n  selectedTab,\n  showNewVisualizationButton,\n  canDeleteVisualizations,\n  onChangeTab,\n  onAddVisualization,\n  onDeleteVisualization,\n  refreshButton,\n  canRefresh,\n  ...props\n}) {\n  const visualizations = useMemo(\n    () => (props.visualizations.length > 0 ? props.visualizations : defaultVisualizations),\n    [props.visualizations]\n  );\n\n  const tabsProps = {};\n  if (find(visualizations, { id: selectedTab })) {\n    tabsProps.activeKey = `${selectedTab}`;\n  }\n\n  if (showNewVisualizationButton) {\n    tabsProps.tabBarExtraContent = (\n      <Button\n        className=\"add-visualization-button\"\n        data-test=\"NewVisualization\"\n        type=\"link\"\n        onClick={() => onAddVisualization()}>\n        <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n        <span className=\"m-l-5 hidden-xs\">Add Visualization</span>\n      </Button>\n    );\n  }\n\n  const orderedVisualizations = useMemo(() => orderBy(visualizations, [\"id\"]), [visualizations]);\n  const isFirstVisualization = useCallback(visId => visId === orderedVisualizations[0].id, [orderedVisualizations]);\n  const isMobile = useMedia({ maxWidth: 768 });\n\n  const [filters, setFilters] = useState([]);\n\n  return (\n    <Tabs\n      {...tabsProps}\n      type=\"card\"\n      className={cx(\"query-visualization-tabs card-style\")}\n      data-test=\"QueryPageVisualizationTabs\"\n      animated={false}\n      tabBarGutter={0}\n      onChange={activeKey => onChangeTab(+activeKey)}\n      destroyInactiveTabPane>\n      {orderedVisualizations.map(visualization => (\n        <TabPane\n          key={`${visualization.id}`}\n          tab={\n            <TabWithDeleteButton\n              data-test={`QueryPageVisualizationTab${visualization.id}`}\n              canDelete={!isMobile && canDeleteVisualizations && !isFirstVisualization(visualization.id)}\n              visualizationName={visualization.name}\n              onDelete={() => onDeleteVisualization(visualization.id)}\n            />\n          }>\n          {queryResult ? (\n            <VisualizationRenderer\n              visualization={visualization}\n              queryResult={queryResult}\n              context=\"query\"\n              filters={filters}\n              onFiltersChange={setFilters}\n            />\n          ) : (\n            <EmptyState\n              title=\"Query has no result\"\n              message={\n                canRefresh\n                  ? \"Execute/Refresh the query to show results.\"\n                  : \"You do not have a permission to execute/refresh this query.\"\n              }\n              refreshButton={refreshButton}\n            />\n          )}\n        </TabPane>\n      ))}\n    </Tabs>\n  );\n}\n\nQueryVisualizationTabs.propTypes = {\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  visualizations: PropTypes.arrayOf(PropTypes.object),\n  selectedTab: PropTypes.number,\n  showNewVisualizationButton: PropTypes.bool,\n  canDeleteVisualizations: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  onAddVisualization: PropTypes.func,\n  onDeleteVisualization: PropTypes.func,\n  refreshButton: PropTypes.node,\n  canRefresh: PropTypes.bool,\n};\n\nQueryVisualizationTabs.defaultProps = {\n  queryResult: null,\n  visualizations: [],\n  selectedTab: null,\n  showNewVisualizationButton: false,\n  canDeleteVisualizations: false,\n  onChangeTab: () => {},\n  onAddVisualization: () => {},\n  onDeleteVisualization: () => {},\n  refreshButton: null,\n  canRefresh: true,\n};\n","import { includes } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Timer from \"@/components/Timer\";\n\nexport default function QueryExecutionStatus({ status, updatedAt, error, isCancelling, onCancel }) {\n  const alertType = status === \"failed\" ? \"error\" : \"info\";\n  const showTimer = status !== \"failed\" && updatedAt;\n  const isCancelButtonAvailable = includes([\"waiting\", \"processing\"], status);\n  let message = isCancelling ? <React.Fragment>Cancelling&hellip;</React.Fragment> : null;\n\n  switch (status) {\n    case \"waiting\":\n      if (!isCancelling) {\n        message = <React.Fragment>Query in queue&hellip;</React.Fragment>;\n      }\n      break;\n    case \"processing\":\n      if (!isCancelling) {\n        message = <React.Fragment>Executing query&hellip;</React.Fragment>;\n      }\n      break;\n    case \"loading-result\":\n      message = <React.Fragment>Loading results&hellip;</React.Fragment>;\n      break;\n    case \"failed\":\n      message = (\n        <React.Fragment>\n          Error running query: <strong>{error}</strong>\n        </React.Fragment>\n      );\n      break;\n    // no default\n  }\n\n  return (\n    <Alert\n      data-test=\"QueryExecutionStatus\"\n      type={alertType}\n      message={\n        <div className=\"d-flex align-items-center\">\n          <div className=\"flex-fill p-t-5 p-b-5\">\n            {message} {showTimer && <Timer from={updatedAt} />}\n          </div>\n          <div>\n            {isCancelButtonAvailable && (\n              <Button className=\"m-l-10\" type=\"primary\" size=\"small\" disabled={isCancelling} onClick={onCancel}>\n                Cancel\n              </Button>\n            )}\n          </div>\n        </div>\n      }\n    />\n  );\n}\n\nQueryExecutionStatus.propTypes = {\n  status: PropTypes.string,\n  updatedAt: PropTypes.any,\n  error: PropTypes.string,\n  isCancelling: PropTypes.bool,\n  onCancel: PropTypes.func,\n};\n\nQueryExecutionStatus.defaultProps = {\n  status: \"waiting\",\n  updatedAt: null,\n  error: null,\n  isCancelling: true,\n  onCancel: () => {},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"antd/lib/card\";\nimport WarningFilledIcon from \"@ant-design/icons/WarningFilled\";\nimport Typography from \"antd/lib/typography\";\nimport Link from \"@/components/Link\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { currentUser } from \"@/services/auth\";\n\nimport useQueryFlags from \"../hooks/useQueryFlags\";\nimport \"./QuerySourceAlerts.less\";\n\nexport default function QuerySourceAlerts({ query, dataSourcesAvailable }) {\n  const queryFlags = useQueryFlags(query); // we don't use flags that depend on data source\n\n  let message = null;\n  if (queryFlags.isNew && !queryFlags.canCreate) {\n    message = (\n      <React.Fragment>\n        <Typography.Title level={4}>\n          You don't have permission to create new queries on any of the data sources available to you.\n        </Typography.Title>\n        <p>\n          <Typography.Text type=\"secondary\">\n            You can either <Link href=\"queries\">browse existing queries</Link>, or ask for additional permissions from\n            your Redash admin.\n          </Typography.Text>\n        </p>\n      </React.Fragment>\n    );\n  } else if (!dataSourcesAvailable) {\n    if (currentUser.isAdmin) {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please create one first, and then start querying.</Typography.Text>\n          </p>\n\n          <div className=\"query-source-alerts-actions\">\n            <Link.Button type=\"primary\" href=\"data_sources/new\">\n              Create Data Source\n            </Link.Button>\n            <Link.Button type=\"default\" href=\"groups\">\n              Manage Group Permissions\n            </Link.Button>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      message = (\n        <React.Fragment>\n          <Typography.Title level={4}>\n            Looks like no data sources were created yet or none of them available to the group(s) you're member of.\n          </Typography.Title>\n          <p>\n            <Typography.Text type=\"secondary\">Please ask your Redash admin to create one first.</Typography.Text>\n          </p>\n        </React.Fragment>\n      );\n    }\n  }\n\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"query-source-alerts\">\n      <Card>\n        <DynamicComponent name=\"QuerySource.Alerts\" query={query} dataSourcesAvailable={dataSourcesAvailable}>\n          <div className=\"query-source-alerts-icon\">\n            <WarningFilledIcon />\n          </div>\n          {message}\n        </DynamicComponent>\n      </Card>\n    </div>\n  );\n}\n\nQuerySourceAlerts.propTypes = {\n  query: PropTypes.object.isRequired,\n  dataSourcesAvailable: PropTypes.bool,\n};\n\nQuerySourceAlerts.defaultProps = {\n  dataSourcesAvailable: false,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport { Query } from \"@/services/query\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function wrapQueryPage(WrappedComponent) {\n  function QueryPageWrapper({ queryId, onError, ...props }) {\n    const [query, setQuery] = useState(null);\n\n    const handleError = useImmutableCallback(onError);\n\n    useEffect(() => {\n      let isCancelled = false;\n      const promise = queryId ? Query.get({ id: queryId }) : Promise.resolve(Query.newQuery());\n      promise\n        .then(result => {\n          if (!isCancelled) {\n            setQuery(result);\n          }\n        })\n        .catch(handleError);\n\n      return () => {\n        isCancelled = true;\n      };\n    }, [queryId, handleError]);\n\n    if (!query) {\n      return <LoadingState className=\"flex-fill\" />;\n    }\n\n    return <WrappedComponent query={query} onError={onError} {...props} />;\n  }\n\n  QueryPageWrapper.propTypes = {\n    queryId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  };\n\n  QueryPageWrapper.defaultProps = {\n    queryId: null,\n  };\n\n  return QueryPageWrapper;\n}\n","import { isString } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport List from \"antd/lib/list\";\nimport Link from \"@/components/Link\";\nimport PlainButton from \"@/components/PlainButton\";\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { QueryTagsControl } from \"@/components/tags-control/TagsControl\";\nimport { Dashboard } from \"@/services/dashboard\";\nimport notification from \"@/services/notification\";\nimport useSearchResults from \"@/lib/hooks/useSearchResults\";\n\nimport \"./add-to-dashboard-dialog.less\";\n\nfunction AddToDashboardDialog({ dialog, visualization }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [doSearch, dashboards, isLoading] = useSearchResults(\n    term => {\n      if (isString(term) && term !== \"\") {\n        return Dashboard.query({ q: term })\n          .then(results => results.results)\n          .catch(() => []);\n      }\n      return Promise.resolve([]);\n    },\n    { initialResults: [] }\n  );\n\n  const [selectedDashboard, setSelectedDashboard] = useState(null);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    doSearch(searchTerm);\n  }, [doSearch, searchTerm]);\n\n  function addWidgetToDashboard() {\n    // Load dashboard with all widgets\n    Dashboard.get(selectedDashboard)\n      .then(dashboard => {\n        dashboard.addWidget(visualization);\n        return dashboard;\n      })\n      .then(dashboard => {\n        dialog.close();\n        const key = `notification-${Math.random()\n          .toString(36)\n          .substr(2, 10)}`;\n        notification.success(\n          \"Widget added to dashboard\",\n          <React.Fragment>\n            <Link href={`${dashboard.url}`} onClick={() => notification.close(key)}>\n              {dashboard.name}\n            </Link>\n            <QueryTagsControl isDraft={dashboard.is_draft} tags={dashboard.tags} />\n          </React.Fragment>,\n          { key }\n        );\n      })\n      .catch(() => {\n        notification.error(\"Widget not added.\");\n      })\n      .finally(() => {\n        setSaveInProgress(false);\n      });\n  }\n\n  const items = selectedDashboard ? [selectedDashboard] : dashboards;\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Add to Dashboard\"\n      okButtonProps={{ disabled: !selectedDashboard || saveInProgress, loading: saveInProgress }}\n      cancelButtonProps={{ disabled: saveInProgress }}\n      onOk={addWidgetToDashboard}>\n      <label htmlFor=\"add-to-dashboard-dialog-dashboard\">Choose the dashboard to add this query to:</label>\n\n      {!selectedDashboard && (\n        <Input\n          id=\"add-to-dashboard-dialog-dashboard\"\n          className=\"w-100\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search a dashboard by name\"\n          value={searchTerm}\n          onChange={event => setSearchTerm(event.target.value)}\n          suffix={\n            <PlainButton className={searchTerm === \"\" ? \"hidden\" : null} onClick={() => setSearchTerm(\"\")}>\n              <CloseOutlinedIcon />\n            </PlainButton>\n          }\n        />\n      )}\n\n      {(items.length > 0 || isLoading) && (\n        <List\n          className={selectedDashboard ? \"add-to-dashboard-dialog-selection\" : \"add-to-dashboard-dialog-search-results\"}\n          bordered\n          itemLayout=\"horizontal\"\n          loading={isLoading}\n          dataSource={items}\n          renderItem={d => (\n            <List.Item\n              key={`dashboard-${d.id}`}\n              actions={\n                selectedDashboard\n                  ? [\n                      <PlainButton onClick={() => setSelectedDashboard(null)}>\n                        <CloseOutlinedIcon />\n                      </PlainButton>,\n                    ]\n                  : []\n              }\n              onClick={selectedDashboard ? null : () => setSelectedDashboard(d)}>\n              <div className=\"add-to-dashboard-dialog-item-content\">\n                {d.name}\n                <QueryTagsControl isDraft={d.is_draft} tags={d.tags} />\n              </div>\n            </List.Item>\n          )}\n        />\n      )}\n    </Modal>\n  );\n}\n\nAddToDashboardDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default wrapDialog(AddToDashboardDialog);\n","import { uniqueId } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport Button from \"antd/lib/button\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport InputNumber from \"antd/lib/input-number\";\nimport Modal from \"antd/lib/modal\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { clientConfig } from \"@/services/auth\";\nimport CodeBlock from \"@/components/CodeBlock\";\n\nimport \"./EmbedQueryDialog.less\";\n\nclass EmbedQueryDialog extends React.Component {\n  static propTypes = {\n    dialog: DialogPropType.isRequired,\n    query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    visualization: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  };\n\n  state = {\n    enableChangeIframeSize: false,\n    iframeWidth: 720,\n    iframeHeight: 391,\n  };\n\n  constructor(props) {\n    super(props);\n    const { query, visualization } = props;\n    this.embedUrl = `${clientConfig.basePath}embed/query/${query.id}/visualization/${visualization.id}?api_key=${\n      query.api_key\n    }&${query.getParameters().toUrlParams()}`;\n\n    if (window.snapshotUrlBuilder) {\n      this.snapshotUrl = window.snapshotUrlBuilder(query, visualization);\n    }\n  }\n\n  urlEmbedLabelId = uniqueId(\"url-embed-label\");\n  iframeEmbedLabelId = uniqueId(\"iframe-embed-label\");\n\n  render() {\n    const { query, dialog } = this.props;\n    const { enableChangeIframeSize, iframeWidth, iframeHeight } = this.state;\n\n    return (\n      <Modal\n        {...dialog.props}\n        className=\"embed-query-dialog\"\n        title=\"Embed Query\"\n        footer={<Button onClick={dialog.dismiss}>Close</Button>}>\n        {query.is_safe ? (\n          <React.Fragment>\n            <h5 id={this.urlEmbedLabelId} className=\"m-t-0\">\n              Public URL\n            </h5>\n            <div className=\"m-b-30\">\n              <CodeBlock aria-labelledby={this.urlEmbedLabelId} data-test=\"EmbedIframe\" copyable>\n                {this.embedUrl}\n              </CodeBlock>\n            </div>\n            <h5 id={this.iframeEmbedLabelId} className=\"m-t-0\">\n              IFrame Embed\n            </h5>\n            <div>\n              <CodeBlock aria-labelledby={this.iframeEmbedLabelId} copyable>\n                {`<iframe src=\"${this.embedUrl}\" width=\"${iframeWidth}\" height=\"${iframeHeight}\"></iframe>`}\n              </CodeBlock>\n              <Form className=\"m-t-10\" layout=\"inline\">\n                <Form.Item>\n                  <Checkbox\n                    checked={enableChangeIframeSize}\n                    onChange={e => this.setState({ enableChangeIframeSize: e.target.checked })}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Width\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeWidth}\n                    onChange={value => this.setState({ iframeWidth: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n                <Form.Item label=\"Height\">\n                  <InputNumber\n                    className=\"size-input\"\n                    value={iframeHeight}\n                    onChange={value => this.setState({ iframeHeight: value })}\n                    size=\"small\"\n                    disabled={!enableChangeIframeSize}\n                  />\n                </Form.Item>\n              </Form>\n            </div>\n            {this.snapshotUrl && (\n              <React.Fragment>\n                <h5>Image Embed</h5>\n                <CodeBlock copyable>{this.snapshotUrl}</CodeBlock>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        ) : (\n          <Alert\n            message=\"Currently it is not possible to embed queries that contain text parameters.\"\n            type=\"error\"\n            data-test=\"EmbedErrorAlert\"\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(EmbedQueryDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"@/components/Link\";\n\nexport default function QueryResultsLink(props) {\n  let href = \"\";\n\n  const { query, queryResult, fileType } = props;\n  const resultId = queryResult.getId && queryResult.getId();\n  const resultData = queryResult.getData && queryResult.getData();\n\n  if (resultId && resultData && query.name) {\n    if (query.id) {\n      href = `api/queries/${query.id}/results/${resultId}.${fileType}${props.embed ? `?api_key=${props.apiKey}` : \"\"}`;\n    } else {\n      href = `api/query_results/${resultId}.${fileType}`;\n    }\n  }\n\n  return (\n    <Link target=\"_blank\" rel=\"noopener noreferrer\" disabled={props.disabled} href={href} download>\n      {props.children}\n    </Link>\n  );\n}\n\nQueryResultsLink.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  fileType: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nQueryResultsLink.defaultProps = {\n  queryResult: {},\n  fileType: \"csv\",\n  embed: false,\n  apiKey: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Button from \"antd/lib/button\";\nimport PlainButton from \"@/components/PlainButton\";\nimport { clientConfig } from \"@/services/auth\";\n\nimport PlusCircleFilledIcon from \"@ant-design/icons/PlusCircleFilled\";\nimport ShareAltOutlinedIcon from \"@ant-design/icons/ShareAltOutlined\";\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\nimport EllipsisOutlinedIcon from \"@ant-design/icons/EllipsisOutlined\";\n\nimport QueryResultsLink from \"./QueryResultsLink\";\n\nexport default function QueryControlDropdown(props) {\n  const menu = (\n    <Menu>\n      {!props.query.isNew() && (!props.query.is_draft || !props.query.is_archived) && (\n        <Menu.Item>\n          <PlainButton onClick={() => props.openAddToDashboardForm(props.selectedTab)}>\n            <PlusCircleFilledIcon /> Add to Dashboard\n          </PlainButton>\n        </Menu.Item>\n      )}\n      {!clientConfig.disablePublicUrls && !props.query.isNew() && (\n        <Menu.Item>\n          <PlainButton\n            onClick={() => props.showEmbedDialog(props.query, props.selectedTab)}\n            data-test=\"ShowEmbedDialogButton\">\n            <ShareAltOutlinedIcon /> Embed Elsewhere\n          </PlainButton>\n        </Menu.Item>\n      )}\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          disabled={props.queryExecuting || !props.queryResult.getData || !props.queryResult.getData()}\n          query={props.query}\n          queryResult={props.queryResult}\n          embed={props.embed}\n          apiKey={props.apiKey}>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown trigger={[\"click\"]} overlay={menu} overlayClassName=\"query-control-dropdown-overlay\">\n      <Button data-test=\"QueryControlDropdownButton\">\n        <EllipsisOutlinedIcon rotate={90} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nQueryControlDropdown.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  queryExecuting: PropTypes.bool.isRequired,\n  showEmbedDialog: PropTypes.func.isRequired,\n  embed: PropTypes.bool,\n  apiKey: PropTypes.string,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  openAddToDashboardForm: PropTypes.func.isRequired,\n};\n\nQueryControlDropdown.defaultProps = {\n  queryResult: {},\n  embed: false,\n  apiKey: \"\",\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport FormOutlinedIcon from \"@ant-design/icons/FormOutlined\";\n\nexport default function EditVisualizationButton(props) {\n  return (\n    <Button\n      data-test=\"EditVisualization\"\n      className=\"edit-visualization\"\n      onClick={() => props.openVisualizationEditor(props.selectedTab)}>\n      <FormOutlinedIcon />\n      <span className=\"hidden-xs hidden-s hidden-m\">Edit Visualization</span>\n    </Button>\n  );\n}\n\nEditVisualizationButton.propTypes = {\n  openVisualizationEditor: PropTypes.func.isRequired,\n  selectedTab: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nEditVisualizationButton.defaultProps = {\n  selectedTab: \"\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WarningTwoTone from \"@ant-design/icons/WarningTwoTone\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useAddToDashboardDialog from \"../hooks/useAddToDashboardDialog\";\nimport useEmbedDialog from \"../hooks/useEmbedDialog\";\nimport QueryControlDropdown from \"@/components/EditVisualizationButton/QueryControlDropdown\";\nimport EditVisualizationButton from \"@/components/EditVisualizationButton\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { durationHumanize, pluralize, prettySize } from \"@/lib/utils\";\n\nimport \"./QueryExecutionMetadata.less\";\n\nexport default function QueryExecutionMetadata({\n  query,\n  queryResult,\n  isQueryExecuting,\n  selectedVisualization,\n  showEditVisualizationButton,\n  onEditVisualization,\n  extraActions,\n}) {\n  const queryResultData = useQueryResultData(queryResult);\n  const openAddToDashboardDialog = useAddToDashboardDialog(query);\n  const openEmbedDialog = useEmbedDialog(query);\n  return (\n    <div className=\"query-execution-metadata\">\n      <span className=\"m-r-5\">\n        <QueryControlDropdown\n          query={query}\n          queryResult={queryResult}\n          queryExecuting={isQueryExecuting}\n          showEmbedDialog={openEmbedDialog}\n          embed={false}\n          apiKey={query.api_key}\n          selectedTab={selectedVisualization}\n          openAddToDashboardForm={openAddToDashboardDialog}\n        />\n      </span>\n      {extraActions}\n      {showEditVisualizationButton && (\n        <EditVisualizationButton openVisualizationEditor={onEditVisualization} selectedTab={selectedVisualization} />\n      )}\n      <span className=\"m-l-5 m-r-10\">\n        <span>\n          {queryResultData.truncated === true && (\n            <span className=\"m-r-5\">\n              <Tooltip\n                title={\n                  \"Result truncated to \" +\n                  queryResultData.rows.length +\n                  \" rows. Databricks may truncate query results that are unstably large.\"\n                }>\n                <WarningTwoTone twoToneColor=\"#FF9800\" />\n              </Tooltip>\n            </span>\n          )}\n          <strong>{queryResultData.rows.length}</strong> {pluralize(\"row\", queryResultData.rows.length)}\n        </span>\n        <span className=\"m-l-5\">\n          {!isQueryExecuting && (\n            <React.Fragment>\n              <strong>{durationHumanize(queryResultData.runtime)}</strong>\n              <span className=\"hidden-xs\"> runtime</span>\n            </React.Fragment>\n          )}\n          {isQueryExecuting && <span>Running&hellip;</span>}\n        </span>\n        {queryResultData.metadata.data_scanned && (\n          <span className=\"m-l-5\">\n            Data Scanned\n            <strong>{prettySize(queryResultData.metadata.data_scanned)}</strong>\n          </span>\n        )}\n      </span>\n      <div>\n        <span className=\"m-r-10\">\n          <span className=\"hidden-xs\">Refreshed </span>\n          <strong>\n            <TimeAgo date={queryResultData.retrievedAt} placeholder=\"-\" />\n          </strong>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nQueryExecutionMetadata.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isQueryExecuting: PropTypes.bool,\n  selectedVisualization: PropTypes.number,\n  showEditVisualizationButton: PropTypes.bool,\n  onEditVisualization: PropTypes.func,\n  extraActions: PropTypes.node,\n};\n\nQueryExecutionMetadata.defaultProps = {\n  isQueryExecuting: false,\n  selectedVisualization: null,\n  showEditVisualizationButton: false,\n  onEditVisualization: () => {},\n  extraActions: null,\n};\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport AddToDashboardDialog from \"@/components/queries/AddToDashboardDialog\";\n\nexport default function useAddToDashboardDialog(query) {\n  return useCallback(\n    visualizationId => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      AddToDashboardDialog.showModal({ visualization });\n    },\n    [query.visualizations]\n  );\n}\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EmbedQueryDialog from \"@/components/queries/EmbedQueryDialog\";\n\nexport default function useEmbedDialog(query) {\n  return useCallback(\n    (unusedQuery, visualizationId) => {\n      const visualization = find(query.visualizations, { id: visualizationId });\n      EmbedQueryDialog.showModal({ query, visualization });\n    },\n    [query]\n  );\n}\n","import { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\nimport DataSource from \"@/services/data-source\";\nimport notification from \"@/services/notification\";\n\nfunction getSchema(dataSource, refresh = undefined) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DataSource.fetchSchema(dataSource, refresh).catch(() => {\n    notification.error(\"Schema refresh failed.\", \"Please try again later.\");\n    return Promise.resolve([]);\n  });\n}\n\nexport default function useDataSourceSchema(dataSource) {\n  const [schema, setSchema] = useState([]);\n  const [loadingSchema, setLoadingSchema] = useState(true);\n  const refreshSchemaTokenRef = useRef(null);\n\n  const reloadSchema = useCallback(\n    (refresh = undefined) => {\n      setLoadingSchema(true);\n      const refreshToken = Math.random()\n        .toString(36)\n        .substr(2);\n      refreshSchemaTokenRef.current = refreshToken;\n      getSchema(dataSource, refresh)\n        .then(data => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setSchema(data);\n          }\n        })\n        .finally(() => {\n          if (refreshSchemaTokenRef.current === refreshToken) {\n            setLoadingSchema(false);\n          }\n        });\n    },\n    [dataSource]\n  );\n\n  useEffect(() => {\n    reloadSchema();\n  }, [reloadSchema]);\n\n  useEffect(() => {\n    return () => {\n      // cancel pending operations\n      refreshSchemaTokenRef.current = null;\n    };\n  }, []);\n\n  return useMemo(() => [schema, loadingSchema, reloadSchema], [schema, loadingSchema, reloadSchema]);\n}\n","import { isNil, map, filter, some, includes, get } from \"lodash\";\nimport cx from \"classnames\";\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Input from \"antd/lib/input\";\nimport Button from \"antd/lib/button\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport PlainButton from \"@/components/PlainButton\";\nimport Tooltip from \"@/components/Tooltip\";\nimport useDataSourceSchema from \"@/pages/queries/hooks/useDataSourceSchema\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport LoadingState from \"../items-list/components/LoadingState\";\n\nconst SchemaItemColumnType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n});\n\nexport const SchemaItemType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(SchemaItemColumnType).isRequired,\n});\n\nconst schemaTableHeight = 22;\nconst schemaColumnHeight = 18;\n\nfunction SchemaItem({ item, expanded, onToggle, onSelect, ...props }) {\n  const handleSelect = useCallback(\n    (event, ...args) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onSelect(...args);\n    },\n    [onSelect]\n  );\n\n  if (!item) {\n    return null;\n  }\n\n  const tableDisplayName = item.displayName || item.name;\n\n  return (\n    <div {...props}>\n      <div className=\"schema-list-item\">\n        <PlainButton className=\"table-name\" onClick={onToggle}>\n          <i className=\"fa fa-table m-r-5\" aria-hidden=\"true\" />\n          <strong>\n            <span title={item.name}>{tableDisplayName}</span>\n            {!isNil(item.size) && <span> ({item.size})</span>}\n          </strong>\n        </PlainButton>\n        <Tooltip\n          title=\"Insert table name into query text\"\n          mouseEnterDelay={0}\n          mouseLeaveDelay={0}\n          placement=\"topRight\"\n          arrowPointAtCenter>\n          <PlainButton className=\"copy-to-editor\" onClick={e => handleSelect(e, item.name)}>\n            <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n          </PlainButton>\n        </Tooltip>\n      </div>\n      {expanded && (\n        <div className=\"table-open\">\n          {item.loading ? (\n            <div className=\"table-open\">Loading...</div>\n          ) : (\n            map(item.columns, column => {\n              const columnName = get(column, \"name\");\n              const columnType = get(column, \"type\");\n              return (\n                <Tooltip\n                  title=\"Insert column name into query text\"\n                  mouseEnterDelay={0}\n                  mouseLeaveDelay={0}\n                  placement=\"rightTop\">\n                  <PlainButton key={columnName} className=\"table-open-item\" onClick={e => handleSelect(e, columnName)}>\n                    <div>\n                      {columnName} {columnType && <span className=\"column-type\">{columnType}</span>}\n                    </div>\n\n                    <div className=\"copy-to-editor\">\n                      <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" />\n                    </div>\n                  </PlainButton>\n                </Tooltip>\n              );\n            })\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nSchemaItem.propTypes = {\n  item: SchemaItemType,\n  expanded: PropTypes.bool,\n  onToggle: PropTypes.func,\n  onSelect: PropTypes.func,\n};\n\nSchemaItem.defaultProps = {\n  item: null,\n  expanded: false,\n  onToggle: () => {},\n  onSelect: () => {},\n};\n\nfunction SchemaLoadingState() {\n  return (\n    <div className=\"schema-loading-state\">\n      <LoadingState className=\"\" />\n    </div>\n  );\n}\n\nexport function SchemaList({ loading, schema, expandedFlags, onTableExpand, onItemSelect }) {\n  const [listRef, setListRef] = useState(null);\n\n  useEffect(() => {\n    if (listRef) {\n      listRef.recomputeRowHeights();\n    }\n  }, [listRef, schema, expandedFlags]);\n\n  return (\n    <div className=\"schema-browser\">\n      {loading && <SchemaLoadingState />}\n      {!loading && (\n        <AutoSizer>\n          {({ width, height }) => (\n            <List\n              ref={setListRef}\n              width={width}\n              height={height}\n              rowCount={schema.length}\n              rowHeight={({ index }) => {\n                const item = schema[index];\n                const columnsLength = !item.loading ? item.columns.length : 1;\n                let columnCount = expandedFlags[item.name] ? columnsLength : 0;\n                return schemaTableHeight + schemaColumnHeight * columnCount;\n              }}\n              rowRenderer={({ key, index, style }) => {\n                const item = schema[index];\n                return (\n                  <SchemaItem\n                    key={key}\n                    style={style}\n                    item={item}\n                    expanded={expandedFlags[item.name]}\n                    onToggle={() => onTableExpand(item.name)}\n                    onSelect={onItemSelect}\n                  />\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      )}\n    </div>\n  );\n}\n\nexport function applyFilterOnSchema(schema, filterString) {\n  const filters = filter(filterString.toLowerCase().split(/\\s+/), s => s.length > 0);\n\n  // Empty string: return original schema\n  if (filters.length === 0) {\n    return schema;\n  }\n\n  // Single word: matches table or column\n  if (filters.length === 1) {\n    const nameFilter = filters[0];\n    const columnFilter = filters[0];\n    return filter(\n      schema,\n      item =>\n        includes(item.name.toLowerCase(), nameFilter) ||\n        some(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter))\n    );\n  }\n\n  // Two (or more) words: first matches table, seconds matches column\n  const nameFilter = filters[0];\n  const columnFilter = filters[1];\n  return filter(\n    map(schema, item => {\n      if (includes(item.name.toLowerCase(), nameFilter)) {\n        item = {\n          ...item,\n          columns: filter(item.columns, column => includes(get(column, \"name\").toLowerCase(), columnFilter)),\n        };\n        return item.columns.length > 0 ? item : null;\n      }\n    })\n  );\n}\n\nexport default function SchemaBrowser({\n  dataSource,\n  onSchemaUpdate,\n  onItemSelect,\n  options,\n  onOptionsUpdate,\n  ...props\n}) {\n  const [schema, isLoading, refreshSchema] = useDataSourceSchema(dataSource);\n  const [filterString, setFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [expandedFlags, setExpandedFlags] = useState({});\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    setExpandedFlags({});\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  if (schema.length === 0 && !isLoading) {\n    return null;\n  }\n\n  function toggleTable(tableName) {\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className=\"m-r-5\"\n          placeholder=\"Search schema...\"\n          aria-label=\"Search schema\"\n          disabled={schema.length === 0}\n          onChange={event => handleFilterChange(event.target.value)}\n        />\n\n        <Tooltip title=\"Refresh Schema\">\n          <Button onClick={() => refreshSchema(true)}>\n            <i className={cx(\"zmdi zmdi-refresh\", { \"zmdi-hc-spin\": isLoading })} aria-hidden=\"true\" />\n            <span className=\"sr-only\">{isLoading ? \"Loading, please wait.\" : \"Press to refresh.\"}</span>\n          </Button>\n        </Tooltip>\n      </div>\n      <SchemaList\n        loading={isLoading && schema.length === 0}\n        schema={filteredSchema}\n        expandedFlags={expandedFlags}\n        onTableExpand={toggleTable}\n        onItemSelect={onItemSelect}\n      />\n    </div>\n  );\n}\n\nSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nSchemaBrowser.defaultProps = {\n  dataSource: null,\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { capitalize, isNil, map, get } from \"lodash\";\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-sql\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n\nconst langTools = ace.acequire(\"ace/ext/language_tools\");\nconst snippetsModule = ace.acequire(\"ace/snippets\");\n\n// By default Ace will try to load snippet files for the different modes and fail.\n// We don't need them, so we use these placeholders until we define our own.\nfunction defineDummySnippets(mode) {\n  ace.define(`ace/snippets/${mode}`, [\"require\", \"exports\", \"module\"], (require, exports) => {\n    exports.snippetText = \"\";\n    exports.scope = mode;\n  });\n}\n\ndefineDummySnippets(\"python\");\ndefineDummySnippets(\"sql\");\ndefineDummySnippets(\"json\");\ndefineDummySnippets(\"yaml\");\n\n// without this line, ace will try to load a non-existent mode-custom.js file\n// for data sources with syntax = \"custom\"\nace.define(\"ace/mode/custom\", [], () => {});\n\nfunction buildTableColumnKeywords(table) {\n  const keywords = [];\n  table.columns.forEach(column => {\n    const columnName = get(column, \"name\");\n    keywords.push({\n      name: `${table.name}.${columnName}`,\n      value: `${table.name}.${columnName}`,\n      score: 100,\n      meta: capitalize(get(column, \"type\", \"Column\")),\n    });\n  });\n  return keywords;\n}\n\nfunction buildKeywordsFromSchema(schema) {\n  const tableKeywords = [];\n  const columnKeywords = {};\n  const tableColumnKeywords = {};\n\n  schema.forEach(table => {\n    tableKeywords.push({\n      name: table.name,\n      value: table.name,\n      score: 100,\n      meta: \"Table\",\n    });\n    tableColumnKeywords[table.name] = buildTableColumnKeywords(table);\n    table.columns.forEach(c => {\n      const columnName = get(c, \"name\", c);\n      columnKeywords[columnName] = capitalize(get(c, \"type\", \"Column\"));\n    });\n  });\n\n  return {\n    table: tableKeywords,\n    column: map(columnKeywords, (v, k) => ({\n      name: k,\n      value: k,\n      score: 50,\n      meta: v,\n    })),\n    tableColumn: tableColumnKeywords,\n  };\n}\n\nconst schemaCompleterKeywords = {};\n\nexport function updateSchemaCompleter(editorKey, schema = null) {\n  schemaCompleterKeywords[editorKey] = isNil(schema) ? null : buildKeywordsFromSchema(schema);\n}\n\nlangTools.setCompleters([\n  langTools.snippetCompleter,\n  langTools.keyWordCompleter,\n  langTools.textCompleter,\n  {\n    identifierRegexps: [/[a-zA-Z_0-9.\\-\\u00A2-\\uFFFF]/],\n    getCompletions: (editor, session, pos, prefix, callback) => {\n      const { table, column, tableColumn } = schemaCompleterKeywords[editor.id] || {\n        table: [],\n        column: [],\n        tableColumn: [],\n      };\n\n      if (prefix.length === 0 || table.length === 0) {\n        callback(null, []);\n        return;\n      }\n\n      if (prefix[prefix.length - 1] === \".\") {\n        const tableName = prefix.substring(0, prefix.length - 1);\n        callback(null, table.concat(tableColumn[tableName]));\n        return;\n      }\n      callback(null, table.concat(column));\n    },\n  },\n]);\n\nexport { AceEditor, langTools, snippetsModule };\n","import { axios } from \"@/services/axios\";\nimport { extend, map } from \"lodash\";\n\nclass QuerySnippet {\n  constructor(querySnippet) {\n    extend(this, querySnippet);\n  }\n\n  getSnippet() {\n    let name = this.trigger;\n    if (this.description !== \"\") {\n      name = `${this.trigger}: ${this.description}`;\n    }\n\n    return {\n      name,\n      content: this.snippet,\n      tabTrigger: this.trigger,\n    };\n  }\n}\n\nconst getQuerySnippet = querySnippet => new QuerySnippet(querySnippet);\n\nconst QuerySnippetService = {\n  get: data => axios.get(`api/query_snippets/${data.id}`).then(getQuerySnippet),\n  query: () => axios.get(\"api/query_snippets\").then(data => map(data, getQuerySnippet)),\n  create: data => axios.post(\"api/query_snippets\", data).then(getQuerySnippet),\n  save: data => axios.post(`api/query_snippets/${data.id}`, data).then(getQuerySnippet),\n  delete: data => axios.delete(`api/query_snippets/${data.id}`),\n};\n\nexport default QuerySnippetService;\n","import React, { useCallback } from \"react\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport PropTypes from \"prop-types\";\nimport \"@/redash-font/style.less\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function AutocompleteToggle({ available, enabled, onToggle }) {\n  let tooltipMessage = \"Live Autocomplete Enabled\";\n  let icon = \"icon-flash\";\n  if (!enabled) {\n    tooltipMessage = \"Live Autocomplete Disabled\";\n    icon = \"icon-flash-off\";\n  }\n\n  if (!available) {\n    tooltipMessage = \"Live Autocomplete Not Available (Use Ctrl+Space to Trigger)\";\n    icon = \"icon-flash-off\";\n  }\n\n  const handleClick = useCallback(() => {\n    recordEvent(\"toggle_autocomplete\", \"screen\", \"query_editor\", { state: !enabled });\n    onToggle(!enabled);\n  }, [enabled, onToggle]);\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Button\n        className=\"query-editor-controls-button m-r-5\"\n        disabled={!available}\n        onClick={handleClick}\n        aria-label={enabled ? \"Disable live autocomplete\" : \"Enable live autocomplete\"}>\n        <i className={\"icon \" + icon} aria-hidden=\"true\" />\n      </Button>\n    </Tooltip>\n  );\n}\n\nAutocompleteToggle.propTypes = {\n  available: PropTypes.bool.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport recordEvent from \"@/services/recordEvent\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\n\nexport default function AutoLimitCheckbox({ available, checked, onChange }) {\n  const handleClick = useCallback(() => {\n    recordEvent(\"checkbox_auto_limit\", \"screen\", \"query_editor\", { state: !checked });\n    onChange(!checked);\n  }, [checked, onChange]);\n\n  let tooltipMessage = null;\n  if (!available) {\n    tooltipMessage = \"Auto limiting is not available for this Data Source type.\";\n  } else {\n    tooltipMessage = \"Auto limit results to first 1000 rows.\";\n  }\n\n  return (\n    <Tooltip placement=\"top\" title={tooltipMessage}>\n      <Checkbox\n        className=\"query-editor-controls-checkbox\"\n        disabled={!available}\n        onClick={handleClick}\n        checked={available && checked}>\n        LIMIT 1000\n      </Checkbox>\n    </Tooltip>\n  );\n}\n\nAutoLimitCheckbox.propTypes = {\n  available: PropTypes.bool,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { isFunction, map, filter, fromPairs, noop } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Button from \"antd/lib/button\";\nimport Select from \"antd/lib/select\";\nimport KeyboardShortcuts, { humanReadableShortcut } from \"@/services/KeyboardShortcuts\";\n\nimport AutocompleteToggle from \"./AutocompleteToggle\";\nimport \"./QueryEditorControls.less\";\nimport AutoLimitCheckbox from \"@/components/queries/QueryEditor/AutoLimitCheckbox\";\n\nexport function ButtonTooltip({ title, shortcut, ...props }) {\n  shortcut = humanReadableShortcut(shortcut, 1); // show only primary shortcut\n  title =\n    title && shortcut ? (\n      <React.Fragment>\n        {title} (<i>{shortcut}</i>)\n      </React.Fragment>\n    ) : (\n      title || shortcut\n    );\n  return <Tooltip placement=\"top\" title={title} {...props} />;\n}\n\nButtonTooltip.propTypes = {\n  title: PropTypes.node,\n  shortcut: PropTypes.string,\n};\n\nButtonTooltip.defaultProps = {\n  title: null,\n  shortcut: null,\n};\n\nexport default function EditorControl({\n  addParameterButtonProps,\n  formatButtonProps,\n  saveButtonProps,\n  executeButtonProps,\n  autocompleteToggleProps,\n  autoLimitCheckboxProps,\n  dataSourceSelectorProps,\n}) {\n  useEffect(() => {\n    const buttons = filter(\n      [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps],\n      b => b.shortcut && isFunction(b.onClick)\n    );\n    if (buttons.length > 0) {\n      const shortcuts = fromPairs(map(buttons, b => [b.shortcut, b.disabled ? noop : b.onClick]));\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [addParameterButtonProps, formatButtonProps, saveButtonProps, executeButtonProps]);\n\n  return (\n    <div className=\"query-editor-controls\">\n      {addParameterButtonProps !== false && (\n        <ButtonTooltip title={addParameterButtonProps.title} shortcut={addParameterButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={addParameterButtonProps.disabled}\n            onClick={addParameterButtonProps.onClick}>\n            {\"{{\"}&nbsp;{\"}}\"}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {formatButtonProps !== false && (\n        <ButtonTooltip title={formatButtonProps.title} shortcut={formatButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-r-5\"\n            disabled={formatButtonProps.disabled}\n            onClick={formatButtonProps.onClick}>\n            <span className=\"zmdi zmdi-format-indent-increase\" />\n            {formatButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {autocompleteToggleProps !== false && (\n        <AutocompleteToggle\n          available={autocompleteToggleProps.available}\n          enabled={autocompleteToggleProps.enabled}\n          onToggle={autocompleteToggleProps.onToggle}\n        />\n      )}\n      {autoLimitCheckboxProps !== false && <AutoLimitCheckbox {...autoLimitCheckboxProps} />}\n      {dataSourceSelectorProps === false && <span className=\"query-editor-controls-spacer\" />}\n      {dataSourceSelectorProps !== false && (\n        <Select\n          className=\"w-100 flex-fill datasource-small\"\n          disabled={dataSourceSelectorProps.disabled}\n          value={dataSourceSelectorProps.value}\n          onChange={dataSourceSelectorProps.onChange}>\n          {map(dataSourceSelectorProps.options, option => (\n            <Select.Option key={`option-${option.value}`} value={option.value}>\n              {option.label}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n      {saveButtonProps !== false && (\n        <ButtonTooltip title={saveButtonProps.title} shortcut={saveButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            disabled={saveButtonProps.disabled}\n            loading={saveButtonProps.loading}\n            onClick={saveButtonProps.onClick}\n            data-test=\"SaveButton\">\n            {!saveButtonProps.loading && <span className=\"fa fa-floppy-o\" />}\n            {saveButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n      {executeButtonProps !== false && (\n        <ButtonTooltip title={executeButtonProps.title} shortcut={executeButtonProps.shortcut}>\n          <Button\n            className=\"query-editor-controls-button m-l-5\"\n            type=\"primary\"\n            disabled={executeButtonProps.disabled}\n            onClick={executeButtonProps.onClick}\n            data-test=\"ExecuteButton\">\n            <span className=\"zmdi zmdi-play\" />\n            {executeButtonProps.text}\n          </Button>\n        </ButtonTooltip>\n      )}\n    </div>\n  );\n}\n\nconst ButtonPropsPropType = PropTypes.oneOfType([\n  PropTypes.bool, // `false` to hide button\n  PropTypes.shape({\n    title: PropTypes.node,\n    disabled: PropTypes.bool,\n    loading: PropTypes.bool,\n    onClick: PropTypes.func,\n    text: PropTypes.node,\n    shortcut: PropTypes.string,\n  }),\n]);\n\nEditorControl.propTypes = {\n  addParameterButtonProps: ButtonPropsPropType,\n  formatButtonProps: ButtonPropsPropType,\n  saveButtonProps: ButtonPropsPropType,\n  executeButtonProps: ButtonPropsPropType,\n  autocompleteToggleProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      available: PropTypes.bool,\n      enabled: PropTypes.bool,\n      onToggle: PropTypes.func,\n    }),\n  ]),\n  autoLimitCheckboxProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape(AutoLimitCheckbox.propTypes),\n  ]),\n  dataSourceSelectorProps: PropTypes.oneOfType([\n    PropTypes.bool, // `false` to hide\n    PropTypes.shape({\n      disabled: PropTypes.bool,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          label: PropTypes.node,\n        })\n      ),\n      onChange: PropTypes.func,\n    }),\n  ]),\n};\n\nEditorControl.defaultProps = {\n  addParameterButtonProps: false,\n  formatButtonProps: false,\n  saveButtonProps: false,\n  executeButtonProps: false,\n  autocompleteToggleProps: false,\n  autoLimitCheckboxProps: false,\n  dataSourceSelectorProps: false,\n};\n","import React, { useEffect, useMemo, useState, useCallback, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { AceEditor, snippetsModule, updateSchemaCompleter } from \"./ace\";\nimport { srNotify } from \"@/lib/accessibility\";\nimport { SchemaItemType } from \"@/components/queries/SchemaBrowser\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport QuerySnippet from \"@/services/query-snippet\";\n\nimport QueryEditorControls from \"./QueryEditorControls\";\nimport \"./index.less\";\n\nconst editorProps = { $blockScrolling: Infinity };\n\nconst QueryEditor = React.forwardRef(function(\n  { className, syntax, value, autocompleteEnabled, schema, onChange, onSelectionChange, ...props },\n  ref\n) {\n  const [container, setContainer] = useState(null);\n  const [editorRef, setEditorRef] = useState(null);\n\n  // For some reason, value for AceEditor should be managed in this way - otherwise it goes berserk when selecting text\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const handleChange = useCallback(\n    str => {\n      setCurrentValue(str);\n      onChange(str);\n    },\n    [onChange]\n  );\n\n  const editorOptions = useMemo(\n    () => ({\n      behavioursEnabled: true,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: autocompleteEnabled,\n      autoScrollEditorIntoView: true,\n    }),\n    [autocompleteEnabled]\n  );\n\n  useEffect(() => {\n    if (editorRef) {\n      const editorId = editorRef.editor.id;\n      updateSchemaCompleter(editorId, schema);\n      return () => {\n        updateSchemaCompleter(editorId, null);\n      };\n    }\n  }, [schema, editorRef]);\n\n  useEffect(() => {\n    function resize() {\n      if (editorRef) {\n        editorRef.editor.resize();\n      }\n    }\n\n    if (container) {\n      resize();\n      const unwatch = resizeObserver(container, resize);\n      return unwatch;\n    }\n  }, [container, editorRef]);\n\n  const handleSelectionChange = useCallback(\n    selection => {\n      const rawSelectedQueryText = editorRef.editor.session.doc.getTextRange(selection.getRange());\n      const selectedQueryText = rawSelectedQueryText.length > 1 ? rawSelectedQueryText : null;\n      onSelectionChange(selectedQueryText);\n    },\n    [editorRef, onSelectionChange]\n  );\n\n  const initEditor = useCallback(editor => {\n    // Release Cmd/Ctrl+L to the browser\n    editor.commands.bindKey({ win: \"Ctrl+L\", mac: \"Cmd+L\" }, null);\n\n    // Release Cmd/Ctrl+Shift+F for format query action\n    editor.commands.bindKey({ win: \"Ctrl+Shift+F\", mac: \"Cmd+Shift+F\" }, null);\n\n    // Release Ctrl+P for open new parameter dialog\n    editor.commands.bindKey({ win: \"Ctrl+P\", mac: null }, null);\n    // Lineup only mac\n    editor.commands.bindKey({ win: null, mac: \"Ctrl+P\" }, \"golineup\");\n\n    // Esc for exiting\n    editor.commands.bindKey({ win: \"Esc\", mac: \"Esc\" }, () => {\n      editor.blur();\n    });\n\n    let notificationCleanup = null;\n    editor.on(\"focus\", () => {\n      notificationCleanup = srNotify({\n        text: \"You've entered the SQL editor. To exit press the ESC key.\",\n        politeness: \"assertive\",\n      });\n    });\n\n    editor.on(\"blur\", () => {\n      if (notificationCleanup) {\n        notificationCleanup();\n      }\n    });\n\n    // Reset Completer in case dot is pressed\n    editor.commands.on(\"afterExec\", e => {\n      if (e.command.name === \"insertstring\" && e.args === \".\" && editor.completer) {\n        editor.completer.showPopup(editor);\n      }\n    });\n\n    QuerySnippet.query().then(snippets => {\n      const snippetManager = snippetsModule.snippetManager;\n      const m = {\n        snippetText: \"\",\n      };\n      m.snippets = snippetManager.parseSnippetFile(m.snippetText);\n      snippets.forEach(snippet => {\n        m.snippets.push(snippet.getSnippet());\n      });\n      snippetManager.register(m.snippets || [], m.scope);\n    });\n\n    editor.focus();\n  }, []);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      paste: text => {\n        if (editorRef) {\n          const { editor } = editorRef;\n          editor.session.doc.replace(editor.selection.getRange(), text);\n          const range = editor.selection.getRange();\n          onChange(editor.session.getValue());\n          editor.selection.setRange(range);\n        }\n      },\n      focus: () => {\n        if (editorRef) {\n          editorRef.editor.focus();\n        }\n      },\n    }),\n    [editorRef, onChange]\n  );\n\n  return (\n    <div className={cx(\"query-editor-container\", className)} {...props} ref={setContainer}>\n      <AceEditor\n        ref={setEditorRef}\n        theme=\"textmate\"\n        mode={syntax || \"sql\"}\n        value={currentValue}\n        editorProps={editorProps}\n        width=\"100%\"\n        height=\"100%\"\n        setOptions={editorOptions}\n        showPrintMargin={false}\n        wrapEnabled={false}\n        onLoad={initEditor}\n        onChange={handleChange}\n        onSelectionChange={handleSelectionChange}\n      />\n    </div>\n  );\n});\n\nQueryEditor.propTypes = {\n  className: PropTypes.string,\n  syntax: PropTypes.string,\n  value: PropTypes.string,\n  autocompleteEnabled: PropTypes.bool,\n  schema: PropTypes.arrayOf(SchemaItemType),\n  onChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n};\n\nQueryEditor.defaultProps = {\n  className: null,\n  syntax: null,\n  value: null,\n  autocompleteEnabled: true,\n  schema: [],\n  onChange: () => {},\n  onSelectionChange: () => {},\n};\n\nQueryEditor.Controls = QueryEditorControls;\n\nexport default QueryEditor;\n","import { HTMLAttributes } from \"react\";\n\ninterface SrNotifyProps {\n  text: string;\n  expiry: number;\n  container: HTMLElement;\n  politeness: HTMLAttributes<HTMLDivElement>[\"aria-live\"];\n}\n\nexport function srNotify({ text, expiry = 1000, container = document.body, politeness = \"polite\" }: SrNotifyProps) {\n  const element = document.createElement(\"div\");\n  const id = `speak-${Date.now()}`;\n\n  element.id = id;\n  element.className = \"sr-only\";\n  element.textContent = text;\n\n  element.setAttribute(\"role\", \"alert\");\n  element.setAttribute(\"aria-live\", politeness);\n\n  container.appendChild(element);\n\n  let timer: null | number = null;\n  let isDone = false;\n  const cleanupFn = () => {\n    if (isDone) {\n      return;\n    }\n    isDone = true;\n\n    try {\n      container.removeChild(element);\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n  };\n\n  timer = window.setTimeout(cleanupFn, expiry);\n\n  return cleanupFn;\n}\n","import { has } from \"lodash\";\nimport { axios } from \"@/services/axios\";\nimport DataSource from \"@/services/data-source\";\nimport { fetchDataFromJob } from \"@/services/query-result\";\n\nfunction fetchDataFromJobOrReturnData(data) {\n  return has(data, \"job.id\") ? fetchDataFromJob(data.job.id, 1000) : data;\n}\n\nfunction rejectErrorResponse(data) {\n  return has(data, \"error\") ? Promise.reject(new Error(data.error.message)) : data;\n}\n\nexport default {\n  ...DataSource,\n  getDatabases: ({ id }, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${id}`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getDatabaseTables: (data, databaseName, refresh = false) => {\n    const params = {};\n\n    if (refresh) {\n      params.refresh = true;\n    }\n    return axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/tables`, { params })\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse);\n  },\n  getTableColumns: (data, databaseName, tableName) =>\n    axios\n      .get(`api/databricks/databases/${data.id}/${databaseName}/columns/${tableName}`)\n      .then(fetchDataFromJobOrReturnData)\n      .then(rejectErrorResponse),\n};\n","import { includes, has, get, map, first, isFunction, isEmpty, startsWith } from \"lodash\";\nimport { useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport notification from \"@/services/notification\";\nimport DatabricksDataSource from \"@/services/databricks-data-source\";\n\nfunction getDatabases(dataSource, refresh = false) {\n  if (!dataSource) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabases(dataSource, refresh).catch(() => {\n    notification.error(\"Failed to load Database list.\", \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction getSchema(dataSource, databaseName, refresh = false) {\n  if (!dataSource || !databaseName) {\n    return Promise.resolve([]);\n  }\n\n  return DatabricksDataSource.getDatabaseTables(dataSource, databaseName, refresh).catch(() => {\n    notification.error(`Failed to load tables for ${databaseName}.`, \"Please try again later.\");\n    return Promise.reject();\n  });\n}\n\nfunction addDisplayNameWithoutDatabaseName(schema, databaseName) {\n  if (!databaseName) {\n    return schema;\n  }\n  // add display name without {databaseName} + \".\"\n  return map(schema, table => {\n    const databaseNamePrefix = databaseName + \".\";\n    let displayName = table.name;\n    if (startsWith(table.name, databaseNamePrefix)) {\n      displayName = table.name.slice(databaseNamePrefix.length);\n    }\n    return { ...table, displayName };\n  });\n}\n\nexport default function useDatabricksSchema(dataSource, options = null, onOptionsUpdate = null) {\n  const [databases, setDatabases] = useState([]);\n  const [loadingDatabases, setLoadingDatabases] = useState(true);\n  const [currentDatabaseName, setCurrentDatabaseName] = useState();\n  const [schemas, setSchemas] = useState({});\n  const [loadingSchema, setLoadingSchema] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const setCurrentSchema = useCallback(\n    schema =>\n      setSchemas(currentSchemas => ({\n        ...currentSchemas,\n        [currentDatabaseName]: schema,\n      })),\n    [currentDatabaseName]\n  );\n\n  const currentDatabaseNameRef = useRef();\n  currentDatabaseNameRef.current = currentDatabaseName;\n  const loadTableColumns = useCallback(\n    tableName => {\n      // remove [databaseName.] from the tableName\n      DatabricksDataSource.getTableColumns(\n        dataSource,\n        currentDatabaseName,\n        tableName.substring(currentDatabaseName.length + 1)\n      ).then(columns => {\n        if (currentDatabaseNameRef.current === currentDatabaseName) {\n          setSchemas(currentSchemas => {\n            const schema = get(currentSchemas, currentDatabaseName, []);\n            const updatedSchema = map(schema, table => {\n              if (table.name === tableName) {\n                return { ...table, columns, loading: false };\n              }\n              return table;\n            });\n            return {\n              ...currentSchemas,\n              [currentDatabaseName]: updatedSchema,\n            };\n          });\n        }\n      });\n    },\n    [dataSource, currentDatabaseName]\n  );\n\n  const schema = useMemo(() => {\n    const currentSchema = get(schemas, currentDatabaseName, []);\n    return addDisplayNameWithoutDatabaseName(currentSchema, currentDatabaseName);\n  }, [schemas, currentDatabaseName]);\n\n  const refreshAll = useCallback(() => {\n    if (!refreshing) {\n      setRefreshing(true);\n      const getDatabasesPromise = getDatabases(dataSource, true).then(setDatabases);\n      const getSchemasPromise = getSchema(dataSource, currentDatabaseName, true).then(({ schema }) =>\n        setCurrentSchema(schema)\n      );\n\n      Promise.all([getSchemasPromise.catch(() => {}), getDatabasesPromise.catch(() => {})]).then(() =>\n        setRefreshing(false)\n      );\n    }\n  }, [dataSource, currentDatabaseName, setCurrentSchema, refreshing]);\n\n  const schemasRef = useRef();\n  schemasRef.current = schemas;\n  useEffect(() => {\n    let isCancelled = false;\n    if (currentDatabaseName && !has(schemasRef.current, currentDatabaseName)) {\n      setLoadingSchema(true);\n      getSchema(dataSource, currentDatabaseName)\n        .catch(() => Promise.resolve({ schema: [], has_columns: true }))\n        .then(({ schema, has_columns }) => {\n          if (!isCancelled) {\n            if (!has_columns && !isEmpty(schema)) {\n              schema = map(schema, table => ({ ...table, loading: true }));\n              getSchema(dataSource, currentDatabaseName, true).then(({ schema }) => {\n                if (!isCancelled) {\n                  setCurrentSchema(schema);\n                }\n              });\n            }\n            setCurrentSchema(schema);\n          }\n        })\n        .finally(() => {\n          if (!isCancelled) {\n            setLoadingSchema(false);\n          }\n        });\n    }\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource, currentDatabaseName, setCurrentSchema]);\n\n  const defaultDatabaseNameRef = useRef();\n  defaultDatabaseNameRef.current = get(options, \"selectedDatabase\", null);\n  useEffect(() => {\n    let isCancelled = false;\n    setLoadingDatabases(true);\n    setCurrentDatabaseName(undefined);\n    setSchemas({});\n    getDatabases(dataSource)\n      .catch(() => Promise.resolve([]))\n      .then(data => {\n        if (!isCancelled) {\n          setDatabases(data);\n\n          // We set the database using this order:\n          // 1. Currently selected value.\n          // 2. Last used stored in localStorage.\n          // 3. default database.\n          // 4. first database in the list.\n          let lastUsedDatabase =\n            defaultDatabaseNameRef.current || localStorage.getItem(`lastSelectedDatabricksDatabase_${dataSource.id}`);\n\n          if (!lastUsedDatabase) {\n            lastUsedDatabase = includes(data, \"default\") ? \"default\" : first(data) || null;\n          }\n\n          setCurrentDatabaseName(lastUsedDatabase);\n        }\n      })\n      .finally(() => {\n        if (!isCancelled) {\n          setLoadingDatabases(false);\n        }\n      });\n    return () => {\n      isCancelled = true;\n    };\n  }, [dataSource]);\n\n  const setCurrentDatabase = useCallback(\n    databaseName => {\n      if (databaseName) {\n        try {\n          localStorage.setItem(`lastSelectedDatabricksDatabase_${dataSource.id}`, databaseName);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      setCurrentDatabaseName(databaseName);\n      if (isFunction(onOptionsUpdate) && databaseName !== defaultDatabaseNameRef.current) {\n        onOptionsUpdate({\n          ...options,\n          selectedDatabase: databaseName,\n        });\n      }\n    },\n    [dataSource.id, options, onOptionsUpdate]\n  );\n\n  return {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    currentDatabaseName,\n    setCurrentDatabase,\n    loadTableColumns,\n    refreshAll,\n    refreshing,\n  };\n}\n","import React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport { filter, includes, get, find } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Button from \"antd/lib/button\";\nimport SyncOutlinedIcon from \"@ant-design/icons/SyncOutlined\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Tooltip from \"@/components/Tooltip\";\nimport { SchemaList, applyFilterOnSchema } from \"@/components/queries/SchemaBrowser\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport useDatabricksSchema from \"./useDatabricksSchema\";\n\nimport \"./DatabricksSchemaBrowser.less\";\n\nexport default function DatabricksSchemaBrowser({\n  dataSource,\n  options,\n  onOptionsUpdate,\n  onSchemaUpdate,\n  onItemSelect,\n  ...props\n}) {\n  const {\n    databases,\n    loadingDatabases,\n    schema,\n    loadingSchema,\n    loadTableColumns,\n    currentDatabaseName,\n    setCurrentDatabase,\n    refreshAll,\n    refreshing,\n  } = useDatabricksSchema(dataSource, options, onOptionsUpdate);\n  const [filterString, setFilterString] = useState(\"\");\n  const [databaseFilterString, setDatabaseFilterString] = useState(\"\");\n  const filteredSchema = useMemo(() => applyFilterOnSchema(schema, filterString), [schema, filterString]);\n  const [isDatabaseSelectOpen, setIsDatabaseSelectOpen] = useState(false);\n  const [expandedFlags, setExpandedFlags] = useState({});\n  const [handleFilterChange] = useDebouncedCallback(setFilterString, 500);\n  const [handleDatabaseFilterChange, cancelHandleDatabaseFilterChange] = useDebouncedCallback(\n    setDatabaseFilterString,\n    500\n  );\n\n  const handleDatabaseSelection = useCallback(\n    databaseName => {\n      setCurrentDatabase(databaseName);\n      cancelHandleDatabaseFilterChange();\n      setDatabaseFilterString(\"\");\n    },\n    [cancelHandleDatabaseFilterChange, setCurrentDatabase]\n  );\n\n  const filteredDatabases = useMemo(\n    () => filter(databases, database => includes(database.toLowerCase(), databaseFilterString.toLowerCase())),\n    [databases, databaseFilterString]\n  );\n\n  const handleSchemaUpdate = useImmutableCallback(onSchemaUpdate);\n\n  useEffect(() => {\n    handleSchemaUpdate(schema);\n  }, [schema, handleSchemaUpdate]);\n\n  useEffect(() => {\n    setExpandedFlags({});\n  }, [currentDatabaseName]);\n\n  function toggleTable(tableName) {\n    const table = find(schema, { name: tableName });\n    if (!expandedFlags[tableName] && get(table, \"loading\", false)) {\n      loadTableColumns(tableName);\n    }\n    setExpandedFlags({\n      ...expandedFlags,\n      [tableName]: !expandedFlags[tableName],\n    });\n  }\n\n  return (\n    <div className=\"databricks-schema-browser schema-container\" {...props}>\n      <div className=\"schema-control\">\n        <Input\n          className={isDatabaseSelectOpen ? \"database-select-open\" : \"\"}\n          placeholder=\"Filter tables & columns...\"\n          aria-label=\"Search schema\"\n          disabled={loadingDatabases || loadingSchema}\n          onChange={event => handleFilterChange(event.target.value)}\n          addonBefore={\n            <Select\n              dropdownClassName=\"databricks-schema-browser-db-dropdown\"\n              loading={loadingDatabases}\n              disabled={loadingDatabases}\n              onChange={handleDatabaseSelection}\n              value={currentDatabaseName}\n              showSearch\n              onSearch={handleDatabaseFilterChange}\n              onDropdownVisibleChange={setIsDatabaseSelectOpen}\n              placeholder={\n                <>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" /> Database\n                </>\n              }>\n              {filteredDatabases.map(database => (\n                <Select.Option key={database}>\n                  <i className=\"fa fa-database m-r-5\" aria-hidden=\"true\" />\n                  {database}\n                </Select.Option>\n              ))}\n            </Select>\n          }\n        />\n      </div>\n      <div className=\"schema-list-wrapper\">\n        <SchemaList\n          loading={loadingDatabases || loadingSchema}\n          schema={filteredSchema}\n          expandedFlags={expandedFlags}\n          onTableExpand={toggleTable}\n          onItemSelect={onItemSelect}\n        />\n        {!(loadingSchema || loadingDatabases) && (\n          <div className=\"load-button\">\n            <Tooltip title={!refreshing ? \"Refresh Databases and Current Schema\" : null}>\n              <Button type=\"link\" onClick={refreshAll} disabled={refreshing}>\n                <SyncOutlinedIcon spin={refreshing} />\n              </Button>\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nDatabricksSchemaBrowser.propTypes = {\n  dataSource: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  options: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onOptionsUpdate: PropTypes.func,\n  onSchemaUpdate: PropTypes.func,\n  onItemSelect: PropTypes.func,\n};\n\nDatabricksSchemaBrowser.defaultProps = {\n  dataSource: null,\n  options: null,\n  onOptionsUpdate: () => {},\n  onSchemaUpdate: () => {},\n  onItemSelect: () => {},\n};\n","import { isArray, isNil, each } from \"lodash\";\n\nconst componentsRegistry = new Map();\n\nexport const QueryEditorComponents = {\n  SCHEMA_BROWSER: \"SchemaBrowser\",\n  QUERY_EDITOR: \"QueryEditor\",\n};\n\nexport function registerEditorComponent(componentName, component, dataSourceTypes) {\n  if (isNil(dataSourceTypes)) {\n    dataSourceTypes = [null]; // use `null` entry for the default set of components\n  }\n\n  if (!isArray(dataSourceTypes)) {\n    dataSourceTypes = [dataSourceTypes];\n  }\n\n  each(dataSourceTypes, dataSourceType => {\n    componentsRegistry.set(dataSourceType, { ...componentsRegistry.get(dataSourceType), [componentName]: component });\n  });\n}\n\nexport function getEditorComponents(dataSourceType) {\n  return { ...componentsRegistry.get(null), ...componentsRegistry.get(dataSourceType) };\n}\n","import { useState, useEffect, useMemo } from \"react\";\nimport { first, orderBy, find } from \"lodash\";\nimport location from \"@/services/location\";\n\nexport default function useVisualizationTabHandler(visualizations) {\n  const firstVisualization = useMemo(() => first(orderBy(visualizations, [\"id\"])) || {}, [visualizations]);\n  const [selectedTab, setSelectedTab] = useState(+location.hash || firstVisualization.id);\n\n  useEffect(() => {\n    const hashValue = selectedTab !== firstVisualization.id ? `${selectedTab}` : null;\n    if (location.hash !== hashValue) {\n      location.setHash(hashValue);\n    }\n\n    const unlisten = location.listen(() => {\n      if (location.hash !== hashValue) {\n        setSelectedTab(+location.hash || firstVisualization.id);\n      }\n    });\n    return unlisten;\n  }, [firstVisualization.id, selectedTab]);\n\n  // make sure selectedTab is in visualizations\n  useEffect(() => {\n    if (!find(visualizations, { id: selectedTab })) {\n      setSelectedTab(firstVisualization.id);\n    }\n  }, [firstVisualization.id, selectedTab, visualizations]);\n\n  return useMemo(() => [selectedTab, setSelectedTab], [selectedTab]);\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { reduce } from \"lodash\";\nimport localOptions from \"@/lib/localOptions\";\n\nfunction calculateTokensCount(schema) {\n  return reduce(schema, (totalLength, table) => totalLength + table.columns.length, 0);\n}\n\nexport default function useAutocompleteFlags(schema) {\n  const isAvailable = useMemo(() => calculateTokensCount(schema) <= 5000, [schema]);\n  const [isEnabled, setIsEnabled] = useState(localOptions.get(\"liveAutocomplete\", true));\n\n  const toggleAutocomplete = useCallback(state => {\n    setIsEnabled(state);\n    localOptions.set(\"liveAutocomplete\", state);\n  }, []);\n\n  return useMemo(() => [isAvailable, isEnabled, toggleAutocomplete], [isAvailable, isEnabled, toggleAutocomplete]);\n}\n","import { useCallback, useState } from \"react\";\nimport localOptions from \"@/lib/localOptions\";\nimport { get, extend } from \"lodash\";\n\nfunction isAutoLimitAvailable(dataSource) {\n  return get(dataSource, \"supports_auto_limit\", false);\n}\n\nexport default function useAutoLimitFlags(dataSource, query, setQuery) {\n  const isAvailable = isAutoLimitAvailable(dataSource);\n  const [isChecked, setIsChecked] = useState(query.options.apply_auto_limit);\n  query.options.apply_auto_limit = isChecked;\n\n  const setAutoLimit = useCallback(\n    state => {\n      setIsChecked(state);\n      localOptions.set(\"applyAutoLimit\", state);\n      setQuery(extend(query.clone(), { options: { ...query.options, apply_auto_limit: state } }));\n    },\n    [query, setQuery]\n  );\n\n  return [isAvailable, isChecked, setAutoLimit];\n}\n","import SchemaBrowser from \"@/components/queries/SchemaBrowser\";\nimport QueryEditor from \"@/components/queries/QueryEditor\";\nimport DatabricksSchemaBrowser from \"./databricks/DatabricksSchemaBrowser\";\n\nimport { registerEditorComponent, getEditorComponents, QueryEditorComponents } from \"./editorComponents\";\n\n// default\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, SchemaBrowser);\nregisterEditorComponent(QueryEditorComponents.QUERY_EDITOR, QueryEditor);\n\n// databricks\nregisterEditorComponent(QueryEditorComponents.SCHEMA_BROWSER, DatabricksSchemaBrowser, [\n  \"databricks\",\n  \"databricks_internal\",\n]);\n\nexport { getEditorComponents };\n","import { find } from \"lodash\";\nimport debug from \"debug\";\nimport recordEvent from \"@/services/recordEvent\";\nimport redashIconUrl from \"@/assets/images/redash_icon_small.png\";\n\nconst logger = debug(\"redash:notifications\");\n\nconst Notification = window.Notification || null;\nif (!Notification) {\n  logger(\"HTML5 notifications are not supported.\");\n}\n\nconst hidden = find([\"hidden\", \"webkitHidden\", \"mozHidden\", \"msHidden\"], prop => prop in document);\n\nfunction isPageVisible() {\n  return !document[hidden];\n}\n\nfunction getPermissions() {\n  if (Notification && Notification.permission === \"default\") {\n    Notification.requestPermission();\n  }\n}\n\nfunction showNotification(title, content) {\n  if (!Notification || isPageVisible() || Notification.permission !== \"granted\") {\n    return;\n  }\n\n  // using the 'tag' to avoid showing duplicate notifications\n  const notification = new Notification(title, {\n    tag: title + content,\n    body: content,\n    icon: redashIconUrl,\n  });\n  notification.onclick = function onClick() {\n    window.focus();\n    this.close();\n    recordEvent(\"click\", \"notification\");\n  };\n}\n\nexport default {\n  getPermissions,\n  showNotification,\n};\n","import { useReducer, useEffect, useRef } from \"react\";\nimport location from \"@/services/location\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport notifications from \"@/services/notifications\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nfunction getMaxAge() {\n  const { maxAge } = location.search;\n  return maxAge !== undefined ? maxAge : -1;\n}\n\nconst reducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty,\n});\n\n// This is currently specific to a Query page, we can refactor\n// it slightly to make it suitable for dashboard widgets instead of the other solution it\n// has in there.\nexport default function useQueryExecute(query) {\n  const [executionState, setExecutionState] = useReducer(reducer, {\n    queryResult: null,\n    isExecuting: false,\n    loadedInitialResults: false,\n    executionStatus: null,\n    isCancelling: false,\n    cancelCallback: null,\n    error: null,\n  });\n\n  const queryResultInExecution = useRef(null);\n  // Clear executing queryResult when component is unmounted to avoid errors\n  useEffect(() => {\n    return () => {\n      queryResultInExecution.current = null;\n    };\n  }, []);\n\n  const executeQuery = useImmutableCallback((maxAge = 0, queryExecutor) => {\n    let newQueryResult;\n    if (queryExecutor) {\n      newQueryResult = queryExecutor();\n    } else {\n      newQueryResult = query.getQueryResult(maxAge);\n    }\n\n    recordEvent(\"execute\", \"query\", query.id);\n    notifications.getPermissions();\n\n    queryResultInExecution.current = newQueryResult;\n\n    setExecutionState({\n      updatedAt: newQueryResult.getUpdatedAt(),\n      executionStatus: newQueryResult.getStatus(),\n      isExecuting: true,\n      cancelCallback: () => {\n        recordEvent(\"cancel_execute\", \"query\", query.id);\n        setExecutionState({ isCancelling: true });\n        newQueryResult.cancelExecution();\n      },\n    });\n\n    const onStatusChange = status => {\n      if (queryResultInExecution.current === newQueryResult) {\n        setExecutionState({ updatedAt: newQueryResult.getUpdatedAt(), executionStatus: status });\n      }\n    };\n\n    newQueryResult\n      .toPromise(onStatusChange)\n      .then(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          // TODO: this should probably belong in the QueryEditor page.\n          if (queryResult && queryResult.query_result.query === query.query) {\n            query.latest_query_data_id = queryResult.getId();\n            query.queryResult = queryResult;\n          }\n\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} updated.`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: null,\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: null,\n          });\n        }\n      })\n      .catch(queryResult => {\n        if (queryResultInExecution.current === newQueryResult) {\n          if (executionState.loadedInitialResults) {\n            notifications.showNotification(\"Redash\", `${query.name} failed to run: ${queryResult.getError()}`);\n          }\n\n          setExecutionState({\n            queryResult,\n            loadedInitialResults: true,\n            error: queryResult.getError(),\n            isExecuting: false,\n            isCancelling: false,\n            executionStatus: ExecutionStatus.FAILED,\n          });\n        }\n      });\n  });\n\n  const queryRef = useRef(query);\n  queryRef.current = query;\n\n  useEffect(() => {\n    // TODO: this belongs on the query page?\n    // loadedInitialResults can be removed if so\n    if (queryRef.current.hasResult() || queryRef.current.paramsRequired()) {\n      executeQuery(getMaxAge());\n    } else {\n      setExecutionState({ loadedInitialResults: true });\n    }\n  }, [executeQuery]);\n\n  return { ...executionState, ...{ executeQuery } };\n}\n","import { isUndefined } from \"lodash\";\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\n\nexport default function useQueryParameters(query) {\n  const parameters = useMemo(() => query.getParametersDefs(), [query]);\n  const [dirtyFlag, setDirtyFlag] = useState(query.getParameters().hasPendingValues());\n\n  const updateDirtyFlag = useCallback(\n    flag => {\n      flag = isUndefined(flag) ? query.getParameters().hasPendingValues() : flag;\n      setDirtyFlag(flag);\n    },\n    [query]\n  );\n\n  useEffect(() => {\n    const updatedDirtyParameters = query.getParameters().hasPendingValues();\n    if (updatedDirtyParameters !== dirtyFlag) {\n      setDirtyFlag(updatedDirtyParameters);\n    }\n  }, [query, parameters, dirtyFlag]);\n\n  return useMemo(() => [parameters, dirtyFlag, updateDirtyFlag], [parameters, dirtyFlag, updateDirtyFlag]);\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport TimePicker from \"antd/lib/time-picker\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\nimport { capitalize, clone, isEqual, omitBy, isNil, isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport { secondsToInterval, durationHumanize, pluralize, IntervalEnum, localizeTime } from \"@/lib/utils\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { RefreshScheduleType, RefreshScheduleDefault, Moment } from \"../proptypes\";\n\nimport \"./ScheduleDialog.css\";\n\nconst WEEKDAYS_SHORT = moment.weekdaysShort();\nconst WEEKDAYS_FULL = moment.weekdays();\nconst DATE_FORMAT = \"YYYY-MM-DD\";\nconst HOUR_FORMAT = \"HH:mm\";\nconst { Option, OptGroup } = Select;\n\nexport function TimeEditor(props) {\n  const [time, setTime] = useState(props.defaultValue);\n  const showUtc = time && !time.isUTC();\n\n  function onChange(newTime) {\n    setTime(newTime);\n    props.onChange(newTime);\n  }\n\n  return (\n    <React.Fragment>\n      <TimePicker allowClear={false} value={time} format={HOUR_FORMAT} minuteStep={5} onChange={onChange} />\n      {showUtc && (\n        <span className=\"utc\" data-testid=\"utc\">\n          ({moment.utc(time).format(HOUR_FORMAT)} UTC)\n        </span>\n      )}\n    </React.Fragment>\n  );\n}\n\nTimeEditor.propTypes = {\n  defaultValue: Moment,\n  onChange: PropTypes.func.isRequired,\n};\n\nTimeEditor.defaultProps = {\n  defaultValue: null,\n};\n\nclass ScheduleDialog extends React.Component {\n  static propTypes = {\n    schedule: RefreshScheduleType,\n    refreshOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  static defaultProps = {\n    schedule: RefreshScheduleDefault,\n  };\n\n  state = this.getState();\n\n  getState() {\n    const newSchedule = clone(this.props.schedule || ScheduleDialog.defaultProps.schedule);\n    const { time, interval: seconds, day_of_week: day } = newSchedule;\n    const { interval } = secondsToInterval(seconds);\n    const [hour, minute] = time ? localizeTime(time).split(\":\") : [null, null];\n\n    return {\n      hour,\n      minute,\n      seconds,\n      interval,\n      dayOfWeek: day ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(day)] : null,\n      newSchedule,\n    };\n  }\n\n  get intervals() {\n    const ret = {\n      [IntervalEnum.NEVER]: [],\n    };\n    this.props.refreshOptions.forEach(seconds => {\n      const { count, interval } = secondsToInterval(seconds);\n      if (!(interval in ret)) {\n        ret[interval] = [];\n      }\n      ret[interval].push([count, seconds]);\n    });\n\n    Object.defineProperty(this, \"intervals\", { value: ret }); // memoize\n\n    return ret;\n  }\n\n  set newSchedule(newProps) {\n    this.setState(prevState => ({\n      newSchedule: Object.assign(prevState.newSchedule, newProps),\n    }));\n  }\n\n  setTime = time => {\n    this.newSchedule = {\n      time: moment(time)\n        .utc()\n        .format(HOUR_FORMAT),\n    };\n  };\n\n  setInterval = newSeconds => {\n    const { newSchedule } = this.state;\n    const { interval: newInterval } = secondsToInterval(newSeconds);\n\n    // resets to defaults\n    if (newInterval === IntervalEnum.NEVER) {\n      newSchedule.until = null;\n    }\n    if ([IntervalEnum.NEVER, IntervalEnum.MINUTES, IntervalEnum.HOURS].indexOf(newInterval) !== -1) {\n      newSchedule.time = null;\n    }\n    if (newInterval !== IntervalEnum.WEEKS) {\n      newSchedule.day_of_week = null;\n    }\n    if (\n      (newInterval === IntervalEnum.DAYS || newInterval === IntervalEnum.WEEKS) &&\n      (!this.state.minute || !this.state.hour)\n    ) {\n      newSchedule.time = moment()\n        .hour(\"00\")\n        .minute(\"15\")\n        .utc()\n        .format(HOUR_FORMAT);\n    }\n    if (newInterval === IntervalEnum.WEEKS && !this.state.dayOfWeek) {\n      newSchedule.day_of_week = WEEKDAYS_FULL[0];\n    }\n\n    newSchedule.interval = newSeconds;\n\n    const [hour, minute] = newSchedule.time ? localizeTime(newSchedule.time).split(\":\") : [null, null];\n\n    this.setState({\n      interval: newInterval,\n      seconds: newSeconds,\n      hour,\n      minute,\n      dayOfWeek: newSchedule.day_of_week ? WEEKDAYS_SHORT[WEEKDAYS_FULL.indexOf(newSchedule.day_of_week)] : null,\n    });\n\n    this.newSchedule = newSchedule;\n  };\n\n  setScheduleUntil = (_, date) => {\n    this.newSchedule = { until: date };\n  };\n\n  setWeekday = e => {\n    const dayOfWeek = e.target.value;\n    this.setState({ dayOfWeek });\n    this.newSchedule = {\n      day_of_week: dayOfWeek ? WEEKDAYS_FULL[WEEKDAYS_SHORT.indexOf(dayOfWeek)] : null,\n    };\n  };\n\n  setUntilToggle = e => {\n    const date = e.target.value ? moment().format(DATE_FORMAT) : null;\n    this.setScheduleUntil(null, date);\n  };\n\n  save() {\n    const { newSchedule } = this.state;\n    const hasChanged = () => {\n      const newCompact = omitBy(newSchedule, isNil);\n      const oldCompact = omitBy(this.props.schedule, isNil);\n      return !isEqual(newCompact, oldCompact);\n    };\n\n    // save if changed\n    if (hasChanged()) {\n      if (newSchedule.interval) {\n        this.props.dialog.close(clone(newSchedule));\n      } else {\n        this.props.dialog.close(null);\n      }\n    }\n    this.props.dialog.dismiss();\n  }\n\n  render() {\n    const { dialog } = this.props;\n    const {\n      interval,\n      minute,\n      hour,\n      seconds,\n      newSchedule: { until },\n    } = this.state;\n\n    return (\n      <Modal {...dialog.props} title=\"Refresh Schedule\" className=\"schedule\" onOk={() => this.save()}>\n        <div className=\"schedule-component\">\n          <h5>Refresh every</h5>\n          <div data-testid=\"interval\">\n            <Select className=\"input\" value={seconds} onChange={this.setInterval} dropdownMatchSelectWidth={false}>\n              <Option value={null} key=\"never\">\n                Never\n              </Option>\n              {Object.keys(this.intervals)\n                .filter(int => !isEmpty(this.intervals[int]))\n                .map(int => (\n                  <OptGroup label={capitalize(pluralize(int))} key={int}>\n                    {this.intervals[int].map(([cnt, secs]) => (\n                      <Option value={secs} key={`${int}-${cnt}`}>\n                        {durationHumanize(secs)}\n                      </Option>\n                    ))}\n                  </OptGroup>\n                ))}\n            </Select>\n          </div>\n        </div>\n        {[IntervalEnum.DAYS, IntervalEnum.WEEKS].indexOf(interval) !== -1 ? (\n          <div className=\"schedule-component\">\n            <h5>On time</h5>\n            <div data-testid=\"time\">\n              <TimeEditor\n                defaultValue={\n                  hour\n                    ? moment()\n                        .hour(hour)\n                        .minute(minute)\n                    : null\n                }\n                onChange={this.setTime}\n              />\n            </div>\n          </div>\n        ) : null}\n        {IntervalEnum.WEEKS === interval ? (\n          <div className=\"schedule-component\">\n            <h5>On day</h5>\n            <div data-testid=\"weekday\">\n              <Radio.Group size=\"medium\" defaultValue={this.state.dayOfWeek} onChange={this.setWeekday}>\n                {WEEKDAYS_SHORT.map(day => (\n                  <Radio.Button value={day} key={day} className=\"input\">\n                    {day[0]}\n                  </Radio.Button>\n                ))}\n              </Radio.Group>\n            </div>\n          </div>\n        ) : null}\n        {interval !== IntervalEnum.NEVER ? (\n          <div className=\"schedule-component\">\n            <h5>Ends</h5>\n            <div className=\"ends\" data-testid=\"ends\">\n              <Radio.Group size=\"medium\" value={!!until} onChange={this.setUntilToggle}>\n                <Radio value={false}>Never</Radio>\n                <Radio value>On</Radio>\n              </Radio.Group>\n              {until ? (\n                <DatePicker\n                  size=\"small\"\n                  className=\"datepicker\"\n                  value={moment(until)}\n                  allowClear={false}\n                  format={DATE_FORMAT}\n                  onChange={this.setScheduleUntil}\n                />\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ScheduleDialog);\n","import { isArray, intersection } from \"lodash\";\nimport { useCallback } from \"react\";\nimport ScheduleDialog from \"@/components/queries/ScheduleDialog\";\nimport { clientConfig } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useEditScheduleDialog(query, onChange) {\n  // We won't use flags that depend on data source\n  const queryFlags = useQueryFlags(query);\n\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(() => {\n    if (!queryFlags.canEdit || !queryFlags.canSchedule) {\n      return;\n    }\n\n    const intervals = clientConfig.queryRefreshIntervals;\n    const allowedIntervals = policy.getQueryRefreshIntervals();\n    const refreshOptions = isArray(allowedIntervals) ? intersection(intervals, allowedIntervals) : intervals;\n\n    ScheduleDialog.showModal({\n      schedule: query.schedule,\n      refreshOptions,\n    }).onClose(schedule => {\n      recordEvent(\"edit_schedule\", \"query\", query.id);\n      updateQuery({ schedule });\n    });\n  }, [query.id, query.schedule, queryFlags.canEdit, queryFlags.canSchedule, updateQuery]);\n}\n","import { axios } from \"@/services/axios\";\n\nconst saveOrCreateUrl = data => (data.id ? `api/visualizations/${data.id}` : \"api/visualizations\");\n\nconst Visualization = {\n  save: data => axios.post(saveOrCreateUrl(data), data),\n  delete: data => axios.delete(`api/visualizations/${data.id}`),\n};\n\nexport default Visualization;\n","import { isEqual, extend, map, sortBy, findIndex, filter, pick, omit } from \"lodash\";\nimport React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"antd/lib/modal\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport Filters, { filterData } from \"@/components/Filters\";\nimport notification from \"@/services/notification\";\nimport Visualization from \"@/services/visualization\";\nimport recordEvent from \"@/services/recordEvent\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\nimport {\n  registeredVisualizations,\n  getDefaultVisualization,\n  newVisualization,\n  VisualizationType,\n} from \"@redash/viz/lib\";\nimport { Renderer, Editor } from \"@/components/visualizations/visualizationComponents\";\n\nimport \"./EditVisualizationDialog.less\";\n\nfunction updateQueryVisualizations(query, visualization) {\n  const index = findIndex(query.visualizations, v => v.id === visualization.id);\n  if (index > -1) {\n    query.visualizations[index] = visualization;\n  } else {\n    // new visualization\n    query.visualizations.push(visualization);\n  }\n  query.visualizations = [...query.visualizations]; // clone array\n}\n\nfunction saveVisualization(visualization) {\n  if (visualization.id) {\n    recordEvent(\"update\", \"visualization\", visualization.id, { type: visualization.type });\n  } else {\n    recordEvent(\"create\", \"visualization\", null, { type: visualization.type });\n  }\n\n  return Visualization.save(visualization)\n    .then(result => {\n      notification.success(\"Visualization saved\");\n      return result;\n    })\n    .catch(error => {\n      notification.error(\"Visualization could not be saved\");\n      return Promise.reject(error);\n    });\n}\n\nfunction confirmDialogClose(isDirty) {\n  return new Promise((resolve, reject) => {\n    if (isDirty) {\n      Modal.confirm({\n        title: \"Visualization Editor\",\n        content: \"Are you sure you want to close the editor without saving?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onOk: () => resolve(),\n        onCancel: () => reject(),\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction EditVisualizationDialog({ dialog, visualization, query, queryResult }) {\n  const errorHandlerRef = useRef();\n\n  const isNew = !visualization;\n\n  const data = useQueryResultData(queryResult);\n  const [filters, setFilters] = useState(data.filters);\n\n  const filteredData = useMemo(\n    () => ({\n      columns: data.columns,\n      rows: filterData(data.rows, filters),\n    }),\n    [data, filters]\n  );\n\n  const defaultState = useMemo(() => {\n    const config = visualization ? registeredVisualizations[visualization.type] : getDefaultVisualization();\n    const options = config.getOptions(isNew ? {} : visualization.options, data);\n    return {\n      type: config.type,\n      name: isNew ? config.name : visualization.name,\n      options,\n      originalOptions: options,\n    };\n  }, [data, isNew, visualization]);\n\n  const [type, setType] = useState(defaultState.type);\n  const [name, setName] = useState(defaultState.name);\n  const [nameChanged, setNameChanged] = useState(false);\n  const [options, setOptions] = useState(defaultState.options);\n\n  const [saveInProgress, setSaveInProgress] = useState(false);\n\n  useEffect(() => {\n    if (errorHandlerRef.current) {\n      errorHandlerRef.current.reset();\n    }\n  }, [data, options]);\n\n  function onTypeChanged(newType) {\n    setType(newType);\n\n    const config = registeredVisualizations[newType];\n    if (!nameChanged) {\n      setName(config.name);\n    }\n\n    setOptions(config.getOptions(isNew ? {} : visualization.options, data));\n  }\n\n  function onNameChanged(newName) {\n    setName(newName);\n    setNameChanged(newName !== name);\n  }\n\n  function onOptionsChanged(newOptions) {\n    const config = registeredVisualizations[type];\n    setOptions(config.getOptions(newOptions, data));\n  }\n\n  function save() {\n    setSaveInProgress(true);\n    let visualizationOptions = options;\n    if (type === \"TABLE\") {\n      visualizationOptions = omit(visualizationOptions, [\"paginationSize\"]);\n    }\n\n    const visualizationData = extend(newVisualization(type), visualization, {\n      name,\n      options: visualizationOptions,\n      query_id: query.id,\n    });\n    saveVisualization(visualizationData).then(savedVisualization => {\n      updateQueryVisualizations(query, savedVisualization);\n      dialog.close(savedVisualization);\n    });\n  }\n\n  function dismiss() {\n    const optionsChanged = !isEqual(options, defaultState.originalOptions);\n    confirmDialogClose(nameChanged || optionsChanged).then(dialog.dismiss);\n  }\n\n  // When editing existing visualization chart type selector is disabled, so add only existing visualization's\n  // descriptor there (to properly render the component). For new visualizations show all types except of deprecated\n  const availableVisualizations = isNew\n    ? filter(sortBy(registeredVisualizations, [\"name\"]), vis => !vis.isDeprecated)\n    : pick(registeredVisualizations, [type]);\n\n  const vizTypeId = useUniqueId(\"visualization-type\");\n  const vizNameId = useUniqueId(\"visualization-name\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      wrapClassName=\"ant-modal-fullscreen\"\n      title=\"Visualization Editor\"\n      okText=\"Save\"\n      okButtonProps={{\n        loading: saveInProgress,\n        disabled: saveInProgress,\n      }}\n      onOk={save}\n      onCancel={dismiss}\n      wrapProps={{ \"data-test\": \"EditVisualizationDialog\" }}>\n      <div className=\"edit-visualization-dialog\">\n        <div className=\"visualization-settings\">\n          <div className=\"m-b-15\">\n            <label htmlFor={vizTypeId}>Visualization Type</label>\n            <Select\n              data-test=\"VisualizationType\"\n              id={vizTypeId}\n              className=\"w-100\"\n              disabled={!isNew}\n              value={type}\n              onChange={onTypeChanged}>\n              {map(availableVisualizations, vis => (\n                <Select.Option key={vis.type} data-test={\"VisualizationType.\" + vis.type}>\n                  {vis.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"m-b-15\">\n            <label htmlFor={vizNameId}>Visualization Name</label>\n            <Input\n              data-test=\"VisualizationName\"\n              id={vizNameId}\n              className=\"w-100\"\n              value={name}\n              onChange={event => onNameChanged(event.target.value)}\n            />\n          </div>\n          <div data-test=\"VisualizationEditor\">\n            <Editor\n              type={type}\n              data={data}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n        <div className=\"visualization-preview\">\n          <label htmlFor=\"visualization-preview\" className=\"invisible hidden-xs\">\n            Preview\n          </label>\n          <Filters filters={filters} onChange={setFilters} />\n          <div className=\"scrollbox\" data-test=\"VisualizationPreview\">\n            <Renderer\n              type={type}\n              data={filteredData}\n              options={options}\n              visualizationName={name}\n              onOptionsChange={onOptionsChanged}\n            />\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nEditVisualizationDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  visualization: VisualizationType,\n  queryResult: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nEditVisualizationDialog.defaultProps = {\n  visualization: null,\n};\n\nexport default wrapDialog(EditVisualizationDialog);\n","import { extend, filter, find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditVisualizationDialog from \"@/components/visualizations/EditVisualizationDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useEditVisualizationDialog(query, queryResult, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    (visualizationId = null) => {\n      const visualization = find(query.visualizations, { id: visualizationId }) || null;\n      EditVisualizationDialog.showModal({\n        query,\n        visualization,\n        queryResult,\n      }).onClose(updatedVisualization => {\n        const filteredVisualizations = filter(query.visualizations, v => v.id !== updatedVisualization.id);\n        handleChange(\n          extend(query.clone(), { visualizations: [...filteredVisualizations, updatedVisualization] }),\n          updatedVisualization\n        );\n      });\n    },\n    [query, queryResult, handleChange]\n  );\n}\n","import { extend, filter } from \"lodash\";\nimport { useCallback } from \"react\";\nimport Visualization from \"@/services/visualization\";\nimport notification from \"@/services/notification\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useDeleteVisualization(query, onChange) {\n  const handleChange = useImmutableCallback(onChange);\n\n  return useCallback(\n    visualizationId =>\n      Visualization.delete({ id: visualizationId })\n        .then(() => {\n          const filteredVisualizations = filter(query.visualizations, v => v.id !== visualizationId);\n          handleChange(extend(query.clone(), { visualizations: filteredVisualizations }));\n        })\n        .catch(() => {\n          notification.error(\"Error deleting visualization.\", \"Maybe it's used in a dashboard?\");\n        }),\n    [query, handleChange]\n  );\n}\n","import { useCallback } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport recordEvent from \"@/services/recordEvent\";\n\nexport default function useUpdateQueryDescription(query, onChange) {\n  const updateQuery = useUpdateQuery(query, onChange);\n\n  return useCallback(\n    description => {\n      recordEvent(\"edit_description\", \"query\", query.id);\n      updateQuery({ description });\n    },\n    [query.id, updateQuery]\n  );\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function QuerySourceTypeIcon(props) {\n  return <img src={`static/images/db-logos/${props.type}.png`} width=\"20\" alt={props.alt} />;\n}\n\nQuerySourceTypeIcon.propTypes = {\n  type: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { registerComponent } from \"@/components/DynamicComponent\";\nimport { QuerySourceTypeIcon } from \"@/pages/queries/components/QuerySourceTypeIcon\";\n\nexport function QuerySourceDropdownItem({ dataSource, children }) {\n  return (\n    <React.Fragment>\n      <QuerySourceTypeIcon type={dataSource.type} aria-label={dataSource.name} title={dataSource.name} />\n      {children ? children : <span>{dataSource.name}</span>}\n    </React.Fragment>\n  );\n}\n\nQuerySourceDropdownItem.propTypes = {\n  dataSource: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    type: PropTypes.string,\n  }).isRequired,\n  children: PropTypes.element,\n};\n\nregisterComponent(\"QuerySourceDropdownItem\", QuerySourceDropdownItem);\n","import Select from \"antd/lib/select\";\nimport { map } from \"lodash\";\nimport DynamicComponent, { registerComponent } from \"@/components/DynamicComponent\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./QuerySourceDropdownItem\"; // register QuerySourceDropdownItem\n\nexport function QuerySourceDropdown(props) {\n  return (\n    <Select\n      className=\"w-100\"\n      data-test=\"SelectDataSource\"\n      placeholder=\"Choose data source...\"\n      value={props.value}\n      disabled={props.disabled}\n      loading={props.loading}\n      optionFilterProp=\"data-name\"\n      showSearch\n      onChange={props.onChange}>\n      {map(props.dataSources, ds => (\n        <Select.Option key={`ds-${ds.id}`} value={ds.id} data-name={ds.name} data-test={`SelectDataSource${ds.id}`}>\n          <DynamicComponent name={\"QuerySourceDropdownItem\"} dataSource={ds} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nQuerySourceDropdown.propTypes = {\n  dataSources: PropTypes.any,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nregisterComponent(\"QuerySourceDropdown\", QuerySourceDropdown);\n","import { extend, find, includes, isEmpty, map } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Resizable from \"@/components/Resizable\";\nimport Parameters from \"@/components/Parameters\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport notification from \"@/services/notification\";\nimport * as queryFormat from \"@/lib/queryFormat\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QuerySourceAlerts from \"./components/QuerySourceAlerts\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport { getEditorComponents } from \"@/components/queries/editor-components\";\nimport useQuery from \"./hooks/useQuery\";\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useAutocompleteFlags from \"./hooks/useAutocompleteFlags\";\nimport useAutoLimitFlags from \"./hooks/useAutoLimitFlags\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useQueryResultData from \"@/lib/useQueryResultData\";\nimport useQueryDataSources from \"./hooks/useQueryDataSources\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useAddNewParameterDialog from \"./hooks/useAddNewParameterDialog\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useAddVisualizationDialog from \"./hooks/useAddVisualizationDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useUpdateQuery from \"./hooks/useUpdateQuery\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useUnsavedChangesAlert from \"./hooks/useUnsavedChangesAlert\";\n\nimport \"./components/QuerySourceDropdown\"; // register QuerySourceDropdown\nimport \"./QuerySource.less\";\n\nfunction chooseDataSourceId(dataSourceIds, availableDataSources) {\n  availableDataSources = map(availableDataSources, ds => ds.id);\n  return find(dataSourceIds, id => includes(availableDataSources, id)) || null;\n}\n\nfunction QuerySource(props) {\n  const { query, setQuery, isDirty, saveQuery } = useQuery(props.query);\n  const { dataSourcesLoaded, dataSources, dataSource } = useQueryDataSources(query);\n  const [schema, setSchema] = useState([]);\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const { QueryEditor, SchemaBrowser } = getEditorComponents(dataSource && dataSource.type);\n  const isMobile = !useMedia({ minWidth: 768 });\n\n  useUnsavedChangesAlert(isDirty);\n\n  const {\n    queryResult,\n    isExecuting: isQueryExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n    loadedInitialResults,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const editorRef = useRef(null);\n  const [autocompleteAvailable, autocompleteEnabled, toggleAutocomplete] = useAutocompleteFlags(schema);\n  const [autoLimitAvailable, autoLimitChecked, setAutoLimit] = useAutoLimitFlags(dataSource, query, setQuery);\n\n  const [handleQueryEditorChange] = useDebouncedCallback(queryText => {\n    setQuery(extend(query.clone(), { query: queryText }));\n  }, 100);\n\n  useEffect(() => {\n    // TODO: ignore new pages?\n    recordEvent(\"view_source\", \"query\", query.id);\n  }, [query.id]);\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  const updateQuery = useUpdateQuery(query, setQuery);\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const querySyntax = dataSource ? dataSource.syntax || \"sql\" : null;\n  const isFormatQueryAvailable = queryFormat.isFormatQueryAvailable(querySyntax);\n  const formatQuery = () => {\n    try {\n      const formattedQueryText = queryFormat.formatQuery(query.query, querySyntax);\n      setQuery(extend(query.clone(), { query: formattedQueryText }));\n    } catch (err) {\n      notification.error(String(err));\n    }\n  };\n\n  const handleDataSourceChange = useCallback(\n    dataSourceId => {\n      if (dataSourceId) {\n        try {\n          localStorage.setItem(\"lastSelectedDataSourceId\", dataSourceId);\n        } catch (e) {\n          // `localStorage.setItem` may throw exception if there are no enough space - in this case it could be ignored\n        }\n      }\n      if (query.data_source_id !== dataSourceId) {\n        recordEvent(\"update_data_source\", \"query\", query.id, { dataSourceId });\n        const updates = {\n          data_source_id: dataSourceId,\n          latest_query_data_id: null,\n          latest_query_data: null,\n        };\n        setQuery(extend(query.clone(), updates));\n        updateQuery(updates, { successMessage: null }); // show message only on error\n      }\n    },\n    [query, setQuery, updateQuery]\n  );\n\n  useEffect(() => {\n    // choose data source id for new queries\n    if (dataSourcesLoaded && queryFlags.isNew) {\n      const firstDataSourceId = dataSources.length > 0 ? dataSources[0].id : null;\n      const selectedDataSourceId = parseInt(localStorage.getItem(\"lastSelectedDataSourceId\")) || null;\n\n      handleDataSourceChange(\n        chooseDataSourceId([query.data_source_id, selectedDataSourceId, firstDataSourceId], dataSources)\n      );\n    }\n  }, [query.data_source_id, queryFlags.isNew, dataSourcesLoaded, dataSources, handleDataSourceChange]);\n\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const openAddNewParameterDialog = useAddNewParameterDialog(query, (newQuery, param) => {\n    if (editorRef.current) {\n      editorRef.current.paste(param.toQueryTextFragment());\n      editorRef.current.focus();\n    }\n    setQuery(newQuery);\n  });\n\n  const handleSchemaItemSelect = useCallback(schemaItem => {\n    if (editorRef.current) {\n      editorRef.current.paste(schemaItem);\n    }\n  }, []);\n\n  const [selectedText, setSelectedText] = useState(null);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isQueryExecuting))) {\n        return;\n      }\n      if (isDirty || !isEmpty(selectedText)) {\n        executeQuery(null, () => {\n          return query.getQueryResultByText(0, selectedText);\n        });\n      } else {\n        executeQuery();\n      }\n    },\n    [query, queryFlags.canExecute, areParametersDirty, isQueryExecuting, isDirty, selectedText, executeQuery]\n  );\n\n  const [isQuerySaving, setIsQuerySaving] = useState(false);\n\n  const doSaveQuery = useCallback(() => {\n    if (!isQuerySaving) {\n      setIsQuerySaving(true);\n      saveQuery().finally(() => setIsQuerySaving(false));\n    }\n  }, [isQuerySaving, saveQuery]);\n\n  const addVisualization = useAddVisualizationDialog(query, queryResult, doSaveQuery, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  return (\n    <div className={cx(\"query-page-wrapper\", { \"query-fixed-layout\": !isMobile })}>\n      <QuerySourceAlerts query={query} dataSourcesAvailable={!dataSourcesLoaded || dataSources.length > 0} />\n      <div className=\"container w-100 p-b-10\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          sourceMode\n          selectedVisualization={selectedVisualization}\n          headerExtra={<DynamicComponent name=\"QuerySource.HeaderExtra\" query={query} />}\n          onChange={setQuery}\n        />\n      </div>\n      <main className=\"query-fullscreen\">\n        <Resizable direction=\"horizontal\" sizeAttribute=\"flex-basis\" toggleShortcut=\"Alt+Shift+D, Alt+D\">\n          <nav>\n            {dataSourcesLoaded && (\n              <div className=\"editor__left__data-source\">\n                <DynamicComponent\n                  name={\"QuerySourceDropdown\"}\n                  dataSources={dataSources}\n                  value={dataSource ? dataSource.id : undefined}\n                  disabled={!queryFlags.canEdit || !dataSourcesLoaded || dataSources.length === 0}\n                  loading={!dataSourcesLoaded}\n                  onChange={handleDataSourceChange}\n                />\n              </div>\n            )}\n            <div className=\"editor__left__schema\">\n              <SchemaBrowser\n                dataSource={dataSource}\n                options={query.options.schemaOptions}\n                onOptionsUpdate={schemaOptions =>\n                  setQuery(extend(query.clone(), { options: { ...query.options, schemaOptions } }))\n                }\n                onSchemaUpdate={setSchema}\n                onItemSelect={handleSchemaItemSelect}\n              />\n            </div>\n\n            {!query.isNew() && (\n              <div className=\"query-page-query-description\">\n                <EditInPlace\n                  isEditable={queryFlags.canEdit}\n                  markdown\n                  ignoreBlanks={false}\n                  placeholder=\"Add description\"\n                  value={query.description}\n                  onDone={updateQueryDescription}\n                  multiline\n                />\n              </div>\n            )}\n\n            {!query.isNew() && <QueryMetadata layout=\"table\" query={query} onEditSchedule={editSchedule} />}\n          </nav>\n        </Resizable>\n\n        <div className=\"content\">\n          <div className=\"flex-fill p-relative\">\n            <div\n              className=\"p-absolute d-flex flex-column p-l-15 p-r-15\"\n              style={{ left: 0, top: 0, right: 0, bottom: 0, overflow: \"auto\" }}>\n              <Resizable direction=\"vertical\" sizeAttribute=\"flex-basis\">\n                <div className=\"row editor\">\n                  <section className=\"query-editor-wrapper\" data-test=\"QueryEditor\">\n                    <QueryEditor\n                      ref={editorRef}\n                      data-executing={isQueryExecuting ? \"true\" : null}\n                      syntax={dataSource ? dataSource.syntax : null}\n                      value={query.query}\n                      schema={schema}\n                      autocompleteEnabled={autocompleteAvailable && autocompleteEnabled}\n                      onChange={handleQueryEditorChange}\n                      onSelectionChange={setSelectedText}\n                    />\n\n                    <QueryEditor.Controls\n                      addParameterButtonProps={{\n                        title: \"Add New Parameter\",\n                        shortcut: \"mod+p\",\n                        onClick: openAddNewParameterDialog,\n                      }}\n                      formatButtonProps={{\n                        title: isFormatQueryAvailable\n                          ? \"Format Query\"\n                          : \"Query formatting is not supported for your Data Source syntax\",\n                        disabled: !dataSource || !isFormatQueryAvailable,\n                        shortcut: isFormatQueryAvailable ? \"mod+shift+f\" : null,\n                        onClick: formatQuery,\n                      }}\n                      saveButtonProps={\n                        queryFlags.canEdit && {\n                          text: (\n                            <React.Fragment>\n                              <span className=\"hidden-xs\">Save</span>\n                              {isDirty && !isQuerySaving ? \"*\" : null}\n                            </React.Fragment>\n                          ),\n                          shortcut: \"mod+s\",\n                          onClick: doSaveQuery,\n                          loading: isQuerySaving,\n                        }\n                      }\n                      executeButtonProps={{\n                        disabled: !queryFlags.canExecute || isQueryExecuting || areParametersDirty,\n                        shortcut: \"mod+enter, alt+enter, ctrl+enter, shift+enter\",\n                        onClick: doExecuteQuery,\n                        text: (\n                          <span className=\"hidden-xs\">{selectedText === null ? \"Execute\" : \"Execute Selected\"}</span>\n                        ),\n                      }}\n                      autocompleteToggleProps={{\n                        available: autocompleteAvailable,\n                        enabled: autocompleteEnabled,\n                        onToggle: toggleAutocomplete,\n                      }}\n                      autoLimitCheckboxProps={{\n                        available: autoLimitAvailable,\n                        checked: autoLimitChecked,\n                        onChange: setAutoLimit,\n                      }}\n                      dataSourceSelectorProps={\n                        dataSource\n                          ? {\n                              disabled: !queryFlags.canEdit,\n                              value: dataSource.id,\n                              onChange: handleDataSourceChange,\n                              options: map(dataSources, ds => ({ value: ds.id, label: ds.name })),\n                            }\n                          : false\n                      }\n                    />\n                  </section>\n                </div>\n              </Resizable>\n\n              {!queryFlags.isNew && <QueryMetadata layout=\"horizontal\" query={query} onEditSchedule={editSchedule} />}\n\n              <section className=\"query-results-wrapper\">\n                {query.hasParameters() && (\n                  <div className=\"query-parameters-wrapper\">\n                    <Parameters\n                      editable={queryFlags.canEdit}\n                      sortable={queryFlags.canEdit}\n                      disableUrlUpdate={queryFlags.isNew}\n                      parameters={parameters}\n                      onPendingValuesChange={() => updateParametersDirtyFlag()}\n                      onValuesChange={() => {\n                        updateParametersDirtyFlag(false);\n                        doExecuteQuery(true);\n                      }}\n                      onParametersEdit={() => {\n                        // save if query clean\n                        // https://discuss.redash.io/t/query-unsaved-changes-indication/3302/5\n                        if (!isDirty) {\n                          saveQuery();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n                {(executionError || isQueryExecuting) && (\n                  <div className=\"query-alerts\">\n                    <QueryExecutionStatus\n                      status={executionStatus}\n                      updatedAt={updatedAt}\n                      error={executionError}\n                      isCancelling={isExecutionCancelling}\n                      onCancel={cancelExecution}\n                    />\n                  </div>\n                )}\n\n                <React.Fragment>\n                  {queryResultData.log.length > 0 && (\n                    <div className=\"query-results-log\">\n                      <p>Log Information:</p>\n                      {map(queryResultData.log, (line, index) => (\n                        <p key={`log-line-${index}`} className=\"query-log-line\">\n                          {line}\n                        </p>\n                      ))}\n                    </div>\n                  )}\n                  {loadedInitialResults && !(queryFlags.isNew && !queryResult) && (\n                    <QueryVisualizationTabs\n                      queryResult={queryResult}\n                      visualizations={query.visualizations}\n                      showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n                      canDeleteVisualizations={queryFlags.canEdit}\n                      selectedTab={selectedVisualization}\n                      onChangeTab={setSelectedVisualization}\n                      onAddVisualization={addVisualization}\n                      onDeleteVisualization={deleteVisualization}\n                      refreshButton={\n                        <Button\n                          type=\"primary\"\n                          disabled={!queryFlags.canExecute || areParametersDirty}\n                          loading={isQueryExecuting}\n                          onClick={doExecuteQuery}>\n                          {!isQueryExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                          Refresh Now\n                        </Button>\n                      }\n                    />\n                  )}\n                </React.Fragment>\n              </section>\n            </div>\n          </div>\n          {queryResult && !queryResult.getError() && (\n            <div className=\"bottom-controller-container\">\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isQueryExecuting}\n                showEditVisualizationButton={!queryFlags.isNew && queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nQuerySource.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst QuerySourcePage = wrapQueryPage(QuerySource);\n\nroutes.register(\n  \"Queries.New\",\n  routeWithUserSession({\n    path: \"/queries/new\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\nroutes.register(\n  \"Queries.Edit\",\n  routeWithUserSession({\n    path: \"/queries/:queryId/source\",\n    render: pageProps => <QuerySourcePage {...pageProps} />,\n    bodyClass: \"fixed-layout\",\n  })\n);\n","import { isEmpty } from \"lodash\";\nimport { useState, useMemo } from \"react\";\nimport useUpdateQuery from \"./useUpdateQuery\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\n\nexport default function useQuery(originalQuery) {\n  const [query, setQuery] = useState(originalQuery);\n  const [originalQuerySource, setOriginalQuerySource] = useState(originalQuery.query);\n  const [originalAutoLimit, setOriginalAutoLimit] = useState(query.options.apply_auto_limit);\n\n  const updateQuery = useUpdateQuery(query, updatedQuery => {\n    // It's important to update URL first, and only then update state\n    if (updatedQuery.id !== query.id) {\n      // Don't reload page when saving new query\n      navigateTo(updatedQuery.getUrl(true), true);\n    }\n    setQuery(updatedQuery);\n    setOriginalQuerySource(updatedQuery.query);\n    setOriginalAutoLimit(updatedQuery.options.apply_auto_limit);\n  });\n\n  return useMemo(\n    () => ({\n      query,\n      setQuery,\n      isDirty:\n        query.query !== originalQuerySource ||\n        (!isEmpty(query.query) && query.options.apply_auto_limit !== originalAutoLimit),\n      saveQuery: () => updateQuery(),\n    }),\n    [query, originalQuerySource, updateQuery, originalAutoLimit]\n  );\n}\n","import { filter, find, toString } from \"lodash\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport DataSource from \"@/services/data-source\";\n\nexport default function useQueryDataSources(query) {\n  const [allDataSources, setAllDataSources] = useState([]);\n  const [dataSourcesLoaded, setDataSourcesLoaded] = useState(false);\n  const dataSources = useMemo(() => filter(allDataSources, ds => !ds.view_only || ds.id === query.data_source_id), [\n    allDataSources,\n    query.data_source_id,\n  ]);\n  const dataSource = useMemo(\n    () => find(dataSources, ds => toString(ds.id) === toString(query.data_source_id)) || null,\n    [query.data_source_id, dataSources]\n  );\n\n  useEffect(() => {\n    let cancelDataSourceLoading = false;\n    DataSource.query().then(data => {\n      if (!cancelDataSourceLoading) {\n        setDataSourcesLoaded(true);\n        setAllDataSources(data);\n      }\n    });\n\n    return () => {\n      cancelDataSourceLoading = true;\n    };\n  }, []);\n\n  return useMemo(() => ({ dataSourcesLoaded, dataSources, dataSource }), [dataSourcesLoaded, dataSources, dataSource]);\n}\n","import { useRef, useEffect } from \"react\";\nimport location from \"@/services/location\";\n\nexport default function useUnsavedChangesAlert(shouldShowAlert = false) {\n  const shouldShowAlertRef = useRef();\n  shouldShowAlertRef.current = shouldShowAlert;\n\n  useEffect(() => {\n    const unloadMessage = \"You will lose your changes if you leave\";\n    const confirmMessage = `${unloadMessage}\\n\\nAre you sure you want to leave this page?`;\n    // store original handler (if any)\n    const savedOnBeforeUnload = window.onbeforeunload;\n\n    window.onbeforeunload = function onbeforeunload() {\n      return shouldShowAlertRef.current ? unloadMessage : undefined;\n    };\n\n    const unsubscribe = location.confirmChange((nextLocation, currentLocation) => {\n      if (shouldShowAlertRef.current && nextLocation.path !== currentLocation.path) {\n        return confirmMessage;\n      }\n    });\n\n    return () => {\n      window.onbeforeunload = savedOnBeforeUnload;\n      unsubscribe();\n    };\n  }, []);\n}\n","import { map } from \"lodash\";\nimport { useCallback } from \"react\";\nimport EditParameterSettingsDialog from \"@/components/EditParameterSettingsDialog\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function useAddNewParameterDialog(query, onParameterAdded) {\n  const handleParameterAdded = useImmutableCallback(onParameterAdded);\n\n  return useCallback(() => {\n    EditParameterSettingsDialog.showModal({\n      parameter: {\n        title: null,\n        name: \"\",\n        type: \"text\",\n        value: null,\n      },\n      existingParams: map(query.getParameters().get(), p => p.name),\n    }).onClose(param => {\n      const newQuery = query.clone();\n      param = newQuery.getParameters().add(param);\n      handleParameterAdded(newQuery, param);\n    });\n  }, [query, handleParameterAdded]);\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport useQueryFlags from \"./useQueryFlags\";\nimport useEditVisualizationDialog from \"./useEditVisualizationDialog\";\n\nexport default function useAddVisualizationDialog(query, queryResult, saveQuery, onChange) {\n  const queryFlags = useQueryFlags(query);\n  const editVisualization = useEditVisualizationDialog(query, queryResult, onChange);\n  const [shouldOpenDialog, setShouldOpenDialog] = useState(false);\n\n  useEffect(() => {\n    if (!queryFlags.isNew && shouldOpenDialog) {\n      setShouldOpenDialog(false);\n      editVisualization();\n    }\n  }, [queryFlags.isNew, shouldOpenDialog, editVisualization]);\n\n  return useCallback(() => {\n    if (queryFlags.isNew) {\n      setShouldOpenDialog(true);\n      saveQuery();\n    } else {\n      editVisualization();\n    }\n  }, [queryFlags.isNew, saveQuery, editVisualization]);\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport KeyboardShortcuts from \"@/services/KeyboardShortcuts\";\nimport { ButtonTooltip } from \"@/components/queries/QueryEditor/QueryEditorControls\";\n\nexport default function QueryViewButton({ title, shortcut, disabled, children, onClick, ...props }) {\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const eventHandlers = useMemo(\n    () => ({\n      onMouseEnter: () => setTooltipVisible(true),\n      onMouseLeave: () => setTooltipVisible(false),\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (disabled) {\n      setTooltipVisible(false);\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (shortcut) {\n      const shortcuts = {\n        [shortcut]: onClick,\n      };\n\n      KeyboardShortcuts.bind(shortcuts);\n      return () => {\n        KeyboardShortcuts.unbind(shortcuts);\n      };\n    }\n  }, [shortcut, onClick]);\n\n  return (\n    <ButtonTooltip title={title} shortcut={shortcut} visible={tooltipVisible}>\n      <span {...eventHandlers}>\n        <Button\n          data-test=\"ExecuteButton\"\n          disabled={disabled}\n          onClick={onClick}\n          style={disabled ? { pointerEvents: \"none\" } : {}}\n          {...props}>\n          {children}\n        </Button>\n      </span>\n    </ButtonTooltip>\n  );\n}\n\nQueryViewButton.propTypes = {\n  className: PropTypes.string,\n  shortcut: PropTypes.string,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nQueryViewButton.defaultProps = {\n  className: null,\n  shortcut: null,\n  disabled: false,\n  children: null,\n  onClick: () => {},\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport useMedia from \"use-media\";\nimport Button from \"antd/lib/button\";\n\nimport FullscreenOutlinedIcon from \"@ant-design/icons/FullscreenOutlined\";\nimport FullscreenExitOutlinedIcon from \"@ant-design/icons/FullscreenExitOutlined\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EditInPlace from \"@/components/EditInPlace\";\nimport Parameters from \"@/components/Parameters\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport DataSource from \"@/services/data-source\";\nimport { ExecutionStatus } from \"@/services/query-result\";\nimport routes from \"@/services/routes\";\nimport { policy } from \"@/services/policy\";\n\nimport useQueryResultData from \"@/lib/useQueryResultData\";\n\nimport QueryPageHeader from \"./components/QueryPageHeader\";\nimport QueryVisualizationTabs from \"./components/QueryVisualizationTabs\";\nimport QueryExecutionStatus from \"./components/QueryExecutionStatus\";\nimport QueryMetadata from \"./components/QueryMetadata\";\nimport wrapQueryPage from \"./components/wrapQueryPage\";\nimport QueryViewButton from \"./components/QueryViewButton\";\nimport QueryExecutionMetadata from \"./components/QueryExecutionMetadata\";\n\nimport useVisualizationTabHandler from \"./hooks/useVisualizationTabHandler\";\nimport useQueryExecute from \"./hooks/useQueryExecute\";\nimport useUpdateQueryDescription from \"./hooks/useUpdateQueryDescription\";\nimport useQueryFlags from \"./hooks/useQueryFlags\";\nimport useQueryParameters from \"./hooks/useQueryParameters\";\nimport useEditScheduleDialog from \"./hooks/useEditScheduleDialog\";\nimport useEditVisualizationDialog from \"./hooks/useEditVisualizationDialog\";\nimport useDeleteVisualization from \"./hooks/useDeleteVisualization\";\nimport useFullscreenHandler from \"../../lib/hooks/useFullscreenHandler\";\n\nimport \"./QueryView.less\";\n\nfunction QueryView(props) {\n  const [query, setQuery] = useState(props.query);\n  const [dataSource, setDataSource] = useState();\n  const queryFlags = useQueryFlags(query, dataSource);\n  const [parameters, areParametersDirty, updateParametersDirtyFlag] = useQueryParameters(query);\n  const [selectedVisualization, setSelectedVisualization] = useVisualizationTabHandler(query.visualizations);\n  const isDesktop = useMedia({ minWidth: 768 });\n  const isFixedLayout = useMedia({ minHeight: 500 }) && isDesktop;\n  const [fullscreen, toggleFullscreen] = useFullscreenHandler(isDesktop);\n  const [addingDescription, setAddingDescription] = useState(false);\n\n  const {\n    queryResult,\n    loadedInitialResults,\n    isExecuting,\n    executionStatus,\n    executeQuery,\n    error: executionError,\n    cancelCallback: cancelExecution,\n    isCancelling: isExecutionCancelling,\n    updatedAt,\n  } = useQueryExecute(query);\n\n  const queryResultData = useQueryResultData(queryResult);\n\n  const updateQueryDescription = useUpdateQueryDescription(query, setQuery);\n  const editSchedule = useEditScheduleDialog(query, setQuery);\n  const addVisualization = useEditVisualizationDialog(query, queryResult, (newQuery, visualization) => {\n    setQuery(newQuery);\n    setSelectedVisualization(visualization.id);\n  });\n  const editVisualization = useEditVisualizationDialog(query, queryResult, newQuery => setQuery(newQuery));\n  const deleteVisualization = useDeleteVisualization(query, setQuery);\n\n  const doExecuteQuery = useCallback(\n    (skipParametersDirtyFlag = false) => {\n      if (!queryFlags.canExecute || (!skipParametersDirtyFlag && (areParametersDirty || isExecuting))) {\n        return;\n      }\n      executeQuery();\n    },\n    [areParametersDirty, executeQuery, isExecuting, queryFlags.canExecute]\n  );\n\n  useEffect(() => {\n    document.title = query.name;\n  }, [query.name]);\n\n  useEffect(() => {\n    DataSource.get({ id: query.data_source_id }).then(setDataSource);\n  }, [query.data_source_id]);\n\n  return (\n    <div\n      className={cx(\"query-page-wrapper\", {\n        \"query-view-fullscreen\": fullscreen,\n        \"query-fixed-layout\": isFixedLayout,\n      })}>\n      <div className=\"container w-100\">\n        <QueryPageHeader\n          query={query}\n          dataSource={dataSource}\n          onChange={setQuery}\n          selectedVisualization={selectedVisualization}\n          headerExtra={\n            <DynamicComponent name=\"QueryView.HeaderExtra\" query={query}>\n              {policy.canRun(query) && (\n                <QueryViewButton\n                  className=\"m-r-5\"\n                  type=\"primary\"\n                  shortcut=\"mod+enter, alt+enter, ctrl+enter\"\n                  disabled={!queryFlags.canExecute || isExecuting || areParametersDirty}\n                  onClick={doExecuteQuery}>\n                  Refresh\n                </QueryViewButton>\n              )}\n            </DynamicComponent>\n          }\n          tagsExtra={\n            !query.description &&\n            queryFlags.canEdit &&\n            !addingDescription &&\n            !fullscreen && (\n              <PlainButton className=\"label label-tag hidden-xs\" role=\"none\" onClick={() => setAddingDescription(true)}>\n                <i className=\"zmdi zmdi-plus m-r-5\" aria-hidden=\"true\" />\n                Add description\n              </PlainButton>\n            )\n          }\n        />\n        {(query.description || addingDescription) && (\n          <div className={cx(\"m-t-5\", { hidden: fullscreen })}>\n            <EditInPlace\n              className=\"w-100\"\n              value={query.description}\n              isEditable={queryFlags.canEdit}\n              onDone={updateQueryDescription}\n              onStopEditing={() => setAddingDescription(false)}\n              placeholder=\"Add description\"\n              ignoreBlanks={false}\n              editorProps={{ autoSize: { minRows: 2, maxRows: 4 } }}\n              defaultEditing={addingDescription}\n              multiline\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"query-view-content\">\n        {query.hasParameters() && (\n          <div className={cx(\"bg-white tiled p-15 m-t-15 m-l-15 m-r-15\", { hidden: fullscreen })}>\n            <Parameters\n              parameters={parameters}\n              onValuesChange={() => {\n                updateParametersDirtyFlag(false);\n                doExecuteQuery(true);\n              }}\n              onPendingValuesChange={() => updateParametersDirtyFlag()}\n            />\n          </div>\n        )}\n        <div className=\"query-results m-t-15\">\n          {loadedInitialResults && (\n            <QueryVisualizationTabs\n              queryResult={queryResult}\n              visualizations={query.visualizations}\n              showNewVisualizationButton={queryFlags.canEdit && queryResultData.status === ExecutionStatus.DONE}\n              canDeleteVisualizations={queryFlags.canEdit}\n              selectedTab={selectedVisualization}\n              onChangeTab={setSelectedVisualization}\n              onAddVisualization={addVisualization}\n              onDeleteVisualization={deleteVisualization}\n              refreshButton={\n                policy.canRun(query) && (\n                  <Button\n                    type=\"primary\"\n                    disabled={!queryFlags.canExecute || areParametersDirty}\n                    loading={isExecuting}\n                    onClick={doExecuteQuery}>\n                    {!isExecuting && <i className=\"zmdi zmdi-refresh m-r-5\" aria-hidden=\"true\" />}\n                    Refresh Now\n                  </Button>\n                )\n              }\n              canRefresh={policy.canRun(query)}\n            />\n          )}\n          <div className=\"query-results-footer\">\n            {queryResult && !queryResult.getError() && (\n              <QueryExecutionMetadata\n                query={query}\n                queryResult={queryResult}\n                selectedVisualization={selectedVisualization}\n                isQueryExecuting={isExecuting}\n                showEditVisualizationButton={queryFlags.canEdit}\n                onEditVisualization={editVisualization}\n                extraActions={\n                  <QueryViewButton\n                    className=\"icon-button m-r-5 hidden-xs\"\n                    title=\"Toggle Fullscreen\"\n                    type=\"default\"\n                    shortcut=\"alt+f\"\n                    onClick={toggleFullscreen}>\n                    {fullscreen ? <FullscreenExitOutlinedIcon /> : <FullscreenOutlinedIcon />}\n                  </QueryViewButton>\n                }\n              />\n            )}\n            {(executionError || isExecuting) && (\n              <div className=\"query-execution-status\">\n                <QueryExecutionStatus\n                  status={executionStatus}\n                  error={executionError}\n                  isCancelling={isExecutionCancelling}\n                  onCancel={cancelExecution}\n                  updatedAt={updatedAt}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className={cx(\"p-t-15 p-r-15 p-l-15\", { hidden: fullscreen })}>\n          <QueryMetadata layout=\"horizontal\" query={query} dataSource={dataSource} onEditSchedule={editSchedule} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nQueryView.propTypes = { query: PropTypes.object.isRequired }; // eslint-disable-line react/forbid-prop-types\n\nconst QueryViewPage = wrapQueryPage(QueryView);\n\nroutes.register(\n  \"Queries.View\",\n  routeWithUserSession({\n    path: \"/queries/:queryId\",\n    render: pageProps => <QueryViewPage {...pageProps} />,\n  })\n);\n","import { find, has } from \"lodash\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { markdown } from \"markdown\";\n\nimport Button from \"antd/lib/button\";\nimport Dropdown from \"antd/lib/dropdown\";\nimport Menu from \"antd/lib/menu\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Link from \"@/components/Link\";\nimport routeWithApiKeySession from \"@/components/ApplicationArea/routeWithApiKeySession\";\nimport Parameters from \"@/components/Parameters\";\nimport { Moment } from \"@/components/proptypes\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport Timer from \"@/components/Timer\";\nimport QueryResultsLink from \"@/components/EditVisualizationButton/QueryResultsLink\";\nimport VisualizationName from \"@/components/visualizations/VisualizationName\";\nimport VisualizationRenderer from \"@/components/visualizations/VisualizationRenderer\";\n\nimport FileOutlinedIcon from \"@ant-design/icons/FileOutlined\";\nimport FileExcelOutlinedIcon from \"@ant-design/icons/FileExcelOutlined\";\n\nimport { VisualizationType } from \"@redash/viz/lib\";\nimport HtmlContent from \"@redash/viz/lib/components/HtmlContent\";\n\nimport { formatDateTime } from \"@/lib/utils\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { Query } from \"@/services/query\";\nimport location from \"@/services/location\";\nimport routes from \"@/services/routes\";\n\nimport logoUrl from \"@/assets/images/redash_icon_small.png\";\n\nfunction VisualizationEmbedHeader({ queryName, queryDescription, visualization }) {\n  return (\n    <div className=\"embed-heading p-b-10 p-r-15 p-l-15\">\n      <h3>\n        <img src={logoUrl} alt=\"Redash Logo\" style={{ height: \"24px\", verticalAlign: \"text-bottom\" }} />\n        <VisualizationName visualization={visualization} /> {queryName}\n        {queryDescription && (\n          <small>\n            <HtmlContent className=\"markdown text-muted\">{markdown.toHTML(queryDescription || \"\")}</HtmlContent>\n          </small>\n        )}\n      </h3>\n    </div>\n  );\n}\n\nVisualizationEmbedHeader.propTypes = {\n  queryName: PropTypes.string.isRequired,\n  queryDescription: PropTypes.string,\n  visualization: VisualizationType.isRequired,\n};\n\nVisualizationEmbedHeader.defaultProps = { queryDescription: \"\" };\n\nfunction VisualizationEmbedFooter({\n  query,\n  queryResults,\n  updatedAt,\n  refreshStartedAt,\n  queryUrl,\n  hideTimestamp,\n  apiKey,\n}) {\n  const downloadMenu = (\n    <Menu>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"csv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as CSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"tsv\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileOutlinedIcon /> Download as TSV File\n        </QueryResultsLink>\n      </Menu.Item>\n      <Menu.Item>\n        <QueryResultsLink\n          fileType=\"xlsx\"\n          query={query}\n          queryResult={queryResults}\n          apiKey={apiKey}\n          disabled={!queryResults || !queryResults.getData || !queryResults.getData()}\n          embed>\n          <FileExcelOutlinedIcon /> Download as Excel File\n        </QueryResultsLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"tile__bottom-control\">\n      {!hideTimestamp && (\n        <span>\n          <span className=\"small hidden-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" />{\" \"}\n            {refreshStartedAt ? <Timer from={refreshStartedAt} /> : <TimeAgo date={updatedAt} />}\n          </span>\n          <span className=\"small visible-print\">\n            <i className=\"zmdi zmdi-time-restore\" aria-hidden=\"true\" /> {formatDateTime(updatedAt)}\n          </span>\n        </span>\n      )}\n      {queryUrl && (\n        <span className=\"hidden-print\">\n          <Tooltip title=\"Open in Redash\">\n            <Link.Button className=\"icon-button\" href={queryUrl} target=\"_blank\">\n              <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Open in Redash</span>\n            </Link.Button>\n          </Tooltip>\n          {!query.hasParameters() && (\n            <Dropdown overlay={downloadMenu} disabled={!queryResults} trigger={[\"click\"]} placement=\"topLeft\">\n              <Button loading={!queryResults && !!refreshStartedAt} className=\"m-l-5\">\n                Download Dataset\n                <i className=\"fa fa-caret-up m-l-5\" aria-hidden=\"true\" />\n              </Button>\n            </Dropdown>\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nVisualizationEmbedFooter.propTypes = {\n  query: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  queryResults: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  updatedAt: PropTypes.string,\n  refreshStartedAt: Moment,\n  queryUrl: PropTypes.string,\n  hideTimestamp: PropTypes.bool,\n  apiKey: PropTypes.string,\n};\n\nVisualizationEmbedFooter.defaultProps = {\n  queryResults: null,\n  updatedAt: null,\n  refreshStartedAt: null,\n  queryUrl: null,\n  hideTimestamp: false,\n  apiKey: null,\n};\n\nfunction VisualizationEmbed({ queryId, visualizationId, apiKey, onError }) {\n  const [query, setQuery] = useState(null);\n  const [error, setError] = useState(null);\n  const [refreshStartedAt, setRefreshStartedAt] = useState(null);\n  const [queryResults, setQueryResults] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    Query.get({ id: queryId })\n      .then(result => {\n        if (!isCancelled) {\n          setQuery(result);\n        }\n      })\n      .catch(handleError);\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [queryId, handleError]);\n\n  const refreshQueryResults = useCallback(() => {\n    if (query) {\n      setError(null);\n      setRefreshStartedAt(moment());\n      query\n        .getQueryResultPromise()\n        .then(result => {\n          setQueryResults(result);\n        })\n        .catch(err => {\n          setError(err.getError());\n        })\n        .finally(() => setRefreshStartedAt(null));\n    }\n  }, [query]);\n\n  useEffect(() => {\n    document.querySelector(\"body\").classList.add(\"headless\");\n    refreshQueryResults();\n  }, [refreshQueryResults]);\n\n  if (!query) {\n    return null;\n  }\n\n  const hideHeader = has(location.search, \"hide_header\");\n  const hideParametersUI = has(location.search, \"hide_parameters\");\n  const hideQueryLink = has(location.search, \"hide_link\");\n  const hideTimestamp = has(location.search, \"hide_timestamp\");\n\n  const showQueryDescription = has(location.search, \"showDescription\");\n  visualizationId = parseInt(visualizationId, 10);\n  const visualization = find(query.visualizations, vis => vis.id === visualizationId);\n\n  if (!visualization) {\n    // call error handler async, otherwise it will destroy the component on render phase\n    setTimeout(() => {\n      onError(new Error(\"Visualization does not exist\"));\n    }, 10);\n    return null;\n  }\n\n  return (\n    <div className=\"tile m-t-10 m-l-10 m-r-10 p-t-10 embed__vis\" data-test=\"VisualizationEmbed\">\n      {!hideHeader && (\n        <VisualizationEmbedHeader\n          queryName={query.name}\n          queryDescription={showQueryDescription ? query.description : null}\n          visualization={visualization}\n        />\n      )}\n      <div className=\"col-md-12 query__vis\">\n        {!hideParametersUI && query.hasParameters() && (\n          <div className=\"p-t-15 p-b-10\">\n            <Parameters parameters={query.getParametersDefs()} onValuesChange={refreshQueryResults} />\n          </div>\n        )}\n        {error && <div className=\"alert alert-danger\" data-test=\"ErrorMessage\">{`Error: ${error}`}</div>}\n        {!error && queryResults && (\n          <VisualizationRenderer visualization={visualization} queryResult={queryResults} context=\"widget\" />\n        )}\n        {!queryResults && refreshStartedAt && (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner\">\n              <i className=\"zmdi zmdi-refresh zmdi-hc-spin zmdi-hc-5x\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Refreshing...</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <VisualizationEmbedFooter\n        query={query}\n        queryResults={queryResults}\n        updatedAt={queryResults ? queryResults.getUpdatedAt() : undefined}\n        refreshStartedAt={refreshStartedAt}\n        queryUrl={!hideQueryLink ? query.getUrl() : null}\n        hideTimestamp={hideTimestamp}\n        apiKey={apiKey}\n      />\n    </div>\n  );\n}\n\nVisualizationEmbed.propTypes = {\n  queryId: PropTypes.string.isRequired,\n  visualizationId: PropTypes.string,\n  apiKey: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n};\n\nVisualizationEmbed.defaultProps = {\n  onError: () => {},\n};\n\nroutes.register(\n  \"Visualizations.ViewShared\",\n  routeWithApiKeySession({\n    path: \"/embed/query/:queryId/visualization/:visualizationId\",\n    render: pageProps => <VisualizationEmbed {...pageProps} />,\n    getApiKey: () => location.search.api_key,\n  })\n);\n","import { isNil, get } from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nfunction QuerySnippetDialog({ querySnippet, dialog, readOnly }) {\n  const handleSubmit = useCallback(\n    (values, successCallback, errorCallback) => {\n      const querySnippetId = get(querySnippet, \"id\");\n\n      if (isNil(values.description)) {\n        values.description = \"\";\n      }\n\n      dialog\n        .close(querySnippetId ? { id: querySnippetId, ...values } : values)\n        .then(() => successCallback(\"Saved.\"))\n        .catch(() => errorCallback(\"Failed saving snippet.\"));\n    },\n    [dialog, querySnippet]\n  );\n\n  const isEditing = !!get(querySnippet, \"id\");\n\n  const formFields = [\n    { name: \"trigger\", title: \"Trigger\", type: \"text\", required: true, autoFocus: !isEditing },\n    { name: \"description\", title: \"Description\", type: \"text\" },\n    { name: \"snippet\", title: \"Snippet\", type: \"ace\", required: true },\n  ].map(field => ({ ...field, readOnly, initialValue: get(querySnippet, field.name, \"\") }));\n\n  const querySnippetsFormId = useUniqueId(\"querySnippetForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title={isEditing ? querySnippet.trigger : \"Create Query Snippet\"}\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          {readOnly ? \"Close\" : \"Cancel\"}\n        </Button>,\n        !readOnly && (\n          <Button\n            key=\"submit\"\n            {...dialog.props.okButtonProps}\n            disabled={readOnly || dialog.props.okButtonProps.disabled}\n            htmlType=\"submit\"\n            type=\"primary\"\n            form={querySnippetsFormId}\n            data-test=\"SaveQuerySnippetButton\">\n            {isEditing ? \"Save\" : \"Create\"}\n          </Button>\n        ),\n      ]}\n      wrapProps={{\n        \"data-test\": \"QuerySnippetDialog\",\n      }}>\n      <DynamicForm\n        id={querySnippetsFormId}\n        fields={formFields}\n        onSubmit={handleSubmit}\n        hideSubmitButton\n        feedbackIcons\n      />\n    </Modal>\n  );\n}\n\nQuerySnippetDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n  querySnippet: PropTypes.object,\n  readOnly: PropTypes.bool,\n};\n\nQuerySnippetDialog.defaultProps = {\n  querySnippet: null,\n  readOnly: false,\n};\n\nexport default wrapDialog(QuerySnippetDialog);\n","import { get } from \"lodash\";\nimport React from \"react\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport Paginator from \"@/components/Paginator\";\nimport QuerySnippetDialog from \"@/components/query-snippets/QuerySnippetDialog\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { StateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\nimport PlainButton from \"@/components/PlainButton\";\n\nimport QuerySnippet from \"@/services/query-snippet\";\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport notification from \"@/services/notification\";\nimport routes from \"@/services/routes\";\n\nimport \"./QuerySnippetsList.less\";\n\nconst canEditQuerySnippet = querySnippet => currentUser.isAdmin || currentUser.id === get(querySnippet, \"user.id\");\n\nclass QuerySnippetsList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  listColumns = [\n    Columns.custom.sortable(\n      (text, querySnippet) => (\n        <PlainButton type=\"link\" className=\"table-main-title\" onClick={() => this.showSnippetDialog(querySnippet)}>\n          {querySnippet.trigger}\n        </PlainButton>\n      ),\n      {\n        title: \"Trigger\",\n        field: \"trigger\",\n        className: \"text-nowrap\",\n      }\n    ),\n    Columns.custom.sortable(text => text, {\n      title: \"Description\",\n      field: \"description\",\n      className: \"text-nowrap\",\n    }),\n    Columns.custom(snippet => <code className=\"snippet-content\">{snippet}</code>, {\n      title: \"Snippet\",\n      field: \"snippet\",\n    }),\n    Columns.avatar({ field: \"user\", className: \"p-l-0 p-r-0\" }, name => `Created by ${name}`),\n    Columns.date.sortable({\n      title: \"Created At\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, querySnippet) =>\n        canEditQuerySnippet(querySnippet) && (\n          <Button type=\"danger\" className=\"w-100\" onClick={e => this.deleteQuerySnippet(e, querySnippet)}>\n            Delete\n          </Button>\n        ),\n      {\n        width: \"1%\",\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    const { isNewOrEditPage, querySnippetId } = this.props.controller.params;\n\n    if (isNewOrEditPage) {\n      if (querySnippetId === \"new\") {\n        if (policy.isCreateQuerySnippetEnabled()) {\n          this.showSnippetDialog();\n        } else {\n          navigateTo(\"query_snippets\", true);\n        }\n      } else {\n        QuerySnippet.get({ id: querySnippetId })\n          .then(this.showSnippetDialog)\n          .catch(error => {\n            this.props.controller.handleError(error);\n          });\n      }\n    }\n  }\n\n  saveQuerySnippet = querySnippet => {\n    const saveSnippet = querySnippet.id ? QuerySnippet.save : QuerySnippet.create;\n    return saveSnippet(querySnippet);\n  };\n\n  deleteQuerySnippet = (event, querySnippet) => {\n    Modal.confirm({\n      title: \"Delete Query Snippet\",\n      content: \"Are you sure you want to delete this query snippet?\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        QuerySnippet.delete(querySnippet)\n          .then(() => {\n            notification.success(\"Query snippet deleted successfully.\");\n            this.props.controller.update();\n          })\n          .catch(() => {\n            notification.error(\"Failed deleting query snippet.\");\n          });\n      },\n    });\n  };\n\n  showSnippetDialog = (querySnippet = null) => {\n    const canSave = !querySnippet || canEditQuerySnippet(querySnippet);\n    navigateTo(\"query_snippets/\" + get(querySnippet, \"id\", \"new\"), true);\n    const goToSnippetsList = () => navigateTo(\"query_snippets\", true);\n    QuerySnippetDialog.showModal({\n      querySnippet,\n      readOnly: !canSave,\n    })\n      .onClose(querySnippet =>\n        this.saveQuerySnippet(querySnippet).then(() => {\n          this.props.controller.update();\n          goToSnippetsList();\n        })\n      )\n      .onDismiss(goToSnippetsList);\n  };\n\n  render() {\n    const { controller } = this.props;\n\n    return (\n      <div>\n        <div className=\"m-b-15\">\n          <Button\n            type=\"primary\"\n            onClick={() => this.showSnippetDialog()}\n            disabled={!policy.isCreateQuerySnippetEnabled()}>\n            <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n            New Query Snippet\n          </Button>\n        </div>\n\n        {!controller.isLoaded && <LoadingState className=\"\" />}\n        {controller.isLoaded && controller.isEmpty && (\n          <div className=\"text-center\">\n            There are no query snippets yet.\n            {policy.isCreateQuerySnippetEnabled() && (\n              <div className=\"m-t-5\">\n                <PlainButton type=\"link\" onClick={() => this.showSnippetDialog()}>\n                  Click here\n                </PlainButton>{\" \"}\n                to add one.\n              </div>\n            )}\n          </div>\n        )}\n        {controller.isLoaded && !controller.isEmpty && (\n          <div className=\"table-responsive query-snippets-table\">\n            <ItemsTable\n              items={controller.pageItems}\n              columns={this.listColumns}\n              context={this.actions}\n              orderByField={controller.orderByField}\n              orderByReverse={controller.orderByReverse}\n              toggleSorting={controller.toggleSorting}\n            />\n            <Paginator\n              showPageSizeSelect\n              totalCount={controller.totalItemsCount}\n              pageSize={controller.itemsPerPage}\n              onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n              page={controller.page}\n              onChange={page => controller.updatePagination({ page })}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst QuerySnippetsListPage = wrapSettingsTab(\n  \"QuerySnippets.List\",\n  {\n    permission: \"create_query\",\n    title: \"Query Snippets\",\n    path: \"query_snippets\",\n    order: 5,\n  },\n  itemsList(\n    QuerySnippetsList,\n    () =>\n      new ResourceItemsSource({\n        isPlainList: true,\n        getRequest() {\n          return {};\n        },\n        getResource() {\n          return QuerySnippet.query.bind(QuerySnippet);\n        },\n      }),\n    () => new StateStorage({ orderByField: \"trigger\", itemsPerPage: 10 })\n  )\n);\n\nroutes.register(\n  \"QuerySnippets.List\",\n  routeWithUserSession({\n    path: \"/query_snippets\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" />,\n  })\n);\nroutes.register(\n  \"QuerySnippets.NewOrEdit\",\n  routeWithUserSession({\n    path: \"/query_snippets/:querySnippetId\",\n    title: \"Query Snippets\",\n    render: pageProps => <QuerySnippetsListPage {...pageProps} currentPage=\"query_snippets\" isNewOrEditPage />,\n  })\n);\n","import { get } from \"lodash\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport recordEvent from \"@/services/recordEvent\";\nimport OrgSettings from \"@/services/organizationSettings\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { updateClientConfig } from \"@/services/auth\";\n\nexport default function useOrganizationSettings({ onError }) {\n  const [settings, setSettings] = useState({});\n  const [currentValues, setCurrentValues] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"org_settings\");\n\n    let isCancelled = false;\n\n    OrgSettings.get()\n      .then(response => {\n        if (!isCancelled) {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          setIsLoading(false);\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [handleError]);\n\n  const handleChange = useCallback(changes => {\n    setCurrentValues(currentValues => ({ ...currentValues, ...changes }));\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (!isSaving) {\n      setIsSaving(true);\n      OrgSettings.save(currentValues)\n        .then(response => {\n          const settings = get(response, \"settings\");\n          setSettings(settings);\n          setCurrentValues({ ...settings });\n          updateClientConfig({\n            dateFormat: currentValues.date_format,\n            timeFormat: currentValues.time_format,\n            dateTimeFormat: `${currentValues.date_format} ${currentValues.time_format}`,\n          });\n        })\n        .catch(handleError)\n        .finally(() => setIsSaving(false));\n    }\n  }, [isSaving, currentValues, handleError]);\n\n  return { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange };\n}\n","import PropTypes from \"prop-types\";\n\nexport const SettingsEditorPropTypes = {\n  settings: PropTypes.object,\n  values: PropTypes.object,\n  onChange: PropTypes.func, // (key, value) => void\n  loading: PropTypes.bool,\n};\n\nexport const SettingsEditorDefaultProps = {\n  settings: {},\n  values: {},\n  onChange: () => {},\n  loading: false,\n};\n","import React from \"react\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\n\nexport default function FormatSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FormatSettings\" {...props}>\n      <Form.Item label=\"Date Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.date_format}\n            onChange={value => onChange({ date_format: value })}\n            data-test=\"DateFormatSelect\">\n            {clientConfig.dateFormatList.map(dateFormat => (\n              <Select.Option key={dateFormat} data-test={`DateFormatSelect:${dateFormat}`}>\n                {dateFormat}\n              </Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"Time Format\">\n        {loading ? (\n          <Skeleton.Input style={{ width: 300 }} active />\n        ) : (\n          <Select\n            value={values.time_format}\n            onChange={value => onChange({ time_format: value })}\n            data-test=\"TimeFormatSelect\">\n            {clientConfig.timeFormatList.map(timeFormat => (\n              <Select.Option key={timeFormat}>{timeFormat}</Select.Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFormatSettings.propTypes = SettingsEditorPropTypes;\n\nFormatSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PlotlySettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PlotlySettings\" {...props}>\n      <Form.Item label=\"Chart Visualization\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            name=\"hide_plotly_mode_bar\"\n            checked={values.hide_plotly_mode_bar}\n            onChange={e => onChange({ hide_plotly_mode_bar: e.target.checked })}>\n            Hide Plotly mode bar\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPlotlySettings.propTypes = SettingsEditorPropTypes;\n\nPlotlySettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Form from \"antd/lib/form\";\nimport Row from \"antd/lib/row\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function FeatureFlagsSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings\" {...props}>\n      <Form.Item label=\"Feature Flags\">\n        {loading ? (\n          <>\n            <Row>\n              <Skeleton title={false} paragraph={{ width: [300, 300, 300], rows: 3 }} active />\n            </Row>\n          </>\n        ) : (\n          <>\n            <DynamicComponent name=\"OrganizationSettings.FeatureFlagsSettings.PermissionsControl\" {...props}>\n              <Row>\n                <Checkbox\n                  name=\"feature_show_permissions_control\"\n                  checked={values.feature_show_permissions_control}\n                  onChange={e => onChange({ feature_show_permissions_control: e.target.checked })}>\n                  Enable experimental multiple owners support\n                </Checkbox>\n              </Row>\n            </DynamicComponent>\n            <Row>\n              <Checkbox\n                name=\"send_email_on_failed_scheduled_queries\"\n                checked={values.send_email_on_failed_scheduled_queries}\n                onChange={e => onChange({ send_email_on_failed_scheduled_queries: e.target.checked })}>\n                Email query owners when scheduled queries fail\n              </Checkbox>\n            </Row>\n            <Row>\n              <Checkbox\n                name=\"multi_byte_search_enabled\"\n                checked={values.multi_byte_search_enabled}\n                onChange={e => onChange({ multi_byte_search_enabled: e.target.checked })}>\n                Enable multi-byte (Chinese, Japanese, and Korean) search for query names and descriptions (slower)\n              </Checkbox>\n            </Row>\n          </>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nFeatureFlagsSettings.propTypes = SettingsEditorPropTypes;\n\nFeatureFlagsSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function BeaconConsentSettings(props) {\n  const { values, onChange, loading } = props;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.BeaconConsentSettings\" {...props}>\n      <Form.Item\n        label={\n          <span>\n            Anonymous Usage Data Sharing\n            <HelpTrigger className=\"m-l-5 m-r-5\" type=\"USAGE_DATA_SHARING\" />\n          </span>\n        }>\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            name=\"beacon_consent\"\n            checked={values.beacon_consent}\n            onChange={e => onChange({ beacon_consent: e.target.checked })}>\n            Help Redash improve by automatically sending anonymous usage data\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nBeaconConsentSettings.propTypes = SettingsEditorPropTypes;\n\nBeaconConsentSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\n\nimport FormatSettings from \"./FormatSettings\";\nimport PlotlySettings from \"./PlotlySettings\";\nimport FeatureFlagsSettings from \"./FeatureFlagsSettings\";\nimport BeaconConsentSettings from \"./BeaconConsentSettings\";\n\nexport default function GeneralSettings(props) {\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GeneralSettings\" {...props}>\n      <h3 className=\"m-t-0\">General</h3>\n      <hr />\n      <FormatSettings {...props} />\n      <PlotlySettings {...props} />\n      <FeatureFlagsSettings {...props} />\n      <BeaconConsentSettings {...props} />\n    </DynamicComponent>\n  );\n}\n","import React from \"react\";\nimport Alert from \"antd/lib/alert\";\nimport Form from \"antd/lib/form\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Tooltip from \"@/components/Tooltip\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function PasswordLoginSettings(props) {\n  const { settings, values, onChange, loading } = props;\n\n  const isTheOnlyAuthMethod =\n    !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !values.auth_saml_enabled;\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.PasswordLoginSettings\" {...props}>\n      {!loading && !settings.auth_password_login_enabled && (\n        <Alert\n          message=\"Password based login is currently disabled and users will\n            be able to login only with the enabled SSO options.\"\n          type=\"warning\"\n          className=\"m-t-15 m-b-15\"\n        />\n      )}\n      <Form.Item label=\"Password Login\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Checkbox\n            checked={values.auth_password_login_enabled}\n            disabled={isTheOnlyAuthMethod}\n            onChange={e => onChange({ auth_password_login_enabled: e.target.checked })}>\n            <Tooltip\n              title={\n                isTheOnlyAuthMethod ? \"Password login can be disabled only if another login method is enabled.\" : null\n              }\n              placement=\"right\">\n              Password Login Enabled\n            </Tooltip>\n          </Checkbox>\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nPasswordLoginSettings.propTypes = SettingsEditorPropTypes;\n\nPasswordLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import { isEmpty, join } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function GoogleLoginSettings(props) {\n  const { values, onChange } = props;\n\n  if (!clientConfig.googleLoginEnabled) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.GoogleLoginSettings\" {...props}>\n      <h4>Google Login</h4>\n      <Form.Item label=\"Allowed Google Apps Domains\">\n        <Select\n          mode=\"tags\"\n          value={values.auth_google_apps_domains}\n          onChange={value => onChange({ auth_google_apps_domains: value })}\n        />\n        {!isEmpty(values.auth_google_apps_domains) && (\n          <Alert\n            message={\n              <p>\n                Any user registered with a <strong>{join(values.auth_google_apps_domains, \", \")}</strong> Google Apps\n                account will be able to login. If they don't have an existing user, a new user will be created and join\n                the <strong>Default</strong> group.\n              </p>\n            }\n            className=\"m-t-15\"\n          />\n        )}\n      </Form.Item>\n    </DynamicComponent>\n  );\n}\n\nGoogleLoginSettings.propTypes = SettingsEditorPropTypes;\n\nGoogleLoginSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport Radio from \"antd/lib/radio\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nexport default function SAMLSettings(props) {\n  const { values, onChange, loading } = props;\n\n  const onChangeEnabledStatus = e => {\n    const updates = { auth_saml_enabled: !!e.target.value };\n    if (e.target.value) {\n      updates.auth_saml_type = e.target.value;\n    }\n    onChange(updates);\n  };\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.SAMLSettings\" {...props}>\n      <h4>SAML</h4>\n      <Form.Item label=\"SAML Enabled\">\n        {loading ? (\n          <Skeleton title={{ width: 300 }} paragraph={false} active />\n        ) : (\n          <Radio.Group\n            onChange={onChangeEnabledStatus}\n            value={values.auth_saml_enabled && (values.auth_saml_type || \"dynamic\")}>\n            <Radio value={false}>Disabled</Radio>\n            <Radio value={\"static\"}>Enabled (Static)</Radio>\n            <Radio value={\"dynamic\"}>Enabled (Dynamic)</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n      {values.auth_saml_enabled && (\n        <>\n          {values.auth_saml_type === \"static\" && (\n            <>\n              <Form.Item label=\"SAML Single Sign-on URL\">\n                <Input\n                  value={values.auth_saml_sso_url}\n                  onChange={e => onChange({ auth_saml_sso_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML x509 cert\">\n                <Input\n                  value={values.auth_saml_x509_cert}\n                  onChange={e => onChange({ auth_saml_x509_cert: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n          {values.auth_saml_type === \"dynamic\" && (\n            <>\n              <Form.Item label=\"SAML Metadata URL\">\n                <Input\n                  value={values.auth_saml_metadata_url}\n                  onChange={e => onChange({ auth_saml_metadata_url: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML Entity ID\">\n                <Input\n                  value={values.auth_saml_entity_id}\n                  onChange={e => onChange({ auth_saml_entity_id: e.target.value })}\n                />\n              </Form.Item>\n              <Form.Item label=\"SAML NameID Format\">\n                <Input\n                  value={values.auth_saml_nameid_format}\n                  onChange={e => onChange({ auth_saml_nameid_format: e.target.value })}\n                />\n              </Form.Item>\n            </>\n          )}\n        </>\n      )}\n    </DynamicComponent>\n  );\n}\n\nSAMLSettings.propTypes = SettingsEditorPropTypes;\n\nSAMLSettings.defaultProps = SettingsEditorDefaultProps;\n","import React, { useCallback } from \"react\";\nimport HelpTrigger from \"@/components/HelpTrigger\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { clientConfig } from \"@/services/auth\";\nimport { SettingsEditorPropTypes, SettingsEditorDefaultProps } from \"../prop-types\";\n\nimport PasswordLoginSettings from \"./PasswordLoginSettings\";\nimport GoogleLoginSettings from \"./GoogleLoginSettings\";\nimport SAMLSettings from \"./SAMLSettings\";\n\nexport default function AuthSettings(props) {\n  const { values, onChange } = props;\n  const handleChange = useCallback(\n    changes => {\n      const allSettings = { ...values, ...changes };\n      const allAuthMethodsDisabled =\n        !clientConfig.googleLoginEnabled && !clientConfig.ldapLoginEnabled && !allSettings.auth_saml_enabled;\n      if (allAuthMethodsDisabled) {\n        changes = { ...changes, auth_password_login_enabled: true };\n      }\n      onChange(changes);\n    },\n    [values, onChange]\n  );\n\n  return (\n    <DynamicComponent name=\"OrganizationSettings.AuthSettings\" {...props}>\n      <h3 className=\"m-t-0\">\n        Authentication <HelpTrigger type=\"AUTHENTICATION_OPTIONS\" />\n      </h3>\n      <hr />\n      <PasswordLoginSettings {...props} onChange={handleChange} />\n      <GoogleLoginSettings {...props} onChange={handleChange} />\n      <SAMLSettings {...props} onChange={handleChange} />\n    </DynamicComponent>\n  );\n}\n\nAuthSettings.propTypes = SettingsEditorPropTypes;\nAuthSettings.defaultProps = SettingsEditorDefaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Skeleton from \"antd/lib/skeleton\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport routes from \"@/services/routes\";\nimport { getHorizontalFormProps, getHorizontalFormItemWithoutLabelProps } from \"@/styles/formStyle\";\n\nimport useOrganizationSettings from \"./hooks/useOrganizationSettings\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport AuthSettings from \"./components/AuthSettings\";\n\nfunction OrganizationSettings({ onError }) {\n  const { settings, currentValues, isLoading, isSaving, handleSubmit, handleChange } = useOrganizationSettings(onError);\n  return (\n    <div className=\"row\" data-test=\"OrganizationSettings\">\n      <div className=\"m-r-20 m-l-20\">\n        <Form {...getHorizontalFormProps()} onFinish={handleSubmit}>\n          <GeneralSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <AuthSettings loading={isLoading} settings={settings} values={currentValues} onChange={handleChange} />\n          <Form.Item {...getHorizontalFormItemWithoutLabelProps()}>\n            {isLoading ? (\n              <Skeleton.Button active />\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\" loading={isSaving} data-test=\"OrganizationSettingsSaveButton\">\n                Save\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nOrganizationSettings.propTypes = {\n  onError: PropTypes.func,\n};\n\nOrganizationSettings.defaultProps = {\n  onError: () => {},\n};\n\nconst OrganizationSettingsPage = wrapSettingsTab(\n  \"Settings.Organization\",\n  {\n    permission: \"admin\",\n    title: \"General\",\n    path: \"settings/general\",\n    order: 6,\n  },\n  OrganizationSettings\n);\n\nroutes.register(\n  \"Settings.Organization\",\n  routeWithUserSession({\n    path: \"/settings/general\",\n    title: \"General Settings\",\n    render: pageProps => <OrganizationSettingsPage {...pageProps} />,\n  })\n);\n","import { FormProps } from \"antd/lib/form/Form\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\nimport \"./formStyle.less\";\n\nexport function getHorizontalFormProps(): FormProps {\n  return {\n    labelCol: { xs: { span: 24 }, sm: { span: 6 }, lg: { span: 4 } },\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12 }, lg: { span: 10 } },\n    layout: \"horizontal\",\n    className: \"ant-form-horizontal--labels-left\",\n  };\n}\n\nexport function getHorizontalFormItemWithoutLabelProps(): FormItemProps {\n  return {\n    wrapperCol: { xs: { span: 24 }, sm: { span: 12, offset: 6 }, lg: { span: 12, offset: 4 } },\n  };\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport function absoluteUrl(url) {\n  const urlObj = new URL(url, window.location);\n  urlObj.protocol = window.location.protocol;\n  urlObj.host = window.location.host;\n  return urlObj.toString();\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport recordEvent from \"@/services/recordEvent\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nconst formFields = [\n  { required: true, name: \"name\", title: \"Name\", type: \"text\", autoFocus: true },\n  { required: true, name: \"email\", title: \"Email\", type: \"email\" },\n];\n\nfunction CreateUserDialog({ dialog }) {\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    recordEvent(\"view\", \"page\", \"users/new\");\n  }, []);\n\n  const handleSubmit = useCallback(values => dialog.close(values).catch(setError), [dialog]);\n  const formId = useUniqueId(\"userForm\");\n\n  return (\n    <Modal\n      {...dialog.props}\n      title=\"Create a New User\"\n      footer={[\n        <Button key=\"cancel\" {...dialog.props.cancelButtonProps} onClick={dialog.dismiss}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          {...dialog.props.okButtonProps}\n          htmlType=\"submit\"\n          type=\"primary\"\n          form={formId}\n          data-test=\"SaveUserButton\">\n          Create\n        </Button>,\n      ]}\n      wrapProps={{\n        \"data-test\": \"CreateUserDialog\",\n      }}>\n      <DynamicForm id={formId} fields={formFields} onSubmit={handleSubmit} hideSubmitButton />\n      {error && <Alert message={error.message} type=\"error\" showIcon data-test=\"CreateUserErrorAlert\" />}\n    </Modal>\n  );\n}\n\nCreateUserDialog.propTypes = {\n  dialog: DialogPropType.isRequired,\n};\n\nexport default wrapDialog(CreateUserDialog);\n","import { isString, map, get, find } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport Link from \"@/components/Link\";\nimport Paginator from \"@/components/Paginator\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserPreviewCard } from \"@/components/PreviewCard\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\n\nimport { wrap as itemsList, ControllerType } from \"@/components/items-list/ItemsList\";\nimport { ResourceItemsSource } from \"@/components/items-list/classes/ItemsSource\";\nimport { UrlStateStorage } from \"@/components/items-list/classes/StateStorage\";\n\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport EmptyState from \"@/components/items-list/components/EmptyState\";\nimport * as Sidebar from \"@/components/items-list/components/Sidebar\";\nimport ItemsTable, { Columns } from \"@/components/items-list/components/ItemsTable\";\n\nimport Layout from \"@/components/layouts/ContentWithSidebar\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport { currentUser } from \"@/services/auth\";\nimport { policy } from \"@/services/policy\";\nimport User from \"@/services/user\";\nimport navigateTo from \"@/components/ApplicationArea/navigateTo\";\nimport notification from \"@/services/notification\";\nimport { absoluteUrl } from \"@/services/utils\";\nimport routes from \"@/services/routes\";\n\nimport CreateUserDialog from \"./components/CreateUserDialog\";\n\nfunction UsersListActions({ user, enableUser, disableUser, deleteUser }) {\n  if (user.id === currentUser.id) {\n    return null;\n  }\n  if (user.is_invitation_pending) {\n    return (\n      <Button type=\"danger\" className=\"w-100\" onClick={event => deleteUser(event, user)}>\n        Delete\n      </Button>\n    );\n  }\n  return user.is_disabled ? (\n    <Button type=\"primary\" className=\"w-100\" onClick={event => enableUser(event, user)}>\n      Enable\n    </Button>\n  ) : (\n    <Button className=\"w-100\" onClick={event => disableUser(event, user)}>\n      Disable\n    </Button>\n  );\n}\n\nUsersListActions.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    is_invitation_pending: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n  }).isRequired,\n  enableUser: PropTypes.func.isRequired,\n  disableUser: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n};\n\nclass UsersList extends React.Component {\n  static propTypes = {\n    controller: ControllerType.isRequired,\n  };\n\n  sidebarMenu = [\n    {\n      key: \"active\",\n      href: \"users\",\n      title: \"Active Users\",\n    },\n    {\n      key: \"pending\",\n      href: \"users/pending\",\n      title: \"Pending Invitations\",\n    },\n    {\n      key: \"disabled\",\n      href: \"users/disabled\",\n      title: \"Disabled Users\",\n      isAvailable: () => policy.canCreateUser(),\n    },\n  ];\n\n  listColumns = [\n    Columns.custom.sortable((text, user) => <UserPreviewCard user={user} withLink />, {\n      title: \"Name\",\n      field: \"name\",\n      width: null,\n    }),\n    Columns.custom.sortable(\n      (text, user) =>\n        map(user.groups, group => (\n          <Link key={\"group\" + group.id} className=\"label label-tag\" href={\"groups/\" + group.id}>\n            {group.name}\n          </Link>\n        )),\n      {\n        title: \"Groups\",\n        field: \"groups\",\n      }\n    ),\n    Columns.timeAgo.sortable({\n      title: \"Joined\",\n      field: \"created_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.timeAgo.sortable({\n      title: \"Last Active At\",\n      field: \"active_at\",\n      className: \"text-nowrap\",\n      width: \"1%\",\n    }),\n    Columns.custom(\n      (text, user) => (\n        <UsersListActions\n          user={user}\n          enableUser={this.enableUser}\n          disableUser={this.disableUser}\n          deleteUser={this.deleteUser}\n        />\n      ),\n      {\n        width: \"1%\",\n        isAvailable: () => policy.canCreateUser(),\n      }\n    ),\n  ];\n\n  componentDidMount() {\n    if (this.props.controller.params.isNewUserPage) {\n      this.showCreateUserDialog();\n    }\n  }\n\n  createUser = values =>\n    User.create(values)\n      .then(user => {\n        notification.success(\"Saved.\");\n        if (user.invite_link) {\n          Modal.warning({\n            title: \"Email not sent!\",\n            content: (\n              <React.Fragment>\n                <p>\n                  The mail server is not configured, please send the following link to <b>{user.name}</b>:\n                </p>\n                <InputWithCopy value={absoluteUrl(user.invite_link)} aria-label=\"Invite link\" readOnly />\n              </React.Fragment>\n            ),\n          });\n        }\n      })\n      .catch(error => {\n        const message = find([get(error, \"response.data.message\"), get(error, \"message\"), \"Failed saving.\"], isString);\n        return Promise.reject(new Error(message));\n      });\n\n  showCreateUserDialog = () => {\n    if (policy.isCreateUserEnabled()) {\n      const goToUsersList = () => {\n        if (this.props.controller.params.isNewUserPage) {\n          navigateTo(\"users\");\n        }\n      };\n      CreateUserDialog.showModal()\n        .onClose(values =>\n          this.createUser(values).then(() => {\n            this.props.controller.update();\n            goToUsersList();\n          })\n        )\n        .onDismiss(goToUsersList);\n    }\n  };\n\n  enableUser = (event, user) => User.enableUser(user).then(() => this.props.controller.update());\n\n  disableUser = (event, user) => User.disableUser(user).then(() => this.props.controller.update());\n\n  deleteUser = (event, user) => User.deleteUser(user).then(() => this.props.controller.update());\n\n  // eslint-disable-next-line class-methods-use-this\n  renderPageHeader() {\n    if (!policy.canCreateUser()) {\n      return null;\n    }\n    return (\n      <div className=\"m-b-15\">\n        <Button type=\"primary\" disabled={!policy.isCreateUserEnabled()} onClick={this.showCreateUserDialog}>\n          <i className=\"fa fa-plus m-r-5\" aria-hidden=\"true\" />\n          New User\n        </Button>\n        <DynamicComponent name=\"UsersListExtra\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { controller } = this.props;\n    return (\n      <React.Fragment>\n        {this.renderPageHeader()}\n        <Layout>\n          <Layout.Sidebar className=\"m-b-0\">\n            <Sidebar.SearchInput\n              value={controller.searchTerm}\n              onChange={controller.updateSearch}\n              label=\"Search users\"\n            />\n            <Sidebar.Menu items={this.sidebarMenu} selected={controller.params.currentPage} />\n          </Layout.Sidebar>\n          <Layout.Content>\n            {!controller.isLoaded && <LoadingState className=\"\" />}\n            {controller.isLoaded && controller.isEmpty && <EmptyState className=\"\" />}\n            {controller.isLoaded && !controller.isEmpty && (\n              <div className=\"table-responsive\" data-test=\"UserList\">\n                <ItemsTable\n                  items={controller.pageItems}\n                  columns={this.listColumns}\n                  context={this.actions}\n                  orderByField={controller.orderByField}\n                  orderByReverse={controller.orderByReverse}\n                  toggleSorting={controller.toggleSorting}\n                />\n                <Paginator\n                  showPageSizeSelect\n                  totalCount={controller.totalItemsCount}\n                  pageSize={controller.itemsPerPage}\n                  onPageSizeChange={itemsPerPage => controller.updatePagination({ itemsPerPage })}\n                  page={controller.page}\n                  onChange={page => controller.updatePagination({ page })}\n                />\n              </div>\n            )}\n          </Layout.Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nconst UsersListPage = wrapSettingsTab(\n  \"Users.List\",\n  {\n    permission: \"list_users\",\n    title: \"Users\",\n    path: \"users\",\n    isActive: path => path.startsWith(\"/users\") && path !== \"/users/me\",\n    order: 2,\n  },\n  itemsList(\n    UsersList,\n    () =>\n      new ResourceItemsSource({\n        getRequest(request, { params: { currentPage } }) {\n          switch (currentPage) {\n            case \"active\":\n              request.pending = false;\n              break;\n            case \"pending\":\n              request.pending = true;\n              break;\n            case \"disabled\":\n              request.disabled = true;\n              break;\n            // no default\n          }\n          return request;\n        },\n        getResource() {\n          return User.query.bind(User);\n        },\n      }),\n    () => new UrlStateStorage({ orderByField: \"created_at\", orderByReverse: true })\n  )\n);\n\nroutes.register(\n  \"Users.New\",\n  routeWithUserSession({\n    path: \"/users/new\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" isNewUserPage />,\n  })\n);\nroutes.register(\n  \"Users.List\",\n  routeWithUserSession({\n    path: \"/users\",\n    title: \"Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"active\" />,\n  })\n);\nroutes.register(\n  \"Users.Pending\",\n  routeWithUserSession({\n    path: \"/users/pending\",\n    title: \"Pending Invitations\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"pending\" />,\n  })\n);\nroutes.register(\n  \"Users.Disabled\",\n  routeWithUserSession({\n    path: \"/users/disabled\",\n    title: \"Disabled Users\",\n    render: pageProps => <UsersListPage {...pageProps} currentPage=\"disabled\" />,\n  })\n);\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tag from \"antd/lib/tag\";\nimport Link from \"@/components/Link\";\n\nimport \"./UserGroups.less\";\n\nexport default function UserGroups({ groups, linkGroups, ...props }) {\n  return (\n    <div className=\"user-groups\" {...props}>\n      {map(groups, group => (\n        <Tag key={group.id}>{linkGroups ? <Link href={`groups/${group.id}`}>{group.name}</Link> : group.name}</Tag>\n      ))}\n    </div>\n  );\n}\n\nUserGroups.propTypes = {\n  groups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string,\n    })\n  ),\n  linkGroups: PropTypes.bool,\n};\n\nUserGroups.defaultProps = {\n  groups: [],\n  linkGroups: true,\n};\n","import { filter, includes, isArray } from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Group from \"@/services/group\";\n\nexport default function useUserGroups(user) {\n  const [allGroups, setAllGroups] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const groups = useMemo(() => filter(allGroups, group => includes(user.groupIds, group.id)), [allGroups, user]);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    Group.query().then(groups => {\n      if (!isCancelled) {\n        setAllGroups(isArray(groups) ? groups : []);\n        setIsLoading(false);\n      }\n    });\n  }, []);\n\n  return useMemo(() => ({ groups, allGroups, isLoading }), [groups, allGroups, isLoading]);\n}\n","import { get, map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport DynamicForm from \"@/components/dynamic-form/DynamicForm\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function UserInfoForm(props) {\n  const { user, onChange } = props;\n\n  const { groups, allGroups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  const handleChange = useImmutableCallback(onChange);\n\n  const saveUser = useCallback(\n    (values, successCallback, errorCallback) => {\n      const data = {\n        ...values,\n        id: user.id,\n      };\n\n      User.save(data)\n        .then(user => {\n          successCallback(\"Saved.\");\n          handleChange(User.convertUserInfo(user));\n        })\n        .catch(error => {\n          errorCallback(get(error, \"response.data.message\", \"Failed saving.\"));\n        });\n    },\n    [user, handleChange]\n  );\n\n  const formFields = useMemo(\n    () =>\n      map(\n        [\n          {\n            name: \"name\",\n            title: \"Name\",\n            type: \"text\",\n            initialValue: user.name,\n          },\n          {\n            name: \"email\",\n            title: \"Email\",\n            type: \"email\",\n            initialValue: user.email,\n          },\n          !user.isDisabled && currentUser.id !== user.id\n            ? {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"select\",\n                mode: \"multiple\",\n                options: map(allGroups, group => ({ name: group.name, value: group.id })),\n                initialValue: user.groupIds,\n                loading: isLoadingGroups,\n                placeholder: isLoadingGroups ? \"Loading...\" : \"\",\n              }\n            : {\n                name: \"group_ids\",\n                title: \"Groups\",\n                type: \"content\",\n                required: false,\n                content: isLoadingGroups ? \"Loading...\" : <UserGroups data-test=\"Groups\" groups={groups} />,\n              },\n        ],\n        field => ({ readOnly: user.isDisabled, required: true, ...field })\n      ),\n    [user, groups, allGroups, isLoadingGroups]\n  );\n\n  return (\n    <DynamicComponent name=\"UserProfile.UserInfoForm\" {...props}>\n      <DynamicForm fields={formFields} onSubmit={saveUser} hideSubmitButton={user.isDisabled} />\n    </DynamicComponent>\n  );\n}\n\nUserInfoForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nUserInfoForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\nimport { useUniqueId } from \"@/lib/hooks/useUniqueId\";\n\nexport default function ApiKeyForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n  const apiKeyInputId = useUniqueId(\"apiKey\");\n\n  const regenerateApiKey = useCallback(() => {\n    const doRegenerate = () => {\n      setLoading(true);\n      User.regenerateApiKey(user)\n        .then(apiKey => {\n          if (apiKey) {\n            handleChange({ ...user, apiKey });\n          }\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    Modal.confirm({\n      title: \"Regenerate API Key\",\n      content: \"Are you sure you want to regenerate?\",\n      okText: \"Regenerate\",\n      onOk: doRegenerate,\n      maskClosable: true,\n      autoFocusButton: null,\n    });\n  }, [user, handleChange]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ApiKeyForm\" {...props}>\n      <Form layout=\"vertical\">\n        <hr />\n        <Form.Item label=\"API Key\" className=\"m-b-10\">\n          <InputWithCopy id={apiKeyInputId} className=\"hide-in-percy\" value={user.apiKey} data-test=\"ApiKey\" readOnly />\n        </Form.Item>\n        <Button className=\"w-100\" onClick={regenerateApiKey} loading={loading} data-test=\"RegenerateApiKey\">\n          Regenerate\n        </Button>\n      </Form>\n    </DynamicComponent>\n  );\n}\n\nApiKeyForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nApiKeyForm.defaultProps = {\n  onChange: () => {},\n};\n","import { isFunction, get } from \"lodash\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Modal from \"antd/lib/modal\";\nimport Input from \"antd/lib/input\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { wrap as wrapDialog, DialogPropType } from \"@/components/DialogWrapper\";\nimport User from \"@/services/user\";\nimport notification from \"@/services/notification\";\n\nclass ChangePasswordDialog extends React.Component {\n  static propTypes = {\n    user: UserProfile.isRequired,\n    dialog: DialogPropType.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: { value: \"\", error: null, touched: false },\n      newPassword: { value: \"\", error: null, touched: false },\n      repeatPassword: { value: \"\", error: null, touched: false },\n      updatingPassword: false,\n    };\n  }\n\n  fieldError = (name, value) => {\n    if (value.length === 0) return \"This field is required.\";\n    if (name !== \"currentPassword\" && value.length < 6) return \"This field is too short.\";\n    if (name === \"repeatPassword\" && value !== this.state.newPassword.value) return \"Passwords don't match\";\n    return null;\n  };\n\n  validateFields = callback => {\n    const { currentPassword, newPassword, repeatPassword } = this.state;\n\n    const errors = {\n      currentPassword: this.fieldError(\"currentPassword\", currentPassword.value),\n      newPassword: this.fieldError(\"newPassword\", newPassword.value),\n      repeatPassword: this.fieldError(\"repeatPassword\", repeatPassword.value),\n    };\n\n    this.setState({\n      currentPassword: { ...currentPassword, error: errors.currentPassword },\n      newPassword: { ...newPassword, error: errors.newPassword },\n      repeatPassword: { ...repeatPassword, error: errors.repeatPassword },\n    });\n\n    if (isFunction(callback)) {\n      if (errors.currentPassword || errors.newPassword || errors.repeatPassword) {\n        callback(errors);\n      } else callback(null);\n    }\n  };\n\n  updatePassword = () => {\n    const { currentPassword, newPassword, updatingPassword } = this.state;\n\n    if (!updatingPassword) {\n      this.validateFields(err => {\n        if (!err) {\n          const userData = {\n            id: this.props.user.id,\n            old_password: currentPassword.value,\n            password: newPassword.value,\n          };\n\n          this.setState({ updatingPassword: true });\n\n          User.save(userData)\n            .then(() => {\n              notification.success(\"Saved.\");\n              this.props.dialog.close({ success: true });\n            })\n            .catch(error => {\n              notification.error(get(error, \"response.data.message\", \"Failed saving.\"));\n              this.setState({ updatingPassword: false });\n            });\n        } else {\n          this.setState(prevState => ({\n            currentPassword: { ...prevState.currentPassword, touched: true },\n            newPassword: { ...prevState.newPassword, touched: true },\n            repeatPassword: { ...prevState.repeatPassword, touched: true },\n          }));\n        }\n      });\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    const { error } = this.state[name];\n\n    this.setState({ [name]: { value, error, touched: true } }, () => {\n      this.validateFields();\n    });\n  };\n\n  render() {\n    const { dialog } = this.props;\n    const { currentPassword, newPassword, repeatPassword, updatingPassword } = this.state;\n\n    const formItemProps = { className: \"m-b-10\", required: true };\n\n    const inputProps = {\n      onChange: this.handleChange,\n      onPressEnter: this.updatePassword,\n    };\n\n    return (\n      <Modal\n        {...dialog.props}\n        okButtonProps={{ loading: updatingPassword }}\n        onOk={this.updatePassword}\n        title=\"Change Password\">\n        <Form layout=\"vertical\">\n          <Form.Item\n            {...formItemProps}\n            validateStatus={currentPassword.touched && currentPassword.error ? \"error\" : null}\n            help={currentPassword.touched ? currentPassword.error : null}\n            label=\"Current Password\">\n            <Input.Password {...inputProps} name=\"currentPassword\" data-test=\"CurrentPassword\" autoFocus />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={newPassword.touched && newPassword.error ? \"error\" : null}\n            help={newPassword.touched ? newPassword.error : null}\n            label=\"New Password\">\n            <Input.Password {...inputProps} name=\"newPassword\" data-test=\"NewPassword\" />\n          </Form.Item>\n          <Form.Item\n            {...formItemProps}\n            validateStatus={repeatPassword.touched && repeatPassword.error ? \"error\" : null}\n            help={repeatPassword.touched ? repeatPassword.error : null}\n            label=\"Repeat New Password\">\n            <Input.Password {...inputProps} name=\"repeatPassword\" data-test=\"RepeatPassword\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default wrapDialog(ChangePasswordDialog);\n","import { isString } from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"antd/lib/alert\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport InputWithCopy from \"@/components/InputWithCopy\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { absoluteUrl } from \"@/services/utils\";\n\nexport default function PasswordLinkAlert(props) {\n  const { user, passwordLink, ...restProps } = props;\n\n  if (!isString(passwordLink)) {\n    return null;\n  }\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordLinkAlert\" {...props}>\n      <Alert\n        message=\"Email not sent!\"\n        description={\n          <React.Fragment>\n            <p>\n              The mail server is not configured, please send the following link to <b>{user.name}</b>:\n            </p>\n            <InputWithCopy value={absoluteUrl(passwordLink)} aria-label=\"Password link\" readOnly />\n          </React.Fragment>\n        }\n        type=\"warning\"\n        className=\"m-t-20\"\n        closable\n        {...restProps}\n      />\n    </DynamicComponent>\n  );\n}\n\nPasswordLinkAlert.propTypes = {\n  user: UserProfile.isRequired,\n  passwordLink: PropTypes.string,\n};\n\nPasswordLinkAlert.defaultProps = {\n  passwordLink: null,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function PasswordResetForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const sendPasswordReset = useCallback(() => {\n    setLoading(true);\n    User.sendPasswordReset(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordResetForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={sendPasswordReset} loading={loading}>\n        Send Password Reset Email\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nPasswordResetForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport User from \"@/services/user\";\nimport PasswordLinkAlert from \"./PasswordLinkAlert\";\n\nexport default function ResendInvitationForm(props) {\n  const { user } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [passwordLink, setPasswordLink] = useState(null);\n\n  const resendInvitation = useCallback(() => {\n    setLoading(true);\n\n    User.resendInvitation(user)\n      .then(passwordLink => {\n        setPasswordLink(passwordLink);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.ResendInvitationForm\" {...props}>\n      <Button className=\"w-100 m-t-10\" onClick={resendInvitation} loading={loading}>\n        Resend Invitation\n      </Button>\n      <PasswordLinkAlert user={user} passwordLink={passwordLink} afterClose={() => setPasswordLink(null)} />\n    </DynamicComponent>\n  );\n}\n\nResendInvitationForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useCallback } from \"react\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\n\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\nimport PasswordResetForm from \"./PasswordResetForm\";\nimport ResendInvitationForm from \"./ResendInvitationForm\";\n\nexport default function PasswordForm(props) {\n  const { user } = props;\n\n  const changePassword = useCallback(() => {\n    ChangePasswordDialog.showModal({ user });\n  }, [user]);\n\n  return (\n    <DynamicComponent name=\"UserProfile.PasswordForm\" {...props}>\n      <h5>Password</h5>\n      {user.id === currentUser.id && (\n        <Button className=\"w-100 m-t-10\" onClick={changePassword} data-test=\"ChangePassword\">\n          Change Password\n        </Button>\n      )}\n      {user.id !== currentUser.id && currentUser.isAdmin && (\n        <React.Fragment>\n          {user.isInvitationPending ? <ResendInvitationForm user={user} /> : <PasswordResetForm user={user} />}\n        </React.Fragment>\n      )}\n    </DynamicComponent>\n  );\n}\n\nPasswordForm.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"antd/lib/button\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport { currentUser } from \"@/services/auth\";\nimport User from \"@/services/user\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nexport default function ToggleUserForm(props) {\n  const { user, onChange } = props;\n\n  const [loading, setLoading] = useState(false);\n  const handleChange = useImmutableCallback(onChange);\n\n  const toggleUser = useCallback(() => {\n    const action = user.isDisabled ? User.enableUser : User.disableUser;\n    setLoading(true);\n    action(user)\n      .then(data => {\n        if (data) {\n          handleChange(User.convertUserInfo(data));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user, handleChange]);\n\n  if (!currentUser.isAdmin || user.id === currentUser.id) {\n    return null;\n  }\n\n  const buttonProps = {\n    type: user.isDisabled ? \"primary\" : \"danger\",\n    children: user.isDisabled ? \"Enable User\" : \"Disable User\",\n  };\n\n  return (\n    <DynamicComponent name=\"UserProfile.ToggleUserForm\">\n      <Button className=\"w-100 m-t-10\" onClick={toggleUser} loading={loading} {...buttonProps} />\n    </DynamicComponent>\n  );\n}\n\nToggleUserForm.propTypes = {\n  user: UserProfile.isRequired,\n  onChange: PropTypes.func,\n};\n\nToggleUserForm.defaultProps = {\n  onChange: () => {},\n};\n","import React, { useState, useEffect } from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\n\nimport UserInfoForm from \"./UserInfoForm\";\nimport ApiKeyForm from \"./ApiKeyForm\";\nimport PasswordForm from \"./PasswordForm\";\nimport ToggleUserForm from \"./ToggleUserForm\";\n\nexport default function EditableUserProfile(props) {\n  const [user, setUser] = useState(props.user);\n\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4\">\n      <img alt=\"Profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <UserInfoForm user={user} onChange={setUser} />\n      {!user.isDisabled && (\n        <React.Fragment>\n          <ApiKeyForm user={user} onChange={setUser} />\n          <hr />\n          <PasswordForm user={user} />\n        </React.Fragment>\n      )}\n      <hr />\n      <ToggleUserForm user={user} onChange={setUser} />\n    </div>\n  );\n}\n\nEditableUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React from \"react\";\nimport { UserProfile } from \"@/components/proptypes\";\nimport UserGroups from \"@/components/UserGroups\";\n\nimport useUserGroups from \"../hooks/useUserGroups\";\n\nexport default function ReadOnlyUserProfile({ user }) {\n  const { groups, isLoading: isLoadingGroups } = useUserGroups(user);\n\n  return (\n    <div className=\"col-md-4 col-md-offset-4 profile__container\">\n      <img alt=\"profile\" src={user.profileImageUrl} className=\"profile__image\" width=\"40\" />\n      <h3 className=\"profile__h3\">{user.name}</h3>\n      <hr />\n      <dl className=\"profile__dl\">\n        <dt>Name:</dt>\n        <dd>{user.name}</dd>\n        <dt>Email:</dt>\n        <dd>{user.email}</dd>\n        <dt className=\"m-b-5\">Groups:</dt>\n        <dd>{isLoadingGroups ? \"Loading...\" : <UserGroups groups={groups} />}</dd>\n      </dl>\n    </div>\n  );\n}\n\nReadOnlyUserProfile.propTypes = {\n  user: UserProfile.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport routeWithUserSession from \"@/components/ApplicationArea/routeWithUserSession\";\nimport EmailSettingsWarning from \"@/components/EmailSettingsWarning\";\nimport DynamicComponent from \"@/components/DynamicComponent\";\nimport LoadingState from \"@/components/items-list/components/LoadingState\";\nimport wrapSettingsTab from \"@/components/SettingsWrapper\";\n\nimport User from \"@/services/user\";\nimport { currentUser } from \"@/services/auth\";\nimport routes from \"@/services/routes\";\nimport useImmutableCallback from \"@/lib/hooks/useImmutableCallback\";\n\nimport EditableUserProfile from \"./components/EditableUserProfile\";\nimport ReadOnlyUserProfile from \"./components/ReadOnlyUserProfile\";\n\nimport \"./settings.less\";\n\nfunction UserProfile({ userId, onError }) {\n  const [user, setUser] = useState(null);\n\n  const handleError = useImmutableCallback(onError);\n\n  useEffect(() => {\n    let isCancelled = false;\n    User.get({ id: userId || currentUser.id })\n      .then(user => {\n        if (!isCancelled) {\n          setUser(User.convertUserInfo(user));\n        }\n      })\n      .catch(error => {\n        if (!isCancelled) {\n          handleError(error);\n        }\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [userId, handleError]);\n\n  const canEdit = user && (currentUser.isAdmin || currentUser.id === user.id);\n  return (\n    <React.Fragment>\n      <EmailSettingsWarning featureName=\"invite emails\" className=\"m-b-20\" adminOnly />\n      <div className=\"row\">\n        {!user && <LoadingState className=\"\" />}\n        {user && (\n          <DynamicComponent name=\"UserProfile\" user={user}>\n            {!canEdit && <ReadOnlyUserProfile user={user} />}\n            {canEdit && <EditableUserProfile user={user} />}\n          </DynamicComponent>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nUserProfile.propTypes = {\n  userId: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nUserProfile.defaultProps = {\n  userId: null, // defaults to `currentUser.id`\n  onError: () => {},\n};\n\nconst UserProfilePage = wrapSettingsTab(\n  \"Users.Account\",\n  {\n    title: \"Account\",\n    path: \"users/me\",\n    order: 7,\n  },\n  UserProfile\n);\n\nroutes.register(\n  \"Users.Account\",\n  routeWithUserSession({\n    path: \"/users/me\",\n    title: \"Account\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\nroutes.register(\n  \"Users.ViewOrEdit\",\n  routeWithUserSession({\n    path: \"/users/:userId\",\n    title: \"Users\",\n    render: pageProps => <UserProfilePage {...pageProps} />,\n  })\n);\n","import moment from \"moment\";\nimport { isFunction } from \"lodash\";\n\n// Ensure that this image will be available in assets folder\nimport \"@/assets/images/avatar.svg\";\n\n// Register visualizations\nimport \"@redash/viz/lib\";\n\n// Register routes before registering extensions as they may want to override some\nimport \"@/pages\";\n\nimport \"./antd-spinner\";\n\nmoment.updateLocale(\"en\", {\n  relativeTime: {\n    future: \"%s\",\n    past: \"%s\",\n    s: \"just now\",\n    m: \"a minute ago\",\n    mm: \"%d minutes ago\",\n    h: \"an hour ago\",\n    hh: \"%d hours ago\",\n    d: \"a day ago\",\n    dd: \"%d days ago\",\n    M: \"a month ago\",\n    MM: \"%d months ago\",\n    y: \"a year ago\",\n    yy: \"%d years ago\",\n  },\n});\n\nfunction requireImages() {\n  // client/app/assets/images/<path> => /images/<path>\n  const ctx = require.context(\"@/assets/images/\", true, /\\.(png|jpe?g|gif|svg)$/);\n  ctx.keys().forEach(ctx);\n}\n\nfunction registerExtensions() {\n  const context = require.context(\"extensions\", true, /^((?![\\\\/.]test[\\\\./]).)*\\.jsx?$/);\n  const modules = context\n    .keys()\n    .map(context)\n    .map(module => module.default);\n\n  return modules\n    .filter(isFunction)\n    .filter(f => f.init)\n    .map(f => f());\n}\n\nrequireImages();\nregisterExtensions();\n","import { isString } from \"lodash\";\nimport navigateTo from \"./navigateTo\";\n\nexport default function handleNavigationIntent(event) {\n  let element = event.target;\n  while (element) {\n    if (element.tagName === \"A\") {\n      break;\n    }\n    element = element.parentNode;\n  }\n  if (!element || !element.hasAttribute(\"href\") || element.hasAttribute(\"download\") || element.dataset.skipRouter) {\n    return;\n  }\n\n  // Keep some default behaviour\n  if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n    return;\n  }\n\n  const target = element.getAttribute(\"target\");\n  if (isString(target) && target.toLowerCase() === \"_blank\") {\n    return;\n  }\n\n  event.preventDefault();\n\n  navigateTo(element.href);\n}\n","import React from \"react\";\nimport Spin from \"antd/lib/spin\";\n\nSpin.setDefaultIndicator(\n  <span role=\"status\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n    <i className=\"fa fa-spinner fa-pulse\" aria-hidden=\"true\" />\n    <span className=\"sr-only\">Loading...</span>\n  </span>\n);\n","import notification from \"@/services/notification\";\n\nfunction addOnlineListener(notificationKey) {\n  function onlineStateHandler() {\n    notification.close(notificationKey);\n    window.removeEventListener(\"online\", onlineStateHandler);\n  }\n  window.addEventListener(\"online\", onlineStateHandler);\n}\n\nexport default {\n  init() {\n    window.addEventListener(\"offline\", () => {\n      notification.warning(\"Please check your Internet connection.\", null, {\n        key: \"connectionNotification\",\n        duration: null,\n      });\n      addOnlineListener(\"connectionNotification\");\n    });\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"@/config\";\n\nimport ApplicationArea from \"@/components/ApplicationArea\";\nimport offlineListener from \"@/services/offline-listener\";\n\nReactDOM.render(<ApplicationArea />, document.getElementById(\"application-root\"), () => {\n  offlineListener.init();\n});\n","import React, { useState, useEffect } from \"react\";\nimport routes from \"@/services/routes\";\nimport Router from \"./Router\";\nimport handleNavigationIntent from \"./handleNavigationIntent\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport default function ApplicationArea() {\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [unhandledError, setUnhandledError] = useState(null);\n\n  useEffect(() => {\n    if (currentRoute && currentRoute.title) {\n      document.title = currentRoute.title;\n    }\n  }, [currentRoute]);\n\n  useEffect(() => {\n    function globalErrorHandler(event) {\n      event.preventDefault();\n      if (event.message === \"Uncaught SyntaxError: Unexpected token '<'\") {\n        // if we see a javascript error on unexpected token where the unexpected token is '<', this usually means that a fallback html file (like index.html)\n        // was served as content of script rather than the expected script, give a friendlier message in the console on what could be going on\n        console.error(\n          `[Uncaught SyntaxError: Unexpected token '<'] usually means that a fallback html file was returned from server rather than the expected script. Check that the server is properly serving the file ${event.filename}.`\n        );\n      }\n      setUnhandledError(event.error);\n    }\n\n    document.body.addEventListener(\"click\", handleNavigationIntent, false);\n    window.addEventListener(\"error\", globalErrorHandler, false);\n\n    return () => {\n      document.body.removeEventListener(\"click\", handleNavigationIntent, false);\n      window.removeEventListener(\"error\", globalErrorHandler, false);\n    };\n  }, []);\n\n  if (unhandledError) {\n    return <ErrorMessage error={unhandledError} />;\n  }\n\n  return <Router routes={routes.items} onRouteChange={setCurrentRoute} />;\n}\n","export default __webpack_public_path__ + \"images/avatar.svg\";","var map = {\n\t\"./en-au\": 452,\n\t\"./en-au.js\": 452,\n\t\"./en-ca\": 453,\n\t\"./en-ca.js\": 453,\n\t\"./en-gb\": 454,\n\t\"./en-gb.js\": 454,\n\t\"./en-ie\": 455,\n\t\"./en-ie.js\": 455,\n\t\"./en-il\": 456,\n\t\"./en-il.js\": 456,\n\t\"./en-in\": 457,\n\t\"./en-in.js\": 457,\n\t\"./en-nz\": 458,\n\t\"./en-nz.js\": 458,\n\t\"./en-sg\": 459,\n\t\"./en-sg.js\": 459\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 732;"],"sourceRoot":""}